{
  "address": "0x9E6219b7befCEc8251C1c6f8CF608857AEa78e8e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pauser",
          "type": "address"
        },
        {
          "internalType": "contract IProviders",
          "name": "providers",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messageReceiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract INormalResourceController",
          "name": "_arStorageController",
          "type": "address"
        }
      ],
      "name": "ARStorageControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract INormalResourceController",
          "name": "_bandwidthController",
          "type": "address"
        }
      ],
      "name": "BandwidthControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract INormalResourceController",
          "name": "_buildingTimeController",
          "type": "address"
        }
      ],
      "name": "BuildingTimeControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IIPFSStorageController",
          "name": "_ipfsStorageController",
          "type": "address"
        }
      ],
      "name": "IPFSStorageControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "messageReceiver",
          "type": "address"
        }
      ],
      "name": "MessageReceiverUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "NativeWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "account",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "enum ResourceData.ResourceType",
                  "name": "resourceType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct ResourceData.Payload[]",
              "name": "payloads",
              "type": "tuple[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IDstChainPayment.PaymentPayload",
          "name": "payload",
          "type": "tuple"
        }
      ],
      "name": "Paid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IProviders",
          "name": "providers",
          "type": "address"
        }
      ],
      "name": "ProvidersUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ProvidetWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pauser",
          "type": "address"
        },
        {
          "internalType": "contract IProviders",
          "name": "providers",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messageReceiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "Init_Payment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "arStorageController",
      "outputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bandwidthController",
      "outputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buildingTimeController",
      "outputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "enum ResourceData.ResourceType",
              "name": "resourceType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ResourceData.Payload[]",
          "name": "payloads",
          "type": "tuple[]"
        }
      ],
      "name": "convertSourceChainPayloads",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum ResourceData.ResourceType",
              "name": "resourceType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ResourceData.Payload[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "decodeSourceChainMessage",
      "outputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes32",
          "name": "account",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "enum ResourceData.ResourceType",
              "name": "resourceType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ResourceData.Payload[]",
          "name": "payloads",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ipfsStorageController",
      "outputs": [
        {
          "internalType": "contract IIPFSStorageController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pausers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "account",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "enum ResourceData.ResourceType",
                  "name": "resourceType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct ResourceData.Payload[]",
              "name": "payloads",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IDstChainPayment.PaymentPayload",
          "name": "payload",
          "type": "tuple"
        }
      ],
      "name": "pay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "dstAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "payFromSourceChain",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "providerBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "providerWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "providers",
      "outputs": [
        {
          "internalType": "contract IProviders",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "_arStorageController",
          "type": "address"
        }
      ],
      "name": "setARStorageController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "_bandwidthController",
          "type": "address"
        }
      ],
      "name": "setBandwidthController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "_buildingTimeController",
          "type": "address"
        }
      ],
      "name": "setBuildingTimeController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IIPFSStorageController",
          "name": "_ipfsStorageController",
          "type": "address"
        }
      ],
      "name": "setIPFSStorageController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageReceiver",
          "type": "address"
        }
      ],
      "name": "setMessageReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum ResourceData.ResourceType",
              "name": "resourceType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ResourceData.Payload[]",
          "name": "payloads",
          "type": "tuple[]"
        }
      ],
      "name": "totalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdrawNative",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8620d7e4aac0979a83b052e2b04cc0b95f140cf8555833cd41366a1379b53c18",
  "receipt": {
    "to": null,
    "from": "0xF1658C608708172655A8e70a1624c29F956Ee63D",
    "contractAddress": "0x9E6219b7befCEc8251C1c6f8CF608857AEa78e8e",
    "transactionIndex": 6,
    "gasUsed": "2895723",
    "logsBloom": "0x
    "blockHash": "0xf5a19f3e2882812008ba11f5d32617ece49b82f04be9a623440b7a874afc242d",
    "transactionHash": "0x8620d7e4aac0979a83b052e2b04cc0b95f140cf8555833cd41366a1379b53c18",
    "logs": [
      {
        "transactionIndex": 6,
        "blockNumber": 19064955,
        "transactionHash": "0x8620d7e4aac0979a83b052e2b04cc0b95f140cf8555833cd41366a1379b53c18",
        "address": "0x9E6219b7befCEc8251C1c6f8CF608857AEa78e8e",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f1658c608708172655a8e70a1624c29f956ee63d"
        ],
        "data": "0x",
        "logIndex": 18,
        "blockHash": "0xf5a19f3e2882812008ba11f5d32617ece49b82f04be9a623440b7a874afc242d"
      },
      {
        "transactionIndex": 6,
        "blockNumber": 19064955,
        "transactionHash": "0x8620d7e4aac0979a83b052e2b04cc0b95f140cf8555833cd41366a1379b53c18",
        "address": "0x9E6219b7befCEc8251C1c6f8CF608857AEa78e8e",
        "topics": [
          "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8"
        ],
        "data": "0x000000000000000000000000f1658c608708172655a8e70a1624c29f956ee63d",
        "logIndex": 19,
        "blockHash": "0xf5a19f3e2882812008ba11f5d32617ece49b82f04be9a623440b7a874afc242d"
      },
      {
        "transactionIndex": 6,
        "blockNumber": 19064955,
        "transactionHash": "0x8620d7e4aac0979a83b052e2b04cc0b95f140cf8555833cd41366a1379b53c18",
        "address": "0x9E6219b7befCEc8251C1c6f8CF608857AEa78e8e",
        "topics": [
          "0xe63288198842f0dacdcbdc3f22dcd4e473d1f3cee7e10603ae6ddc3e667c5284"
        ],
        "data": "0x000000000000000000000000033b7570b5f789f6db1a280f9e784cac65f4d942",
        "logIndex": 20,
        "blockHash": "0xf5a19f3e2882812008ba11f5d32617ece49b82f04be9a623440b7a874afc242d"
      },
      {
        "transactionIndex": 6,
        "blockNumber": 19064955,
        "transactionHash": "0x8620d7e4aac0979a83b052e2b04cc0b95f140cf8555833cd41366a1379b53c18",
        "address": "0x9E6219b7befCEc8251C1c6f8CF608857AEa78e8e",
        "topics": [
          "0xafe9b28ca24a54df8c44769c685f7b92824aae021cdfcaa4719d493571a23c4c"
        ],
        "data": "0x000000000000000000000000a5b142d374982b08a95b9c0ab221975de0109ed1",
        "logIndex": 21,
        "blockHash": "0xf5a19f3e2882812008ba11f5d32617ece49b82f04be9a623440b7a874afc242d"
      },
      {
        "transactionIndex": 6,
        "blockNumber": 19064955,
        "transactionHash": "0x8620d7e4aac0979a83b052e2b04cc0b95f140cf8555833cd41366a1379b53c18",
        "address": "0x9E6219b7befCEc8251C1c6f8CF608857AEa78e8e",
        "topics": [
          "0x5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e30"
        ],
        "data": "0x0000000000000000000000007d43aabc515c356145049227cee54b608342c0ad",
        "logIndex": 22,
        "blockHash": "0xf5a19f3e2882812008ba11f5d32617ece49b82f04be9a623440b7a874afc242d"
      }
    ],
    "blockNumber": 19064955,
    "cumulativeGasUsed": "3648630",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xF1658C608708172655A8e70a1624c29F956Ee63D",
    "0xF1658C608708172655A8e70a1624c29F956Ee63D",
    "0x033B7570B5f789f6Db1A280f9e784cAc65F4d942",
    "0xA5B142d374982B08A95B9c0AB221975dE0109eD1",
    "0x7d43AABC515C356145049227CeE54B608342c0ad"
  ],
  "solcInputHash": "4a5f2ec43e2694c7d59c6f445ff0e705",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"contract IProviders\",\"name\":\"providers\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"messageReceiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract INormalResourceController\",\"name\":\"_arStorageController\",\"type\":\"address\"}],\"name\":\"ARStorageControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract INormalResourceController\",\"name\":\"_bandwidthController\",\"type\":\"address\"}],\"name\":\"BandwidthControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract INormalResourceController\",\"name\":\"_buildingTimeController\",\"type\":\"address\"}],\"name\":\"BuildingTimeControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IIPFSStorageController\",\"name\":\"_ipfsStorageController\",\"type\":\"address\"}],\"name\":\"IPFSStorageControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"messageReceiver\",\"type\":\"address\"}],\"name\":\"MessageReceiverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NativeWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct IDstChainPayment.PaymentPayload\",\"name\":\"payload\",\"type\":\"tuple\"}],\"name\":\"Paid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IProviders\",\"name\":\"providers\",\"type\":\"address\"}],\"name\":\"ProvidersUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ProvidetWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"contract IProviders\",\"name\":\"providers\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"messageReceiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"Init_Payment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arStorageController\",\"outputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bandwidthController\",\"outputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buildingTimeController\",\"outputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"name\":\"convertSourceChainPayloads\",\"outputs\":[{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"decodeSourceChainMessage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsStorageController\",\"outputs\":[{\"internalType\":\"contract IIPFSStorageController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pausers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IDstChainPayment.PaymentPayload\",\"name\":\"payload\",\"type\":\"tuple\"}],\"name\":\"pay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dstAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"payFromSourceChain\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"providerBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"providerWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"providers\",\"outputs\":[{\"internalType\":\"contract IProviders\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"_arStorageController\",\"type\":\"address\"}],\"name\":\"setARStorageController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"_bandwidthController\",\"type\":\"address\"}],\"name\":\"setBandwidthController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"_buildingTimeController\",\"type\":\"address\"}],\"name\":\"setBuildingTimeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIPFSStorageController\",\"name\":\"_ipfsStorageController\",\"type\":\"address\"}],\"name\":\"setIPFSStorageController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageReceiver\",\"type\":\"address\"}],\"name\":\"setMessageReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"name\":\"totalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawNative\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/payment/DstChainPayment.sol\":\"DstChainPayment\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/IERC20Upgradeable.sol\\\";\\n\",\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMathUpgradeable {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\"},\"contracts/access/OwnerWithdrawable.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol';\\n\\nabstract contract OwnerWithdrawable is OwnableUpgradeable  {\\n\\tusing SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n\\tevent Withdrawal(IERC20Upgradeable token, address to, uint256 value);\\n\\n\\tevent NativeWithdrawal(address to, uint256 value);\\n\\n\\tfunction withdraw(IERC20Upgradeable token, address to, uint256 value) external onlyOwner {\\n\\t\\ttoken.safeTransfer(to, value);\\n\\t\\temit Withdrawal(token, to, value);\\n\\t}\\n\\n\\tfunction withdrawNative(address payable to, uint256 value) external onlyOwner {\\n\\t\\tbool success = to.send(value);\\n\\t\\trequire(success, 'Payment: withdraw native token failed');\\n\\t\\temit NativeWithdrawal(to, value);\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x795ed1ca0da5ab6d318f00a9752a7dbef4173466e34e4cca658496d0675cc7f1\",\"license\":\"UNLICENSE\"},\"contracts/access/Pauser.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol';\\n\\nabstract contract Pauser is OwnableUpgradeable, PausableUpgradeable {\\n\\tmapping(address => bool) public pausers;\\n\\n\\tevent PauserAdded(address account);\\n\\tevent PauserRemoved(address account);\\n\\n\\tfunction __Init_Pauser(address account) internal onlyInitializing {\\n\\t\\t_addPauser(account);\\n\\t}\\n\\n\\tmodifier onlyPauser() {\\n\\t\\trequire(isPauser(msg.sender), 'Pauser: Caller is not pauser');\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction pause() public onlyPauser {\\n\\t\\t_pause();\\n\\t}\\n\\n\\tfunction unpause() public onlyPauser {\\n\\t\\t_unpause();\\n\\t}\\n\\n\\tfunction isPauser(address account) public view returns (bool) {\\n\\t\\treturn pausers[account];\\n\\t}\\n\\n\\tfunction addPauser(address account) public onlyOwner {\\n\\t\\t_addPauser(account);\\n\\t}\\n\\n\\tfunction removePauser(address account) public onlyOwner {\\n\\t\\t_removePauser(account);\\n\\t}\\n\\n\\tfunction renouncePauser() public {\\n\\t\\t_removePauser(msg.sender);\\n\\t}\\n\\n\\tfunction _addPauser(address account) private {\\n\\t\\trequire(!isPauser(account), 'Pauser: Account is already pauser');\\n\\t\\tpausers[account] = true;\\n\\t\\temit PauserAdded(account);\\n\\t}\\n\\n\\tfunction _removePauser(address account) private {\\n\\t\\trequire(isPauser(account), 'Pauser: Account is not pauser');\\n\\t\\tpausers[account] = false;\\n\\t\\temit PauserRemoved(account);\\n\\t}\\n}\\n\",\"keccak256\":\"0xc389407247a71425c067105ba1dbf04816e70f648e85f374a69b1cb72c40cb4c\",\"license\":\"GPL-3.0-only\"},\"contracts/interfaces/IDstChainPayment.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol';\\nimport '../libraries/ResourceData.sol';\\n\\ninterface IDstChainPayment {\\n\\n\\tstruct PaymentPayload {\\n\\t\\taddress provider;\\n\\t\\tuint64 nonce;\\n\\t\\tbytes32 account;\\n\\t\\tResourceData.Payload[] payloads;\\n\\t}\\n\\n\\tevent TokenUpdated(IERC20Upgradeable token);\\n\\n\\tevent Paid(address payer, IERC20Upgradeable token, PaymentPayload payload);\\n\\n\\tevent ProvidetWithdraw(address provider, IERC20Upgradeable token, address to, uint256 value);\\n\\n\\tfunction payFromSourceChain(\\n\\t\\tIERC20Upgradeable token,\\n\\t\\tuint256 amount,\\n\\t\\tbytes calldata message\\n\\t) external returns (uint256 value);\\n\\n\\tfunction pay(PaymentPayload memory payload) external returns (uint256 value);\\n\\n}\\n\",\"keccak256\":\"0xc3813dbd193aa5441b0b25adc1167593b210809669c4a4587f11cd9f27a16f1f\",\"license\":\"UNLICENSE\"},\"contracts/interfaces/IProviders.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\ninterface IProviders {\\n\\tevent ProviderUpdated(address provider, address wallet);\\n\\n\\tevent RemoveProvider(address provider);\\n\\n\\tfunction isProvider(address provider) external view returns (bool);\\n\\n\\tfunction wallets(address provider) external view returns (address);\\n\\n\\tfunction isValidSignature(\\n\\t\\taddress provider,\\n\\t\\tbytes32 hash,\\n\\t\\tbytes memory signature\\n\\t) external returns (bool);\\n}\\n\",\"keccak256\":\"0xfe5c997043f05e2b105bbbfe9d006d7f2d0049f20ba6b2b74cc397cc65be2f77\",\"license\":\"UNLICENSE\"},\"contracts/interfaces/IProvidersWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '../interfaces/IProviders.sol';\\n\\ninterface IProvidersWrapper {\\n\\tevent ProvidersUpdated(IProviders providers);\\n\\n\\tfunction providers() external view returns (IProviders);\\n}\\n\",\"keccak256\":\"0x1d2ca264ab54ad537468faa0deb6ec04ec367fc013b31ed20debe31842eae560\",\"license\":\"UNLICENSE\"},\"contracts/libraries/ResourceData.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nlibrary ResourceData {\\n\\n\\tenum ResourceType {\\n\\t\\tNull,\\n\\t\\tBuildingTime,\\n\\t\\tBandwidth,\\n\\t\\tARStorage,\\n\\t\\tIPFSStorage\\n\\t}\\n\\n\\tstruct Payload {\\n\\t\\tResourceData.ResourceType resourceType;\\n\\t\\tuint256[] values;\\n\\t}\\n\\n}\",\"keccak256\":\"0xdb575db840fd52f2ae05d464d6626137508ed25bc308badaa6badfdbed25b578\",\"license\":\"UNLICENSE\"},\"contracts/messages/MessageReceiverWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\n\\nabstract contract MessageReceiverWrapper is OwnableUpgradeable {\\n\\taddress public messageReceiver;\\n\\n\\tevent MessageReceiverUpdated(address messageReceiver);\\n\\n\\tmodifier onlyMessageReceiver() {\\n\\t\\trequire(msg.sender == messageReceiver, 'MessageReceiverWrapper: caller is not message receiver');\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction __Init_Message_Receiver(address _messageReceiver) internal onlyInitializing {\\n\\t\\t_setMessageReceiver(_messageReceiver);\\n\\t}\\n\\n\\tfunction setMessageReceiver(address _messageReceiver) external onlyOwner {\\n\\t\\t_setMessageReceiver(_messageReceiver);\\n\\t}\\n\\n\\tfunction _setMessageReceiver(address _messageReceiver) internal {\\n\\t\\tmessageReceiver = _messageReceiver;\\n\\t\\temit MessageReceiverUpdated(_messageReceiver);\\n\\t}\\n\\n}\",\"keccak256\":\"0xb04a31226c0fc2c345ece6675f3a613f3f07d49034c2a012f769d2ad4fb68346\",\"license\":\"GPL-3.0-only\"},\"contracts/payment/DstChainPayment.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol';\\n\\nimport '../resources/ControllersWrapper.sol';\\nimport '../interfaces/IDstChainPayment.sol';\\nimport '../providers/ProvidersWrapper.sol';\\nimport '../messages/MessageReceiverWrapper.sol';\\nimport '../access/OwnerWithdrawable.sol';\\nimport './ResourPayloadTool.sol';\\n\\ncontract DstChainPayment is\\n\\tIDstChainPayment,\\n\\tResourPayloadTool,\\n\\tMessageReceiverWrapper,\\n\\tReentrancyGuardUpgradeable,\\n\\tProvidersWrapper,\\n\\tControllersWrapper,\\n\\tOwnerWithdrawable\\n{\\n\\tusing SafeMathUpgradeable for uint256;\\n\\tusing SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n\\tIERC20Upgradeable public token;\\n\\n\\tmapping(address => uint256) public providerBalances;\\n\\n\\tconstructor(\\n\\t\\taddress owner,\\n\\t\\taddress pauser,\\n\\t\\tIProviders providers,\\n\\t\\taddress messageReceiver,\\n\\t\\tIERC20Upgradeable token\\n\\t) initializer {\\n\\t\\t_transferOwnership(owner);\\n\\t\\t__Init_Pauser(pauser);\\n\\t\\t__Init_Providers(providers);\\n\\t\\t__Init_Message_Receiver(messageReceiver);\\n\\t\\t__Init_Token(token);\\n\\t}\\n\\n\\tfunction Init_Payment(\\n\\t\\taddress owner,\\n\\t\\taddress pauser,\\n\\t\\tIProviders providers,\\n\\t\\taddress messageReceiver,\\n\\t\\tIERC20Upgradeable token\\n\\t) external initializer {\\n\\t\\t_transferOwnership(owner);\\n\\t\\t__Init_Pauser(pauser);\\n\\t\\t__Init_Providers(providers);\\n\\t\\t__Init_Message_Receiver(messageReceiver);\\n\\t\\t__Init_Token(token);\\n\\t}\\n\\n\\tfunction __Init_Token(IERC20Upgradeable _token) internal onlyInitializing {\\n\\t\\t_setToken(_token);\\n\\t}\\n\\n\\tfunction convertSourceChainPayloads(uint256 amount, ResourceData.Payload[] memory payloads) public view returns (ResourceData.Payload[] memory) {\\n\\t\\treturn _convertSourceChainPayloads(amount, payloads);\\n\\t}\\n\\n\\tfunction payFromSourceChain(\\n\\t\\tIERC20Upgradeable _token,\\n\\t\\tuint256 dstAmount,\\n\\t\\tbytes calldata message\\n\\t) external override onlyMessageReceiver whenNotPaused nonReentrant returns (uint256 value) {\\n\\t\\trequire(token == _token, 'DstChainPayment: invalid token');\\n\\t\\t(address provider, uint64 nonce, bytes32 account, ResourceData.Payload[] memory payloads) = decodeSourceChainMessage(message);\\n\\t\\tPaymentPayload memory payload = PaymentPayload(provider, nonce, account, _convertSourceChainPayloads(matchResourceDecimals(dstAmount), payloads));\\n\\t\\treturn _pay(payload);\\n\\t}\\n\\n\\tfunction pay(PaymentPayload memory payload) public override whenNotPaused nonReentrant returns (uint256 value) {\\n\\t\\treturn _pay(payload);\\n\\t}\\n\\n\\tfunction _pay(PaymentPayload memory payload) internal returns (uint256 value) {\\n\\t\\trequire(providers.isProvider(payload.provider), 'DstChainPayment: nonexistent provider');\\n\\t\\tvalue = _processPayloads(payload.account, payload.payloads);\\n\\t\\tvalue = matchTokenDecimals(value);\\n\\t\\ttoken.safeTransferFrom(msg.sender, address(this), value);\\n\\t\\tproviderBalances[payload.provider] = providerBalances[payload.provider].add(value);\\n\\n\\t\\temit Paid(msg.sender, token, payload);\\n\\t}\\n\\n\\tfunction _processPayloads(bytes32 account, ResourceData.Payload[] memory payloads) internal returns (uint256 value) {\\n\\t\\trequire(payloads.length > 0, 'DstChainPayment: invalid payloads');\\n\\t\\tfor (uint256 i = 0; i < payloads.length; i++) {\\n\\t\\t\\tResourceData.Payload memory payload = payloads[i];\\n\\t\\t\\tif (payload.resourceType == ResourceData.ResourceType.BuildingTime) {\\n\\t\\t\\t\\tvalue = value.add(_processNormalResource(buildingTimeController, account, payload));\\n\\t\\t\\t} else if (payload.resourceType == ResourceData.ResourceType.ARStorage) {\\n\\t\\t\\t\\tvalue = value.add(_processNormalResource(arStorageController, account, payload));\\n\\t\\t\\t} else if (payload.resourceType == ResourceData.ResourceType.Bandwidth) {\\n\\t\\t\\t\\tvalue = value.add(_processNormalResource(bandwidthController, account, payload));\\n\\t\\t\\t} else if (payload.resourceType == ResourceData.ResourceType.IPFSStorage) {\\n\\t\\t\\t\\tvalue = value.add(_processIPFSStorage(ipfsStorageController, account, payload));\\n\\t\\t\\t} else {\\n\\t\\t\\t\\trevert('DstChainPayment: unknown resource type');\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfunction matchResourceDecimals(uint256 amount) internal view returns (uint256 value) {\\n\\t\\treturn amount.mul(10**12);\\n\\t}\\n\\n\\tfunction matchTokenDecimals(uint256 amount) internal view returns (uint256 value) {\\n\\t\\treturn amount.div(10**12);\\n\\t}\\n\\n\\tfunction _processNormalResource(\\n\\t\\tINormalResourceController controller,\\n\\t\\tbytes32 account,\\n\\t\\tResourceData.Payload memory payload\\n\\t) internal returns (uint256 value) {\\n\\t\\trequire(payload.values.length == 1, 'DstChainPayment: invalid token value length');\\n\\t\\treturn controller.expand(account, payload.values[0]);\\n\\t}\\n\\n\\tfunction _processIPFSStorage(\\n\\t\\tIIPFSStorageController controller,\\n\\t\\tbytes32 account,\\n\\t\\tResourceData.Payload memory payload\\n\\t) internal returns (uint256 value) {\\n\\t\\trequire(payload.values.length == 2, 'DstChainPayment: invalid token value length');\\n\\t\\treturn controller.expand(account, payload.values[0], payload.values[1]);\\n\\t}\\n\\n\\tfunction providerWithdraw(\\n\\t\\tIERC20Upgradeable token,\\n\\t\\taddress to,\\n\\t\\tuint256 value\\n\\t) external whenNotPaused nonReentrant {\\n\\t\\trequire(providers.isProvider(msg.sender), 'DstChainPayment: caller is not a provider');\\n\\t\\trequire(providerBalances[msg.sender] >= value, 'DstChainPayment: insufficient provider balance');\\n\\t\\tproviderBalances[msg.sender] = providerBalances[msg.sender].sub(value);\\n\\t\\ttoken.safeTransfer(to, value);\\n\\n\\t\\temit ProvidetWithdraw(msg.sender, token, to, value);\\n\\t}\\n\\n\\tfunction setToken(IERC20Upgradeable _token) external onlyOwner {\\n\\t\\t_setToken(_token);\\n\\t}\\n\\n\\tfunction _setToken(IERC20Upgradeable _token) internal {\\n\\t\\ttoken = _token;\\n\\t\\temit TokenUpdated(_token);\\n\\t}\\n\\n\\tfunction decodeSourceChainMessage(bytes memory message)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\treturns (\\n\\t\\t\\taddress provider,\\n\\t\\t\\tuint64 nonce,\\n\\t\\t\\tbytes32 account,\\n\\t\\t\\tResourceData.Payload[] memory payloads\\n\\t\\t)\\n\\t{\\n\\t\\t(provider, nonce, account, payloads) = abi.decode(message, (address, uint64, bytes32, ResourceData.Payload[]));\\n\\t}\\n}\\n\",\"keccak256\":\"0xd753006bd4616105aeea852cb9bf551c884ff2a702af9bad70b002f99cbbaeca\",\"license\":\"GPL-3.0-only\"},\"contracts/payment/ResourPayloadTool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol';\\n\\nimport '../libraries/ResourceData.sol';\\n\\nabstract contract ResourPayloadTool {\\n\\tusing SafeMathUpgradeable for uint256;\\n\\n\\tfunction _convertSourceChainPayloads(uint256 dstAmount, ResourceData.Payload[] memory payloads) internal pure returns (ResourceData.Payload[] memory newPayloads) {\\n\\t\\trequire(payloads.length > 0, 'ResourPayloadTool: invalid payload length');\\n\\t\\tuint256 total = totalValue(payloads);\\n\\t\\trequire(total > 0, 'ResourPayloadTool: zero values');\\n\\t\\tfor (uint256 i = 0; i < payloads.length; i++) {\\n\\t\\t\\trequire(payloads[i].values.length > 0, 'ResourPayloadTool: invalid value length');\\n\\t\\t\\tfor (uint256 j = 0; j < payloads[i].values.length; j++) {\\n\\t\\t\\t\\tpayloads[i].values[j] = payloads[i].values[j].mul(dstAmount).div(total);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn payloads;\\n\\t}\\n\\n\\tfunction totalValue(ResourceData.Payload[] memory payloads) public pure returns (uint256 value) {\\n\\t\\trequire(payloads.length > 0, 'ResourPayloadTool: invalid payloads length');\\n\\t\\tfor (uint256 i = 0; i < payloads.length; i++) {\\n\\t\\t\\tfor (uint256 j = 0; j < payloads[i].values.length; j++) {\\n\\t\\t\\t\\tvalue = value.add(payloads[i].values[j]);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x3d47b32c00baedbe7198b911baf686b320d901cf2e4472999f98418caa28ba9f\",\"license\":\"GPL-3.0-only\"},\"contracts/providers/ProvidersWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\nimport '../access/Pauser.sol';\\nimport '../interfaces/IProvidersWrapper.sol';\\n\\nabstract contract ProvidersWrapper is IProvidersWrapper, Pauser {\\n\\tIProviders public override providers;\\n\\n\\tfunction __Init_Providers(IProviders _providers) internal onlyInitializing {\\n\\t\\t_setProviders(_providers);\\n\\t}\\n\\n\\tfunction _setProviders(IProviders _providers) internal {\\n\\t\\tproviders = _providers;\\n\\t\\temit ProvidersUpdated(_providers);\\n\\t}\\n}\\n\",\"keccak256\":\"0x42a8d8694c5b5f3858788b270b57660ce7c14a1abef3e8a534fa985d78e41391\",\"license\":\"UNLICENSE\"},\"contracts/resources/ControllersWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport '../resources/interfaces/INormalResourceController.sol';\\nimport '../resources/interfaces/IIPFSStorageController.sol';\\n\\nabstract contract ControllersWrapper is OwnableUpgradeable {\\n\\n\\tINormalResourceController public buildingTimeController;\\n\\n\\tINormalResourceController public bandwidthController;\\n\\n\\tINormalResourceController public arStorageController;\\n\\n\\tIIPFSStorageController public ipfsStorageController;\\n\\n\\tevent BuildingTimeControllerUpdated(INormalResourceController _buildingTimeController);\\n\\n\\tevent BandwidthControllerUpdated(INormalResourceController _bandwidthController);\\n\\n\\tevent ARStorageControllerUpdated(INormalResourceController _arStorageController);\\n\\n\\tevent IPFSStorageControllerUpdated(IIPFSStorageController _ipfsStorageController);\\n\\n\\tfunction setBuildingTimeController(INormalResourceController _buildingTimeController) external onlyOwner {\\n\\t\\t_setBuildingTimeController(_buildingTimeController);\\n\\t}\\n\\n\\tfunction setBandwidthController(INormalResourceController _bandwidthController) external onlyOwner {\\n\\t\\t_setBandwidthController(_bandwidthController);\\n\\t}\\n\\n\\tfunction setARStorageController(INormalResourceController _arStorageController) external onlyOwner {\\n\\t\\t_setARStorageController(_arStorageController);\\n\\t}\\n\\n\\tfunction setIPFSStorageController(IIPFSStorageController _ipfsStorageController) external onlyOwner {\\n\\t\\t_setIPFSStorageController(_ipfsStorageController);\\n\\t}\\n\\n\\tfunction _setBuildingTimeController(INormalResourceController _buildingTimeController) internal {\\n\\t\\tbuildingTimeController = _buildingTimeController;\\n\\t\\temit BuildingTimeControllerUpdated(_buildingTimeController);\\n\\t}\\n\\n\\tfunction _setBandwidthController(INormalResourceController _bandwidthController) internal {\\n\\t\\tbandwidthController = _bandwidthController;\\n\\t\\temit BandwidthControllerUpdated(_bandwidthController);\\n\\t}\\n\\n\\tfunction _setARStorageController(INormalResourceController _arStorageController) internal {\\n\\t\\tarStorageController = _arStorageController;\\n\\t\\temit ARStorageControllerUpdated(_arStorageController);\\n\\t}\\n\\n\\tfunction _setIPFSStorageController(IIPFSStorageController _ipfsStorageController) internal {\\n\\t\\tipfsStorageController = _ipfsStorageController;\\n\\t\\temit IPFSStorageControllerUpdated(_ipfsStorageController);\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x940019f75ae5cd36393f33cf0f73a5c8afa6da4e5c586166ef9115c0626a49dc\",\"license\":\"GPL-3.0-only\"},\"contracts/resources/interfaces/IAdaptorWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '../interfaces/IResourceAdaptor.sol';\\nimport '../../libraries/ResourceData.sol';\\n\\ninterface IAdaptorWrapper {\\n\\tevent ResourceAdaptorUpdated(IResourceAdaptor adaptor);\\n\\n\\tevent ResourceTypeUpdated(ResourceData.ResourceType resourceType);\\n\\n\\tfunction adaptor() external view returns (IResourceAdaptor);\\n\\n\\tfunction resourceType() external view returns (ResourceData.ResourceType);\\n\\n\\tfunction price() external view returns (uint256);\\n\\n\\tfunction getValueOf(uint256 amount) external view returns (uint256);\\n\\n\\tfunction getAmountOf(uint256 value) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd34f9e364967a82a04fea655b14e3d70c214f3735737cf59f7643fbaeaa6f735\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/IIPFSStorageController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\nimport '@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol';\\nimport './IAdaptorWrapper.sol';\\n\\ninterface IIPFSStorageController is IAdaptorWrapper {\\n\\tstruct IPFSStorage {\\n\\t\\tuint256 startTime;\\n\\t\\tuint256 expiration;\\n\\t\\tuint256 amount;\\n\\t}\\n\\n\\tevent Expanded(bytes32 account, uint256 expandedStorageFee, uint256 expandedExpirationFee);\\n\\n\\tfunction expand(\\n\\t\\tbytes32 account,\\n\\t\\tuint256 expandedStorageFee,\\n\\t\\tuint256 expandedExpirationFee\\n\\t) external returns (uint256);\\n\\n\\tfunction isExpired(bytes32 account) external view returns (bool);\\n\\n\\tfunction startTime(bytes32 account) external view returns (uint256);\\n\\n\\tfunction availableExpiration(bytes32 account) external view returns (uint256);\\n\\n\\tfunction expiration(bytes32 account) external view returns (uint256);\\n\\n\\tfunction expiredAt(bytes32 account) external view returns (uint256);\\n\\n\\tfunction balanceOf(bytes32 account) external view returns (uint256);\\n\\n\\tfunction expandedFee(\\n\\t\\tbytes32 account,\\n\\t\\tuint256 expandedStorage,\\n\\t\\tuint256 expandedExpiration\\n\\t) external view returns (uint256 expandedStorageFee, uint256 expandedExpirationFee);\\n\\n\\tfunction expansions(\\n\\t\\tbytes32 account,\\n\\t\\tuint256 expandedStorageFee,\\n\\t\\tuint256 expandedExpirationFee\\n\\t) external view returns (uint256 expandedStorage, uint256 expandedExpiration);\\n}\\n\",\"keccak256\":\"0xda13c1cb10e7860d2776f95ef597f349c8b047f9f1a0ad6adde71dc2caa70a00\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/INormalResourceController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport './IAdaptorWrapper.sol';\\n\\ninterface INormalResourceController is IAdaptorWrapper {\\n\\tevent Expanded(bytes32 account, uint256 value);\\n\\n\\tfunction expand(bytes32 account, uint256 value) external returns(uint256);\\n\\n\\tfunction balanceOf(bytes32 account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x73706ccbe9c3696d385acbd5ed0e45a424421f212bf9f1b726717fee0190bb33\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/IResourceAdaptor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '../../libraries/ResourceData.sol';\\n\\ninterface IResourceAdaptor {\\n\\n\\tfunction priceAt(ResourceData.ResourceType resourceType, uint256 _indexBlock) external view returns (uint256);\\n\\n\\tfunction getValueAt(\\n\\t\\tResourceData.ResourceType resourceType,\\n\\t\\tuint256 amount,\\n\\t\\tuint256 _indexBlock\\n\\t) external view returns (uint256);\\n\\n\\tfunction getAmountAt(\\n\\t\\tResourceData.ResourceType resourceType,\\n\\t\\tuint256 value,\\n\\t\\tuint256 _indexBlock\\n\\t) external view returns (uint256);\\n\\n\\tfunction priceOf(ResourceData.ResourceType resourceType) external view returns (uint256);\\n\\n\\tfunction getValueOf(ResourceData.ResourceType resourceType, uint256 amount) external view returns (uint256);\\n\\n\\tfunction getAmountOf(ResourceData.ResourceType resourceType, uint256 value) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf60bb837ce179f97f69cc642ef0b775cc58c952824869b89df3d29729133b738\",\"license\":\"UNLICENSE\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620036a0380380620036a0833981016040819052620000349162000431565b600054610100900460ff16620000515760005460ff16156200005b565b6200005b620000fc565b620000835760405162461bcd60e51b81526004016200007a9062000503565b60405180910390fd5b600054610100900460ff16158015620000a6576000805461ffff19166101011790555b620000b1866200011a565b620000bc856200016c565b620000c784620001a4565b620000d283620001d9565b620000dd826200020e565b8015620000f0576000805461ff00191690555b50505050505062000629565b600062000114306200024360201b62000daa1760201c565b15905090565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16620001965760405162461bcd60e51b81526004016200007a906200055e565b620001a18162000252565b50565b600054610100900460ff16620001ce5760405162461bcd60e51b81526004016200007a906200055e565b620001a181620002ee565b600054610100900460ff16620002035760405162461bcd60e51b81526004016200007a906200055e565b620001a1816200033b565b600054610100900460ff16620002385760405162461bcd60e51b81526004016200007a906200055e565b620001a18162000388565b6001600160a01b03163b151590565b6001600160a01b038116600090815260ca602052604090205460ff16156200028e5760405162461bcd60e51b81526004016200007a90620005af565b6001600160a01b038116600090815260ca602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890620002e3908390620005d2565b60405180910390a150565b60cb80546001600160a01b0319166001600160a01b0383161790556040517fe63288198842f0dacdcbdc3f22dcd4e473d1f3cee7e10603ae6ddc3e667c528490620002e390839062000619565b606580546001600160a01b0319166001600160a01b0383161790556040517fafe9b28ca24a54df8c44769c685f7b92824aae021cdfcaa4719d493571a23c4c90620002e3908390620005d2565b60d080546001600160a01b0319166001600160a01b0383161790556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3090620002e390839062000619565b60006001600160a01b0382165b92915050565b620003f381620003d5565b8114620001a157600080fd5b8051620003e281620003e8565b6000620003e282620003d5565b620003f3816200040c565b8051620003e28162000419565b600080600080600060a086880312156200044e576200044e600080fd5b60006200045c8888620003ff565b95505060206200046f88828901620003ff565b9450506040620004828882890162000424565b93505060606200049588828901620003ff565b9250506080620004a88882890162000424565b9150509295509295909350565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291505b5060400190565b60208082528101620003e281620004b5565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150620004fc565b60208082528101620003e28162000515565b602181526000602082017f5061757365723a204163636f756e7420697320616c72656164792070617573658152603960f91b60208201529150620004fc565b60208082528101620003e28162000570565b620005cc81620003d5565b82525050565b60208101620003e28284620005c1565b60006001600160a01b038216620003e2565b6000620003e282620005e2565b6000620003e282620005f4565b620005cc8162000601565b60208101620003e282846200060e565b61306780620006396000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806377ef533c1161011a578063bb371111116100ad578063e84372491161007c578063e843724914610471578063f2fde38b14610484578063f8401fe614610497578063f8f071fa146104aa578063fc0c546a146104bd57600080fd5b8063bb37111114610415578063bd16997514610428578063d9caed121461044b578063e2cae9f51461045e57600080fd5b80638456cb59116100e95780638456cb59146103cd5780638da5cb5b146103d5578063914fd2c3146103ef578063b05f87a81461040257600080fd5b806377ef533c146103715780637a7fa7531461038457806380f51c121461039757806382dc1ec4146103ba57600080fd5b80634540a85b1161019d5780635618ce2d1161016c5780635618ce2d146103235780635c975abb146103435780636b2c0f551461034e5780636ef8d66d14610361578063715018a61461036957600080fd5b80634540a85b146102ca57806346fbf68e146102dd578063490e4fa2146102fd57806349ea49e01461031057600080fd5b806328ac7f2c116101d957806328ac7f2c1461026f57806329dbfc751461029c5780633b8ccfb1146102af5780633f4ba83a146102c257600080fd5b806307b18bde1461020b578063144fa6d71461022057806315e07769146102335780632413c1271461025c575b600080fd5b61021e610219366004611ab2565b6104d0565b005b61021e61022e366004611b0e565b610587565b60ce54610246906001600160a01b031681565b6040516102539190611b49565b60405180910390f35b61021e61026a366004611b57565b6105bd565b61028f61027d366004611bcf565b60d16020526000908152604090205481565b6040516102539190611bf6565b60cc54610246906001600160a01b031681565b61021e6102bd366004611bcf565b610661565b61021e610694565b61021e6102d8366004611b0e565b6106c3565b6102f06102eb366004611bcf565b6106f6565b6040516102539190611c0c565b61028f61030b366004611ed2565b610714565b61021e61031e366004611f0c565b61077b565b610336610331366004611f5c565b610916565b60405161025391906120f1565b60985460ff166102f0565b61021e61035c366004611bcf565b61092b565b61021e61095e565b61021e610967565b61028f61037f366004612153565b61099b565b61021e610392366004611b0e565b610af0565b6102f06103a5366004611bcf565b60ca6020526000908152604090205460ff1681565b61021e6103c8366004611bcf565b610b23565b61021e610b56565b6033546001600160a01b03165b60405161025391906121c9565b61021e6103fd366004611b0e565b610b83565b60cf54610246906001600160a01b031681565b61028f6104233660046121d7565b610bb6565b61043b6104363660046122a7565b610c83565b60405161025394939291906122f0565b61021e610459366004611f0c565b610cad565b6065546103e2906001600160a01b031681565b61021e61047f366004611b0e565b610d1e565b61021e610492366004611bcf565b610d51565b60cb54610246906001600160a01b031681565b60cd54610246906001600160a01b031681565b60d054610246906001600160a01b031681565b6033546001600160a01b031633146105035760405162461bcd60e51b81526004016104fa90612369565b60405180910390fd5b6040516000906001600160a01b0384169083156108fc0290849084818181858888f193505050509050806105495760405162461bcd60e51b81526004016104fa906123be565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e4827838360405161057a9291906123ce565b60405180910390a1505050565b6033546001600160a01b031633146105b15760405162461bcd60e51b81526004016104fa90612369565b6105ba81610db9565b50565b600054610100900460ff166105d85760005460ff16156105dc565b303b155b6105f85760405162461bcd60e51b81526004016104fa90612434565b600054610100900460ff1615801561061a576000805461ffff19166101011790555b61062386610e0f565b61062c85610e61565b61063584610e88565b61063e83610eb8565b61064782610edf565b8015610659576000805461ff00191690555b505050505050565b6033546001600160a01b0316331461068b5760405162461bcd60e51b81526004016104fa90612369565b6105ba81610f06565b61069d336106f6565b6106b95760405162461bcd60e51b81526004016104fa90612478565b6106c1610f51565b565b6033546001600160a01b031633146106ed5760405162461bcd60e51b81526004016104fa90612369565b6105ba81610fb7565b6001600160a01b0316600090815260ca602052604090205460ff1690565b600061072260985460ff1690565b1561073f5760405162461bcd60e51b81526004016104fa906124af565b600260665414156107625760405162461bcd60e51b81526004016104fa906124f3565b600260665561077082611002565b600160665592915050565b60985460ff161561079e5760405162461bcd60e51b81526004016104fa906124af565b600260665414156107c15760405162461bcd60e51b81526004016104fa906124f3565b600260665560cb54604051636b074a0760e01b81526001600160a01b0390911690636b074a07906107f69033906004016121c9565b60206040518083038186803b15801561080e57600080fd5b505afa158015610822573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108469190612516565b6108625760405162461bcd60e51b81526004016104fa9061257d565b33600090815260d160205260409020548111156108915760405162461bcd60e51b81526004016104fa906125d8565b33600090815260d160205260409020546108ab9082611161565b33600090815260d160205260409020556108cf6001600160a01b038416838361116d565b7f6a5b5b630c1c43e83d8863b2f40228b9238480ce8c629132ea0862c7ce6c1b233384848460405161090494939291906125e8565b60405180910390a15050600160665550565b606061092283836111c8565b90505b92915050565b6033546001600160a01b031633146109555760405162461bcd60e51b81526004016104fa90612369565b6105ba81611346565b6106c133611346565b6033546001600160a01b031633146109915760405162461bcd60e51b81526004016104fa90612369565b6106c16000610e0f565b6065546000906001600160a01b031633146109c85760405162461bcd60e51b81526004016104fa90612670565b60985460ff16156109eb5760405162461bcd60e51b81526004016104fa906124af565b60026066541415610a0e5760405162461bcd60e51b81526004016104fa906124f3565b600260665560d0546001600160a01b03868116911614610a405760405162461bcd60e51b81526004016104fa906126b4565b600080600080610a8587878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610c8392505050565b935093509350935060006040518060800160405280866001600160a01b03168152602001856001600160401b03168152602001848152602001610ad0610aca8c6113bb565b856111c8565b90529050610add81611002565b60016066559a9950505050505050505050565b6033546001600160a01b03163314610b1a5760405162461bcd60e51b81526004016104fa90612369565b6105ba816113cc565b6033546001600160a01b03163314610b4d5760405162461bcd60e51b81526004016104fa90612369565b6105ba81611417565b610b5f336106f6565b610b7b5760405162461bcd60e51b81526004016104fa90612478565b6106c1611490565b6033546001600160a01b03163314610bad5760405162461bcd60e51b81526004016104fa90612369565b6105ba816114e8565b600080825111610bd85760405162461bcd60e51b81526004016104fa9061270b565b60005b8251811015610c7d5760005b838281518110610bf957610bf961271b565b60200260200101516020015151811015610c6a57610c56848381518110610c2257610c2261271b565b6020026020010151602001518281518110610c3f57610c3f61271b565b60200260200101518461153390919063ffffffff16565b925080610c6281612747565b915050610be7565b5080610c7581612747565b915050610bdb565b50919050565b6000806000606084806020019051810190610c9e91906128ec565b92989197509550909350915050565b6033546001600160a01b03163314610cd75760405162461bcd60e51b81526004016104fa90612369565b610ceb6001600160a01b038416838361116d565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639883838360405161057a9392919061296a565b6033546001600160a01b03163314610d485760405162461bcd60e51b81526004016104fa90612369565b6105ba8161153f565b6033546001600160a01b03163314610d7b5760405162461bcd60e51b81526004016104fa90612369565b6001600160a01b038116610da15760405162461bcd60e51b81526004016104fa906129d5565b6105ba81610e0f565b6001600160a01b03163b151590565b60d080546001600160a01b0319166001600160a01b0383161790556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3090610e04908390611b49565b60405180910390a150565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610b4d5760405162461bcd60e51b81526004016104fa90612a2d565b600054610100900460ff16610eaf5760405162461bcd60e51b81526004016104fa90612a2d565b6105ba8161158a565b600054610100900460ff1661068b5760405162461bcd60e51b81526004016104fa90612a2d565b600054610100900460ff166105b15760405162461bcd60e51b81526004016104fa90612a2d565b606580546001600160a01b0319166001600160a01b0383161790556040517fafe9b28ca24a54df8c44769c685f7b92824aae021cdfcaa4719d493571a23c4c90610e049083906121c9565b60985460ff16610f735760405162461bcd60e51b81526004016104fa90612a68565b6098805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610fad91906121c9565b60405180910390a1565b60cf80546001600160a01b0319166001600160a01b0383161790556040517f7b091d9397a2f75213edeec1728b27a9d863f0f8aafb62fce0f1154f48f110f890610e04908390611b49565b60cb548151604051636b074a0760e01b81526000926001600160a01b031691636b074a079161103491906004016121c9565b60206040518083038186803b15801561104c57600080fd5b505afa158015611060573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110849190612516565b6110a05760405162461bcd60e51b81526004016104fa90612aba565b6110b2826040015183606001516115d5565b90506110bd8161174a565b60d0549091506110d8906001600160a01b031633308461175b565b81516001600160a01b0316600090815260d160205260409020546110fc9082611533565b82516001600160a01b03908116600090815260d16020526040908190209290925560d05491517f699b2f7653a6bfb60eabd345a469cd1a72cf9733ed0179acb41b3d0b8d6b8583926111549233929116908690612b75565b60405180910390a1919050565b60006109228284612ba2565b6111c38363a9059cbb60e01b848460405160240161118c929190612bb9565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611782565b505050565b606060008251116111eb5760405162461bcd60e51b81526004016104fa90612c0d565b60006111f683610bb6565b9050600081116112185760405162461bcd60e51b81526004016104fa90612c51565b60005b835181101561133d5760008482815181106112385761123861271b565b60200260200101516020015151116112625760405162461bcd60e51b81526004016104fa90612ca5565b60005b8482815181106112775761127761271b565b6020026020010151602001515181101561132a576112de836112d8888886815181106112a5576112a561271b565b60200260200101516020015185815181106112c2576112c261271b565b602002602001015161181190919063ffffffff16565b9061181d565b8583815181106112f0576112f061271b565b602002602001015160200151828151811061130d5761130d61271b565b60209081029190910101528061132281612747565b915050611265565b508061133581612747565b91505061121b565b50919392505050565b61134f816106f6565b61136b5760405162461bcd60e51b81526004016104fa90612ce9565b6001600160a01b038116600090815260ca602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90610e049083906121c9565b60006109258264e8d4a51000611811565b60cd80546001600160a01b0319166001600160a01b0383161790556040517f100702071f8eb4f459f5f9dcf12bba9b3aeafa0eca6a018364f645558d792c3790610e04908390611b49565b611420816106f6565b1561143d5760405162461bcd60e51b81526004016104fa90612d37565b6001600160a01b038116600090815260ca602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890610e049083906121c9565b60985460ff16156114b35760405162461bcd60e51b81526004016104fa906124af565b6098805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fa03390565b60ce80546001600160a01b0319166001600160a01b0383161790556040517f6a7e09ebc58179cd1c17c89209474e58d29e43b1bf78dd57f896e7be983220eb90610e04908390611b49565b60006109228284612d47565b60cc80546001600160a01b0319166001600160a01b0383161790556040517feb1b948f6c63784a1d91e42dd967c49aae87b1db36d3107e9b913963ae7cd03990610e04908390611b49565b60cb80546001600160a01b0319166001600160a01b0383161790556040517fe63288198842f0dacdcbdc3f22dcd4e473d1f3cee7e10603ae6ddc3e667c528490610e04908390611b49565b6000808251116115f75760405162461bcd60e51b81526004016104fa90612d9d565b60005b82518110156117435760008382815181106116175761161761271b565b602002602001015190506001600481111561163457611634611fa9565b8151600481111561164757611647611fa9565b14156116765760cc5461166f90611668906001600160a01b03168784611829565b8490611533565b9250611730565b60038151600481111561168b5761168b611fa9565b14156116ac5760ce5461166f90611668906001600160a01b03168784611829565b6002815160048111156116c1576116c1611fa9565b14156116e25760cd5461166f90611668906001600160a01b03168784611829565b6004815160048111156116f7576116f7611fa9565b14156117185760cf5461166f90611668906001600160a01b031687846118f8565b60405162461bcd60e51b81526004016104fa90612df0565b508061173b81612747565b9150506115fa565b5092915050565b60006109258264e8d4a5100061181d565b61177c846323b872dd60e01b85858560405160240161118c93929190612e00565b50505050565b60006117d7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661198b9092919063ffffffff16565b8051909150156111c357808060200190518101906117f59190612516565b6111c35760405162461bcd60e51b81526004016104fa90612e55565b60006109228284612e65565b60006109228284612e9a565b60008160200151516001146118505760405162461bcd60e51b81526004016104fa90612ef6565b836001600160a01b031663467aa8de8484602001516000815181106118775761187761271b565b60200260200101516040518363ffffffff1660e01b815260040161189c929190612f06565b602060405180830381600087803b1580156118b657600080fd5b505af11580156118ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ee9190612f14565b90505b9392505050565b600081602001515160021461191f5760405162461bcd60e51b81526004016104fa90612ef6565b836001600160a01b0316634235fec08484602001516000815181106119465761194661271b565b602002602001015185602001516001815181106119655761196561271b565b60200260200101516040518463ffffffff1660e01b815260040161189c93929190612f35565b60606118ee8484600085856001600160a01b0385163b6119bd5760405162461bcd60e51b81526004016104fa90612f84565b600080866001600160a01b031685876040516119d99190612fe2565b60006040518083038185875af1925050503d8060008114611a16576040519150601f19603f3d011682016040523d82523d6000602084013e611a1b565b606091505b5091509150611a2b828286611a38565b925050505b949350505050565b60608315611a475750816118f1565b825115611a575782518084602001fd5b8160405162461bcd60e51b81526004016104fa9190613020565b60006001600160a01b038216610925565b611a8b81611a71565b81146105ba57600080fd5b803561092581611a82565b80611a8b565b803561092581611aa1565b60008060408385031215611ac857611ac8600080fd5b6000611ad48585611a96565b9250506020611ae585828601611aa7565b9150509250929050565b600061092582611a71565b611a8b81611aef565b803561092581611afa565b600060208284031215611b2357611b23600080fd5b6000611a308484611b03565b600061092582611aef565b611b4381611b2f565b82525050565b602081016109258284611b3a565b600080600080600060a08688031215611b7257611b72600080fd5b6000611b7e8888611a96565b9550506020611b8f88828901611a96565b9450506040611ba088828901611b03565b9350506060611bb188828901611a96565b9250506080611bc288828901611b03565b9150509295509295909350565b600060208284031215611be457611be4600080fd5b6000611a308484611a96565b80611b43565b602081016109258284611bf0565b801515611b43565b602081016109258284611c04565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715611c5557611c55611c1a565b6040525050565b6000611c6760405190565b9050611c738282611c30565b919050565b6001600160401b038116611a8b565b803561092581611c78565b60006001600160401b03821115611cab57611cab611c1a565b5060209081020190565b600581106105ba57600080fd5b803561092581611cb5565b6000611ce0611cdb84611c92565b611c5c565b83815290506020808201908402830185811115611cff57611cff600080fd5b835b81811015611d235780611d148882611aa7565b84525060209283019201611d01565b5050509392505050565b600082601f830112611d4157611d41600080fd5b8135611a30848260208601611ccd565b600060408284031215611d6657611d66600080fd5b611d706040611c5c565b90506000611d7e8484611cc2565b82525060208201356001600160401b03811115611d9d57611d9d600080fd5b611da984828501611d2d565b60208301525092915050565b6000611dc3611cdb84611c92565b83815290506020808201908402830185811115611de257611de2600080fd5b835b81811015611d235780356001600160401b03811115611e0557611e05600080fd5b808601611e128982611d51565b8552505060209283019201611de4565b600082601f830112611e3657611e36600080fd5b8135611a30848260208601611db5565b600060808284031215611e5b57611e5b600080fd5b611e656080611c5c565b90506000611e738484611a96565b8252506020611e8484848301611c87565b6020830152506040611e9884828501611aa7565b60408301525060608201356001600160401b03811115611eba57611eba600080fd5b611ec684828501611e22565b60608301525092915050565b600060208284031215611ee757611ee7600080fd5b81356001600160401b03811115611f0057611f00600080fd5b611a3084828501611e46565b600080600060608486031215611f2457611f24600080fd5b6000611f308686611b03565b9350506020611f4186828701611a96565b9250506040611f5286828701611aa7565b9150509250925092565b60008060408385031215611f7257611f72600080fd5b6000611f7e8585611aa7565b92505060208301356001600160401b03811115611f9d57611f9d600080fd5b611ae585828601611e22565b634e487b7160e01b600052602160045260246000fd5b600581106105ba576105ba611fa9565b80611c7381611fbf565b600061092582611fcf565b611b4381611fd9565b6000611ff98383611bf0565b505060200190565b600061200b825190565b80845260209384019383018060005b8381101561203f57815161202e8882611fed565b97506020830192505060010161201a565b509495945050505050565b8051600090604084019061205e8582611fe4565b50602083015184820360208601526120768282612001565b95945050505050565b6000610922838361204a565b6000612095825190565b808452602084019350836020820285016120af8560200190565b8060005b858110156120e457848403895281516120cc858261207f565b94506020830160209a909a01999250506001016120b3565b5091979650505050505050565b60208082528101610922818461208b565b60008083601f84011261211757612117600080fd5b5081356001600160401b0381111561213157612131600080fd5b60208301915083600182028301111561214c5761214c600080fd5b9250929050565b6000806000806060858703121561216c5761216c600080fd5b60006121788787611b03565b945050602061218987828801611aa7565b93505060408501356001600160401b038111156121a8576121a8600080fd5b6121b487828801612102565b95989497509550505050565b611b4381611a71565b6020810161092582846121c0565b6000602082840312156121ec576121ec600080fd5b81356001600160401b0381111561220557612205600080fd5b611a3084828501611e22565b60006001600160401b0382111561222a5761222a611c1a565b601f19601f83011660200192915050565b82818337506000910152565b6000612255611cdb84612211565b90508281526020810184848401111561227057612270600080fd5b61227b84828561223b565b509392505050565b600082601f83011261229757612297600080fd5b8135611a30848260208601612247565b6000602082840312156122bc576122bc600080fd5b81356001600160401b038111156122d5576122d5600080fd5b611a3084828501612283565b6001600160401b038116611b43565b608081016122fe82876121c0565b61230b60208301866122e1565b6123186040830185611bf0565b818103606083015261232a818461208b565b9695505050505050565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b6020808252810161092581612334565b602581526000602082017f5061796d656e743a207769746864726177206e617469766520746f6b656e2066815264185a5b195960da1b602082015291505b5060400190565b6020808252810161092581612379565b604081016123dc8285611b3a565b6118f16020830184611bf0565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291506123b7565b60208082528101610925816123e9565b601c81526000602082017f5061757365723a2043616c6c6572206973206e6f74207061757365720000000081529150612362565b6020808252810161092581612444565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b81529150612362565b6020808252810161092581612488565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081529150612362565b60208082528101610925816124bf565b801515611a8b565b805161092581612503565b60006020828403121561252b5761252b600080fd5b6000611a30848461250b565b602981526000602082017f447374436861696e5061796d656e743a2063616c6c6572206973206e6f74206181526810383937bb34b232b960b91b602082015291506123b7565b6020808252810161092581612537565b602e81526000602082017f447374436861696e5061796d656e743a20696e73756666696369656e7420707281526d6f76696465722062616c616e636560901b602082015291506123b7565b602080825281016109258161258d565b608081016125f682876121c0565b6126036020830186611b3a565b61261060408301856121c0565b6120766060830184611bf0565b603681526000602082017f4d6573736167655265636569766572577261707065723a2063616c6c6572206981527539903737ba1036b2b9b9b0b3b2903932b1b2b4bb32b960511b602082015291506123b7565b602080825281016109258161261d565b601e81526000602082017f447374436861696e5061796d656e743a20696e76616c696420746f6b656e000081529150612362565b6020808252810161092581612680565b602a81526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152690c2c8e640d8cadccee8d60b31b602082015291506123b7565b60208082528101610925816126c4565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561275b5761275b612731565b5060010190565b805161092581611a82565b805161092581611c78565b805161092581611aa1565b805161092581611cb5565b600061279c611cdb84611c92565b838152905060208082019084028301858111156127bb576127bb600080fd5b835b81811015611d2357806127d08882612778565b845250602092830192016127bd565b600082601f8301126127f3576127f3600080fd5b8151611a3084826020860161278e565b60006040828403121561281857612818600080fd5b6128226040611c5c565b905060006128308484612783565b82525060208201516001600160401b0381111561284f5761284f600080fd5b611da9848285016127df565b6000612869611cdb84611c92565b8381529050602080820190840283018581111561288857612888600080fd5b835b81811015611d235780516001600160401b038111156128ab576128ab600080fd5b8086016128b88982612803565b855250506020928301920161288a565b600082601f8301126128dc576128dc600080fd5b8151611a3084826020860161285b565b6000806000806080858703121561290557612905600080fd5b60006129118787612762565b94505060206129228782880161276d565b935050604061293387828801612778565b92505060608501516001600160401b0381111561295257612952600080fd5b61295e878288016128c8565b91505092959194509250565b606081016129788286611b3a565b61298560208301856121c0565b611a306040830184611bf0565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015291506123b7565b6020808252810161092581612992565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b602082015291506123b7565b60208082528101610925816129e5565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b81529150612362565b6020808252810161092581612a3d565b602581526000602082017f447374436861696e5061796d656e743a206e6f6e6578697374656e742070726f8152643b34b232b960d91b602082015291506123b7565b6020808252810161092581612a78565b6000612ad4825190565b80845260208401935083602082028501612aee8560200190565b8060005b858110156120e45784840389528151612b0b858261207f565b94506020830160209a909a0199925050600101612af2565b80516000906080840190612b3785826121c0565b506020830151612b4a60208601826122e1565b506040830151612b5d6040860182611bf0565b50606083015184820360608601526120768282612aca565b60608101612b8382866121c0565b612b906020830185611b3a565b81810360408301526120768184612b23565b600082821015612bb457612bb4612731565b500390565b604081016123dc82856121c0565b602981526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152680c2c840d8cadccee8d60bb1b602082015291506123b7565b6020808252810161092581612bc7565b601e81526000602082017f5265736f75725061796c6f6164546f6f6c3a207a65726f2076616c756573000081529150612362565b6020808252810161092581612c1d565b602781526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c69642076616c7565815266040d8cadccee8d60cb1b602082015291506123b7565b6020808252810161092581612c61565b601d81526000602082017f5061757365723a204163636f756e74206973206e6f742070617573657200000081529150612362565b6020808252810161092581612cb5565b602181526000602082017f5061757365723a204163636f756e7420697320616c72656164792070617573658152603960f91b602082015291506123b7565b6020808252810161092581612cf9565b60008219821115612d5a57612d5a612731565b500190565b602181526000602082017f447374436861696e5061796d656e743a20696e76616c6964207061796c6f61648152607360f81b602082015291506123b7565b6020808252810161092581612d5f565b602681526000602082017f447374436861696e5061796d656e743a20756e6b6e6f776e207265736f75726381526565207479706560d01b602082015291506123b7565b6020808252810161092581612dad565b6060810161297882866121c0565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015291506123b7565b6020808252810161092581612e0e565b6000816000190483118215151615612e7f57612e7f612731565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612ea957612ea9612e84565b500490565b602b81526000602082017f447374436861696e5061796d656e743a20696e76616c696420746f6b656e207681526a0c2d8eaca40d8cadccee8d60ab1b602082015291506123b7565b6020808252810161092581612eae565b604081016123dc8285611bf0565b600060208284031215612f2957612f29600080fd5b6000611a308484612778565b60608101612f438286611bf0565b6129856020830185611bf0565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081529150612362565b6020808252810161092581612f50565b60005b83811015612faf578181015183820152602001612f97565b8381111561177c5750506000910152565b6000612fca825190565b612fd8818560208601612f94565b9290920192915050565b60006118f18284612fc0565b6000612ff8825190565b80845260208401935061300f818560208601612f94565b601f01601f19169290920192915050565b602080825281016109228184612fee56fea26469706673582212200493b6ce94abb3a1fa0d7ce25b9e793b00d98c4d71c50d4b0ff7f42397f179bc64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102065760003560e01c806377ef533c1161011a578063bb371111116100ad578063e84372491161007c578063e843724914610471578063f2fde38b14610484578063f8401fe614610497578063f8f071fa146104aa578063fc0c546a146104bd57600080fd5b8063bb37111114610415578063bd16997514610428578063d9caed121461044b578063e2cae9f51461045e57600080fd5b80638456cb59116100e95780638456cb59146103cd5780638da5cb5b146103d5578063914fd2c3146103ef578063b05f87a81461040257600080fd5b806377ef533c146103715780637a7fa7531461038457806380f51c121461039757806382dc1ec4146103ba57600080fd5b80634540a85b1161019d5780635618ce2d1161016c5780635618ce2d146103235780635c975abb146103435780636b2c0f551461034e5780636ef8d66d14610361578063715018a61461036957600080fd5b80634540a85b146102ca57806346fbf68e146102dd578063490e4fa2146102fd57806349ea49e01461031057600080fd5b806328ac7f2c116101d957806328ac7f2c1461026f57806329dbfc751461029c5780633b8ccfb1146102af5780633f4ba83a146102c257600080fd5b806307b18bde1461020b578063144fa6d71461022057806315e07769146102335780632413c1271461025c575b600080fd5b61021e610219366004611ab2565b6104d0565b005b61021e61022e366004611b0e565b610587565b60ce54610246906001600160a01b031681565b6040516102539190611b49565b60405180910390f35b61021e61026a366004611b57565b6105bd565b61028f61027d366004611bcf565b60d16020526000908152604090205481565b6040516102539190611bf6565b60cc54610246906001600160a01b031681565b61021e6102bd366004611bcf565b610661565b61021e610694565b61021e6102d8366004611b0e565b6106c3565b6102f06102eb366004611bcf565b6106f6565b6040516102539190611c0c565b61028f61030b366004611ed2565b610714565b61021e61031e366004611f0c565b61077b565b610336610331366004611f5c565b610916565b60405161025391906120f1565b60985460ff166102f0565b61021e61035c366004611bcf565b61092b565b61021e61095e565b61021e610967565b61028f61037f366004612153565b61099b565b61021e610392366004611b0e565b610af0565b6102f06103a5366004611bcf565b60ca6020526000908152604090205460ff1681565b61021e6103c8366004611bcf565b610b23565b61021e610b56565b6033546001600160a01b03165b60405161025391906121c9565b61021e6103fd366004611b0e565b610b83565b60cf54610246906001600160a01b031681565b61028f6104233660046121d7565b610bb6565b61043b6104363660046122a7565b610c83565b60405161025394939291906122f0565b61021e610459366004611f0c565b610cad565b6065546103e2906001600160a01b031681565b61021e61047f366004611b0e565b610d1e565b61021e610492366004611bcf565b610d51565b60cb54610246906001600160a01b031681565b60cd54610246906001600160a01b031681565b60d054610246906001600160a01b031681565b6033546001600160a01b031633146105035760405162461bcd60e51b81526004016104fa90612369565b60405180910390fd5b6040516000906001600160a01b0384169083156108fc0290849084818181858888f193505050509050806105495760405162461bcd60e51b81526004016104fa906123be565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e4827838360405161057a9291906123ce565b60405180910390a1505050565b6033546001600160a01b031633146105b15760405162461bcd60e51b81526004016104fa90612369565b6105ba81610db9565b50565b600054610100900460ff166105d85760005460ff16156105dc565b303b155b6105f85760405162461bcd60e51b81526004016104fa90612434565b600054610100900460ff1615801561061a576000805461ffff19166101011790555b61062386610e0f565b61062c85610e61565b61063584610e88565b61063e83610eb8565b61064782610edf565b8015610659576000805461ff00191690555b505050505050565b6033546001600160a01b0316331461068b5760405162461bcd60e51b81526004016104fa90612369565b6105ba81610f06565b61069d336106f6565b6106b95760405162461bcd60e51b81526004016104fa90612478565b6106c1610f51565b565b6033546001600160a01b031633146106ed5760405162461bcd60e51b81526004016104fa90612369565b6105ba81610fb7565b6001600160a01b0316600090815260ca602052604090205460ff1690565b600061072260985460ff1690565b1561073f5760405162461bcd60e51b81526004016104fa906124af565b600260665414156107625760405162461bcd60e51b81526004016104fa906124f3565b600260665561077082611002565b600160665592915050565b60985460ff161561079e5760405162461bcd60e51b81526004016104fa906124af565b600260665414156107c15760405162461bcd60e51b81526004016104fa906124f3565b600260665560cb54604051636b074a0760e01b81526001600160a01b0390911690636b074a07906107f69033906004016121c9565b60206040518083038186803b15801561080e57600080fd5b505afa158015610822573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108469190612516565b6108625760405162461bcd60e51b81526004016104fa9061257d565b33600090815260d160205260409020548111156108915760405162461bcd60e51b81526004016104fa906125d8565b33600090815260d160205260409020546108ab9082611161565b33600090815260d160205260409020556108cf6001600160a01b038416838361116d565b7f6a5b5b630c1c43e83d8863b2f40228b9238480ce8c629132ea0862c7ce6c1b233384848460405161090494939291906125e8565b60405180910390a15050600160665550565b606061092283836111c8565b90505b92915050565b6033546001600160a01b031633146109555760405162461bcd60e51b81526004016104fa90612369565b6105ba81611346565b6106c133611346565b6033546001600160a01b031633146109915760405162461bcd60e51b81526004016104fa90612369565b6106c16000610e0f565b6065546000906001600160a01b031633146109c85760405162461bcd60e51b81526004016104fa90612670565b60985460ff16156109eb5760405162461bcd60e51b81526004016104fa906124af565b60026066541415610a0e5760405162461bcd60e51b81526004016104fa906124f3565b600260665560d0546001600160a01b03868116911614610a405760405162461bcd60e51b81526004016104fa906126b4565b600080600080610a8587878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610c8392505050565b935093509350935060006040518060800160405280866001600160a01b03168152602001856001600160401b03168152602001848152602001610ad0610aca8c6113bb565b856111c8565b90529050610add81611002565b60016066559a9950505050505050505050565b6033546001600160a01b03163314610b1a5760405162461bcd60e51b81526004016104fa90612369565b6105ba816113cc565b6033546001600160a01b03163314610b4d5760405162461bcd60e51b81526004016104fa90612369565b6105ba81611417565b610b5f336106f6565b610b7b5760405162461bcd60e51b81526004016104fa90612478565b6106c1611490565b6033546001600160a01b03163314610bad5760405162461bcd60e51b81526004016104fa90612369565b6105ba816114e8565b600080825111610bd85760405162461bcd60e51b81526004016104fa9061270b565b60005b8251811015610c7d5760005b838281518110610bf957610bf961271b565b60200260200101516020015151811015610c6a57610c56848381518110610c2257610c2261271b565b6020026020010151602001518281518110610c3f57610c3f61271b565b60200260200101518461153390919063ffffffff16565b925080610c6281612747565b915050610be7565b5080610c7581612747565b915050610bdb565b50919050565b6000806000606084806020019051810190610c9e91906128ec565b92989197509550909350915050565b6033546001600160a01b03163314610cd75760405162461bcd60e51b81526004016104fa90612369565b610ceb6001600160a01b038416838361116d565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639883838360405161057a9392919061296a565b6033546001600160a01b03163314610d485760405162461bcd60e51b81526004016104fa90612369565b6105ba8161153f565b6033546001600160a01b03163314610d7b5760405162461bcd60e51b81526004016104fa90612369565b6001600160a01b038116610da15760405162461bcd60e51b81526004016104fa906129d5565b6105ba81610e0f565b6001600160a01b03163b151590565b60d080546001600160a01b0319166001600160a01b0383161790556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3090610e04908390611b49565b60405180910390a150565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610b4d5760405162461bcd60e51b81526004016104fa90612a2d565b600054610100900460ff16610eaf5760405162461bcd60e51b81526004016104fa90612a2d565b6105ba8161158a565b600054610100900460ff1661068b5760405162461bcd60e51b81526004016104fa90612a2d565b600054610100900460ff166105b15760405162461bcd60e51b81526004016104fa90612a2d565b606580546001600160a01b0319166001600160a01b0383161790556040517fafe9b28ca24a54df8c44769c685f7b92824aae021cdfcaa4719d493571a23c4c90610e049083906121c9565b60985460ff16610f735760405162461bcd60e51b81526004016104fa90612a68565b6098805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610fad91906121c9565b60405180910390a1565b60cf80546001600160a01b0319166001600160a01b0383161790556040517f7b091d9397a2f75213edeec1728b27a9d863f0f8aafb62fce0f1154f48f110f890610e04908390611b49565b60cb548151604051636b074a0760e01b81526000926001600160a01b031691636b074a079161103491906004016121c9565b60206040518083038186803b15801561104c57600080fd5b505afa158015611060573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110849190612516565b6110a05760405162461bcd60e51b81526004016104fa90612aba565b6110b2826040015183606001516115d5565b90506110bd8161174a565b60d0549091506110d8906001600160a01b031633308461175b565b81516001600160a01b0316600090815260d160205260409020546110fc9082611533565b82516001600160a01b03908116600090815260d16020526040908190209290925560d05491517f699b2f7653a6bfb60eabd345a469cd1a72cf9733ed0179acb41b3d0b8d6b8583926111549233929116908690612b75565b60405180910390a1919050565b60006109228284612ba2565b6111c38363a9059cbb60e01b848460405160240161118c929190612bb9565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611782565b505050565b606060008251116111eb5760405162461bcd60e51b81526004016104fa90612c0d565b60006111f683610bb6565b9050600081116112185760405162461bcd60e51b81526004016104fa90612c51565b60005b835181101561133d5760008482815181106112385761123861271b565b60200260200101516020015151116112625760405162461bcd60e51b81526004016104fa90612ca5565b60005b8482815181106112775761127761271b565b6020026020010151602001515181101561132a576112de836112d8888886815181106112a5576112a561271b565b60200260200101516020015185815181106112c2576112c261271b565b602002602001015161181190919063ffffffff16565b9061181d565b8583815181106112f0576112f061271b565b602002602001015160200151828151811061130d5761130d61271b565b60209081029190910101528061132281612747565b915050611265565b508061133581612747565b91505061121b565b50919392505050565b61134f816106f6565b61136b5760405162461bcd60e51b81526004016104fa90612ce9565b6001600160a01b038116600090815260ca602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90610e049083906121c9565b60006109258264e8d4a51000611811565b60cd80546001600160a01b0319166001600160a01b0383161790556040517f100702071f8eb4f459f5f9dcf12bba9b3aeafa0eca6a018364f645558d792c3790610e04908390611b49565b611420816106f6565b1561143d5760405162461bcd60e51b81526004016104fa90612d37565b6001600160a01b038116600090815260ca602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890610e049083906121c9565b60985460ff16156114b35760405162461bcd60e51b81526004016104fa906124af565b6098805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610fa03390565b60ce80546001600160a01b0319166001600160a01b0383161790556040517f6a7e09ebc58179cd1c17c89209474e58d29e43b1bf78dd57f896e7be983220eb90610e04908390611b49565b60006109228284612d47565b60cc80546001600160a01b0319166001600160a01b0383161790556040517feb1b948f6c63784a1d91e42dd967c49aae87b1db36d3107e9b913963ae7cd03990610e04908390611b49565b60cb80546001600160a01b0319166001600160a01b0383161790556040517fe63288198842f0dacdcbdc3f22dcd4e473d1f3cee7e10603ae6ddc3e667c528490610e04908390611b49565b6000808251116115f75760405162461bcd60e51b81526004016104fa90612d9d565b60005b82518110156117435760008382815181106116175761161761271b565b602002602001015190506001600481111561163457611634611fa9565b8151600481111561164757611647611fa9565b14156116765760cc5461166f90611668906001600160a01b03168784611829565b8490611533565b9250611730565b60038151600481111561168b5761168b611fa9565b14156116ac5760ce5461166f90611668906001600160a01b03168784611829565b6002815160048111156116c1576116c1611fa9565b14156116e25760cd5461166f90611668906001600160a01b03168784611829565b6004815160048111156116f7576116f7611fa9565b14156117185760cf5461166f90611668906001600160a01b031687846118f8565b60405162461bcd60e51b81526004016104fa90612df0565b508061173b81612747565b9150506115fa565b5092915050565b60006109258264e8d4a5100061181d565b61177c846323b872dd60e01b85858560405160240161118c93929190612e00565b50505050565b60006117d7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661198b9092919063ffffffff16565b8051909150156111c357808060200190518101906117f59190612516565b6111c35760405162461bcd60e51b81526004016104fa90612e55565b60006109228284612e65565b60006109228284612e9a565b60008160200151516001146118505760405162461bcd60e51b81526004016104fa90612ef6565b836001600160a01b031663467aa8de8484602001516000815181106118775761187761271b565b60200260200101516040518363ffffffff1660e01b815260040161189c929190612f06565b602060405180830381600087803b1580156118b657600080fd5b505af11580156118ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118ee9190612f14565b90505b9392505050565b600081602001515160021461191f5760405162461bcd60e51b81526004016104fa90612ef6565b836001600160a01b0316634235fec08484602001516000815181106119465761194661271b565b602002602001015185602001516001815181106119655761196561271b565b60200260200101516040518463ffffffff1660e01b815260040161189c93929190612f35565b60606118ee8484600085856001600160a01b0385163b6119bd5760405162461bcd60e51b81526004016104fa90612f84565b600080866001600160a01b031685876040516119d99190612fe2565b60006040518083038185875af1925050503d8060008114611a16576040519150601f19603f3d011682016040523d82523d6000602084013e611a1b565b606091505b5091509150611a2b828286611a38565b925050505b949350505050565b60608315611a475750816118f1565b825115611a575782518084602001fd5b8160405162461bcd60e51b81526004016104fa9190613020565b60006001600160a01b038216610925565b611a8b81611a71565b81146105ba57600080fd5b803561092581611a82565b80611a8b565b803561092581611aa1565b60008060408385031215611ac857611ac8600080fd5b6000611ad48585611a96565b9250506020611ae585828601611aa7565b9150509250929050565b600061092582611a71565b611a8b81611aef565b803561092581611afa565b600060208284031215611b2357611b23600080fd5b6000611a308484611b03565b600061092582611aef565b611b4381611b2f565b82525050565b602081016109258284611b3a565b600080600080600060a08688031215611b7257611b72600080fd5b6000611b7e8888611a96565b9550506020611b8f88828901611a96565b9450506040611ba088828901611b03565b9350506060611bb188828901611a96565b9250506080611bc288828901611b03565b9150509295509295909350565b600060208284031215611be457611be4600080fd5b6000611a308484611a96565b80611b43565b602081016109258284611bf0565b801515611b43565b602081016109258284611c04565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715611c5557611c55611c1a565b6040525050565b6000611c6760405190565b9050611c738282611c30565b919050565b6001600160401b038116611a8b565b803561092581611c78565b60006001600160401b03821115611cab57611cab611c1a565b5060209081020190565b600581106105ba57600080fd5b803561092581611cb5565b6000611ce0611cdb84611c92565b611c5c565b83815290506020808201908402830185811115611cff57611cff600080fd5b835b81811015611d235780611d148882611aa7565b84525060209283019201611d01565b5050509392505050565b600082601f830112611d4157611d41600080fd5b8135611a30848260208601611ccd565b600060408284031215611d6657611d66600080fd5b611d706040611c5c565b90506000611d7e8484611cc2565b82525060208201356001600160401b03811115611d9d57611d9d600080fd5b611da984828501611d2d565b60208301525092915050565b6000611dc3611cdb84611c92565b83815290506020808201908402830185811115611de257611de2600080fd5b835b81811015611d235780356001600160401b03811115611e0557611e05600080fd5b808601611e128982611d51565b8552505060209283019201611de4565b600082601f830112611e3657611e36600080fd5b8135611a30848260208601611db5565b600060808284031215611e5b57611e5b600080fd5b611e656080611c5c565b90506000611e738484611a96565b8252506020611e8484848301611c87565b6020830152506040611e9884828501611aa7565b60408301525060608201356001600160401b03811115611eba57611eba600080fd5b611ec684828501611e22565b60608301525092915050565b600060208284031215611ee757611ee7600080fd5b81356001600160401b03811115611f0057611f00600080fd5b611a3084828501611e46565b600080600060608486031215611f2457611f24600080fd5b6000611f308686611b03565b9350506020611f4186828701611a96565b9250506040611f5286828701611aa7565b9150509250925092565b60008060408385031215611f7257611f72600080fd5b6000611f7e8585611aa7565b92505060208301356001600160401b03811115611f9d57611f9d600080fd5b611ae585828601611e22565b634e487b7160e01b600052602160045260246000fd5b600581106105ba576105ba611fa9565b80611c7381611fbf565b600061092582611fcf565b611b4381611fd9565b6000611ff98383611bf0565b505060200190565b600061200b825190565b80845260209384019383018060005b8381101561203f57815161202e8882611fed565b97506020830192505060010161201a565b509495945050505050565b8051600090604084019061205e8582611fe4565b50602083015184820360208601526120768282612001565b95945050505050565b6000610922838361204a565b6000612095825190565b808452602084019350836020820285016120af8560200190565b8060005b858110156120e457848403895281516120cc858261207f565b94506020830160209a909a01999250506001016120b3565b5091979650505050505050565b60208082528101610922818461208b565b60008083601f84011261211757612117600080fd5b5081356001600160401b0381111561213157612131600080fd5b60208301915083600182028301111561214c5761214c600080fd5b9250929050565b6000806000806060858703121561216c5761216c600080fd5b60006121788787611b03565b945050602061218987828801611aa7565b93505060408501356001600160401b038111156121a8576121a8600080fd5b6121b487828801612102565b95989497509550505050565b611b4381611a71565b6020810161092582846121c0565b6000602082840312156121ec576121ec600080fd5b81356001600160401b0381111561220557612205600080fd5b611a3084828501611e22565b60006001600160401b0382111561222a5761222a611c1a565b601f19601f83011660200192915050565b82818337506000910152565b6000612255611cdb84612211565b90508281526020810184848401111561227057612270600080fd5b61227b84828561223b565b509392505050565b600082601f83011261229757612297600080fd5b8135611a30848260208601612247565b6000602082840312156122bc576122bc600080fd5b81356001600160401b038111156122d5576122d5600080fd5b611a3084828501612283565b6001600160401b038116611b43565b608081016122fe82876121c0565b61230b60208301866122e1565b6123186040830185611bf0565b818103606083015261232a818461208b565b9695505050505050565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b6020808252810161092581612334565b602581526000602082017f5061796d656e743a207769746864726177206e617469766520746f6b656e2066815264185a5b195960da1b602082015291505b5060400190565b6020808252810161092581612379565b604081016123dc8285611b3a565b6118f16020830184611bf0565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291506123b7565b60208082528101610925816123e9565b601c81526000602082017f5061757365723a2043616c6c6572206973206e6f74207061757365720000000081529150612362565b6020808252810161092581612444565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b81529150612362565b6020808252810161092581612488565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081529150612362565b60208082528101610925816124bf565b801515611a8b565b805161092581612503565b60006020828403121561252b5761252b600080fd5b6000611a30848461250b565b602981526000602082017f447374436861696e5061796d656e743a2063616c6c6572206973206e6f74206181526810383937bb34b232b960b91b602082015291506123b7565b6020808252810161092581612537565b602e81526000602082017f447374436861696e5061796d656e743a20696e73756666696369656e7420707281526d6f76696465722062616c616e636560901b602082015291506123b7565b602080825281016109258161258d565b608081016125f682876121c0565b6126036020830186611b3a565b61261060408301856121c0565b6120766060830184611bf0565b603681526000602082017f4d6573736167655265636569766572577261707065723a2063616c6c6572206981527539903737ba1036b2b9b9b0b3b2903932b1b2b4bb32b960511b602082015291506123b7565b602080825281016109258161261d565b601e81526000602082017f447374436861696e5061796d656e743a20696e76616c696420746f6b656e000081529150612362565b6020808252810161092581612680565b602a81526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152690c2c8e640d8cadccee8d60b31b602082015291506123b7565b60208082528101610925816126c4565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060001982141561275b5761275b612731565b5060010190565b805161092581611a82565b805161092581611c78565b805161092581611aa1565b805161092581611cb5565b600061279c611cdb84611c92565b838152905060208082019084028301858111156127bb576127bb600080fd5b835b81811015611d2357806127d08882612778565b845250602092830192016127bd565b600082601f8301126127f3576127f3600080fd5b8151611a3084826020860161278e565b60006040828403121561281857612818600080fd5b6128226040611c5c565b905060006128308484612783565b82525060208201516001600160401b0381111561284f5761284f600080fd5b611da9848285016127df565b6000612869611cdb84611c92565b8381529050602080820190840283018581111561288857612888600080fd5b835b81811015611d235780516001600160401b038111156128ab576128ab600080fd5b8086016128b88982612803565b855250506020928301920161288a565b600082601f8301126128dc576128dc600080fd5b8151611a3084826020860161285b565b6000806000806080858703121561290557612905600080fd5b60006129118787612762565b94505060206129228782880161276d565b935050604061293387828801612778565b92505060608501516001600160401b0381111561295257612952600080fd5b61295e878288016128c8565b91505092959194509250565b606081016129788286611b3a565b61298560208301856121c0565b611a306040830184611bf0565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015291506123b7565b6020808252810161092581612992565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b602082015291506123b7565b60208082528101610925816129e5565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b81529150612362565b6020808252810161092581612a3d565b602581526000602082017f447374436861696e5061796d656e743a206e6f6e6578697374656e742070726f8152643b34b232b960d91b602082015291506123b7565b6020808252810161092581612a78565b6000612ad4825190565b80845260208401935083602082028501612aee8560200190565b8060005b858110156120e45784840389528151612b0b858261207f565b94506020830160209a909a0199925050600101612af2565b80516000906080840190612b3785826121c0565b506020830151612b4a60208601826122e1565b506040830151612b5d6040860182611bf0565b50606083015184820360608601526120768282612aca565b60608101612b8382866121c0565b612b906020830185611b3a565b81810360408301526120768184612b23565b600082821015612bb457612bb4612731565b500390565b604081016123dc82856121c0565b602981526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152680c2c840d8cadccee8d60bb1b602082015291506123b7565b6020808252810161092581612bc7565b601e81526000602082017f5265736f75725061796c6f6164546f6f6c3a207a65726f2076616c756573000081529150612362565b6020808252810161092581612c1d565b602781526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c69642076616c7565815266040d8cadccee8d60cb1b602082015291506123b7565b6020808252810161092581612c61565b601d81526000602082017f5061757365723a204163636f756e74206973206e6f742070617573657200000081529150612362565b6020808252810161092581612cb5565b602181526000602082017f5061757365723a204163636f756e7420697320616c72656164792070617573658152603960f91b602082015291506123b7565b6020808252810161092581612cf9565b60008219821115612d5a57612d5a612731565b500190565b602181526000602082017f447374436861696e5061796d656e743a20696e76616c6964207061796c6f61648152607360f81b602082015291506123b7565b6020808252810161092581612d5f565b602681526000602082017f447374436861696e5061796d656e743a20756e6b6e6f776e207265736f75726381526565207479706560d01b602082015291506123b7565b6020808252810161092581612dad565b6060810161297882866121c0565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015291506123b7565b6020808252810161092581612e0e565b6000816000190483118215151615612e7f57612e7f612731565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612ea957612ea9612e84565b500490565b602b81526000602082017f447374436861696e5061796d656e743a20696e76616c696420746f6b656e207681526a0c2d8eaca40d8cadccee8d60ab1b602082015291506123b7565b6020808252810161092581612eae565b604081016123dc8285611bf0565b600060208284031215612f2957612f29600080fd5b6000611a308484612778565b60608101612f438286611bf0565b6129856020830185611bf0565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081529150612362565b6020808252810161092581612f50565b60005b83811015612faf578181015183820152602001612f97565b8381111561177c5750506000910152565b6000612fca825190565b612fd8818560208601612f94565b9290920192915050565b60006118f18284612fc0565b6000612ff8825190565b80845260208401935061300f818560208601612f94565b601f01601f19169290920192915050565b602080825281016109228184612fee56fea26469706673582212200493b6ce94abb3a1fa0d7ce25b9e793b00d98c4d71c50d4b0ff7f42397f179bc64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 147,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 150,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1608,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 122,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 4221,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "messageReceiver",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 339,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_status",
        "offset": 0,
        "slot": "102",
        "type": "t_uint256"
      },
      {
        "astId": 383,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "__gap",
        "offset": 0,
        "slot": "103",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 235,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_paused",
        "offset": 0,
        "slot": "152",
        "type": "t_bool"
      },
      {
        "astId": 324,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "__gap",
        "offset": 0,
        "slot": "153",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3319,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "pausers",
        "offset": 0,
        "slot": "202",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6419,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "providers",
        "offset": 0,
        "slot": "203",
        "type": "t_contract(IProviders)3798"
      },
      {
        "astId": 6597,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "buildingTimeController",
        "offset": 0,
        "slot": "204",
        "type": "t_contract(INormalResourceController)7909"
      },
      {
        "astId": 6600,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "bandwidthController",
        "offset": 0,
        "slot": "205",
        "type": "t_contract(INormalResourceController)7909"
      },
      {
        "astId": 6603,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "arStorageController",
        "offset": 0,
        "slot": "206",
        "type": "t_contract(INormalResourceController)7909"
      },
      {
        "astId": 6606,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "ipfsStorageController",
        "offset": 0,
        "slot": "207",
        "type": "t_contract(IIPFSStorageController)7881"
      },
      {
        "astId": 4937,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "token",
        "offset": 0,
        "slot": "208",
        "type": "t_contract(IERC20Upgradeable)1075"
      },
      {
        "astId": 4941,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "providerBalances",
        "offset": 0,
        "slot": "209",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20Upgradeable)1075": {
        "encoding": "inplace",
        "label": "contract IERC20Upgradeable",
        "numberOfBytes": "20"
      },
      "t_contract(IIPFSStorageController)7881": {
        "encoding": "inplace",
        "label": "contract IIPFSStorageController",
        "numberOfBytes": "20"
      },
      "t_contract(INormalResourceController)7909": {
        "encoding": "inplace",
        "label": "contract INormalResourceController",
        "numberOfBytes": "20"
      },
      "t_contract(IProviders)3798": {
        "encoding": "inplace",
        "label": "contract IProviders",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}