{
  "address": "0x4E87C89B69cb8601cC238C3df247390959Cd17b0",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract INormalResourceController",
          "name": "_arStorageController",
          "type": "address"
        }
      ],
      "name": "ARStorageControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract INormalResourceController",
          "name": "_bandwidthController",
          "type": "address"
        }
      ],
      "name": "BandwidthControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract INormalResourceController",
          "name": "_buildingTimeController",
          "type": "address"
        }
      ],
      "name": "BuildingTimeControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IIPFSStorageController",
          "name": "_ipfsStorageController",
          "type": "address"
        }
      ],
      "name": "IPFSStorageControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "messageReceiver",
          "type": "address"
        }
      ],
      "name": "MessageReceiverUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "NativeWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "account",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "enum ResourceData.ResourceType",
                  "name": "resourceType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct ResourceData.Payload[]",
              "name": "payloads",
              "type": "tuple[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IDstChainPayment.PaymentPayload",
          "name": "payload",
          "type": "tuple"
        }
      ],
      "name": "Paid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IProviders",
          "name": "providers",
          "type": "address"
        }
      ],
      "name": "ProvidersUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ProvidetWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pauser",
          "type": "address"
        },
        {
          "internalType": "contract IProviders",
          "name": "providers",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messageReceiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "Init_Payment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "arStorageController",
      "outputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bandwidthController",
      "outputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buildingTimeController",
      "outputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "enum ResourceData.ResourceType",
              "name": "resourceType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ResourceData.Payload[]",
          "name": "payloads",
          "type": "tuple[]"
        }
      ],
      "name": "convertSourceChainPayloads",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum ResourceData.ResourceType",
              "name": "resourceType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ResourceData.Payload[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "decodeSourceChainMessage",
      "outputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes32",
          "name": "account",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "enum ResourceData.ResourceType",
              "name": "resourceType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ResourceData.Payload[]",
          "name": "payloads",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pauser",
          "type": "address"
        },
        {
          "internalType": "contract IProviders",
          "name": "providers",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messageReceiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ipfsStorageController",
      "outputs": [
        {
          "internalType": "contract IIPFSStorageController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ownerWithdrawERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ownerWithdrawNative",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pausers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "account",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "enum ResourceData.ResourceType",
                  "name": "resourceType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct ResourceData.Payload[]",
              "name": "payloads",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IDstChainPayment.PaymentPayload",
          "name": "payload",
          "type": "tuple"
        }
      ],
      "name": "pay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "dstAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "payFromSourceChain",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "providerBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "providerWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "providers",
      "outputs": [
        {
          "internalType": "contract IProviders",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "_arStorageController",
          "type": "address"
        }
      ],
      "name": "setARStorageController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "_bandwidthController",
          "type": "address"
        }
      ],
      "name": "setBandwidthController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "_buildingTimeController",
          "type": "address"
        }
      ],
      "name": "setBuildingTimeController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IIPFSStorageController",
          "name": "_ipfsStorageController",
          "type": "address"
        }
      ],
      "name": "setIPFSStorageController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageReceiver",
          "type": "address"
        }
      ],
      "name": "setMessageReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum ResourceData.ResourceType",
              "name": "resourceType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ResourceData.Payload[]",
          "name": "payloads",
          "type": "tuple[]"
        }
      ],
      "name": "totalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x45a4c8e1ab4b806d2be4bb4487ea433fa0a7dbf8c55930b74b057cff3035c639",
  "receipt": {
    "to": null,
    "from": "0xF1658C608708172655A8e70a1624c29F956Ee63D",
    "contractAddress": "0x4E87C89B69cb8601cC238C3df247390959Cd17b0",
    "transactionIndex": 10,
    "gasUsed": "2899394",
    "logsBloom": "0x
    "blockHash": "0xb013b5f7c3b2f79e22de4b37a7b2caf0d8540a93fe55106760d4654a08560297",
    "transactionHash": "0x45a4c8e1ab4b806d2be4bb4487ea433fa0a7dbf8c55930b74b057cff3035c639",
    "logs": [],
    "blockNumber": 19172748,
    "cumulativeGasUsed": "3862375",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "9e100c3eb450aac9cf89c4ce9965fe71",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract INormalResourceController\",\"name\":\"_arStorageController\",\"type\":\"address\"}],\"name\":\"ARStorageControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract INormalResourceController\",\"name\":\"_bandwidthController\",\"type\":\"address\"}],\"name\":\"BandwidthControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract INormalResourceController\",\"name\":\"_buildingTimeController\",\"type\":\"address\"}],\"name\":\"BuildingTimeControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IIPFSStorageController\",\"name\":\"_ipfsStorageController\",\"type\":\"address\"}],\"name\":\"IPFSStorageControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"messageReceiver\",\"type\":\"address\"}],\"name\":\"MessageReceiverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NativeWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct IDstChainPayment.PaymentPayload\",\"name\":\"payload\",\"type\":\"tuple\"}],\"name\":\"Paid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IProviders\",\"name\":\"providers\",\"type\":\"address\"}],\"name\":\"ProvidersUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ProvidetWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"contract IProviders\",\"name\":\"providers\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"messageReceiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"Init_Payment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arStorageController\",\"outputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bandwidthController\",\"outputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buildingTimeController\",\"outputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"name\":\"convertSourceChainPayloads\",\"outputs\":[{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"decodeSourceChainMessage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"contract IProviders\",\"name\":\"providers\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"messageReceiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsStorageController\",\"outputs\":[{\"internalType\":\"contract IIPFSStorageController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ownerWithdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ownerWithdrawNative\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pausers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IDstChainPayment.PaymentPayload\",\"name\":\"payload\",\"type\":\"tuple\"}],\"name\":\"pay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dstAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"payFromSourceChain\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"providerBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"providerWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"providers\",\"outputs\":[{\"internalType\":\"contract IProviders\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"_arStorageController\",\"type\":\"address\"}],\"name\":\"setARStorageController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"_bandwidthController\",\"type\":\"address\"}],\"name\":\"setBandwidthController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"_buildingTimeController\",\"type\":\"address\"}],\"name\":\"setBuildingTimeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIPFSStorageController\",\"name\":\"_ipfsStorageController\",\"type\":\"address\"}],\"name\":\"setIPFSStorageController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageReceiver\",\"type\":\"address\"}],\"name\":\"setMessageReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"name\":\"totalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/payment/DstChainPayment.sol\":\"DstChainPayment\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/IERC20Upgradeable.sol\\\";\\n\",\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMathUpgradeable {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\"},\"contracts/access/OwnerWithdrawable.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol';\\n\\nabstract contract OwnerWithdrawable is OwnableUpgradeable  {\\n\\tusing SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n\\tevent Withdrawal(IERC20Upgradeable token, address to, uint256 value);\\n\\n\\tevent NativeWithdrawal(address to, uint256 value);\\n\\n\\tfunction ownerWithdrawERC20(IERC20Upgradeable token, address to, uint256 value) external onlyOwner {\\n\\t\\ttoken.safeTransfer(to, value);\\n\\t\\temit Withdrawal(token, to, value);\\n\\t}\\n\\n\\tfunction ownerWithdrawNative(address payable to, uint256 value) external onlyOwner {\\n\\t\\tbool success = to.send(value);\\n\\t\\trequire(success, 'Payment: withdraw native token failed');\\n\\t\\temit NativeWithdrawal(to, value);\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x91f773098ab8e0d59ac381129cea676a148a5895581ce9e6e1d86b1c19415030\",\"license\":\"UNLICENSE\"},\"contracts/access/Pauser.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol';\\n\\nabstract contract Pauser is OwnableUpgradeable, PausableUpgradeable {\\n\\tmapping(address => bool) public pausers;\\n\\n\\tevent PauserAdded(address account);\\n\\tevent PauserRemoved(address account);\\n\\n\\tfunction __Init_Pauser(address account) internal onlyInitializing {\\n\\t\\t_addPauser(account);\\n\\t}\\n\\n\\tmodifier onlyPauser() {\\n\\t\\trequire(isPauser(msg.sender), 'Pauser: Caller is not pauser');\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction pause() public onlyPauser {\\n\\t\\t_pause();\\n\\t}\\n\\n\\tfunction unpause() public onlyPauser {\\n\\t\\t_unpause();\\n\\t}\\n\\n\\tfunction isPauser(address account) public view returns (bool) {\\n\\t\\treturn pausers[account];\\n\\t}\\n\\n\\tfunction addPauser(address account) public onlyOwner {\\n\\t\\t_addPauser(account);\\n\\t}\\n\\n\\tfunction removePauser(address account) public onlyOwner {\\n\\t\\t_removePauser(account);\\n\\t}\\n\\n\\tfunction renouncePauser() public {\\n\\t\\t_removePauser(msg.sender);\\n\\t}\\n\\n\\tfunction _addPauser(address account) private {\\n\\t\\trequire(!isPauser(account), 'Pauser: Account is already pauser');\\n\\t\\tpausers[account] = true;\\n\\t\\temit PauserAdded(account);\\n\\t}\\n\\n\\tfunction _removePauser(address account) private {\\n\\t\\trequire(isPauser(account), 'Pauser: Account is not pauser');\\n\\t\\tpausers[account] = false;\\n\\t\\temit PauserRemoved(account);\\n\\t}\\n}\\n\",\"keccak256\":\"0xc389407247a71425c067105ba1dbf04816e70f648e85f374a69b1cb72c40cb4c\",\"license\":\"GPL-3.0-only\"},\"contracts/interfaces/IDstChainPayment.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol';\\nimport '../libraries/ResourceData.sol';\\n\\ninterface IDstChainPayment {\\n\\n\\tstruct PaymentPayload {\\n\\t\\taddress provider;\\n\\t\\tuint64 nonce;\\n\\t\\tbytes32 account;\\n\\t\\tResourceData.Payload[] payloads;\\n\\t}\\n\\n\\tevent TokenUpdated(IERC20Upgradeable token);\\n\\n\\tevent Paid(address payer, IERC20Upgradeable token, PaymentPayload payload);\\n\\n\\tevent ProvidetWithdraw(address provider, IERC20Upgradeable token, address to, uint256 value);\\n\\n\\tfunction payFromSourceChain(\\n\\t\\tIERC20Upgradeable token,\\n\\t\\tuint256 amount,\\n\\t\\tbytes calldata message\\n\\t) external returns (uint256 value);\\n\\n\\tfunction pay(PaymentPayload memory payload) external returns (uint256 value);\\n\\n}\\n\",\"keccak256\":\"0xc3813dbd193aa5441b0b25adc1167593b210809669c4a4587f11cd9f27a16f1f\",\"license\":\"UNLICENSE\"},\"contracts/interfaces/IProviders.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\ninterface IProviders {\\n\\tevent ProviderUpdated(address provider, address wallet);\\n\\n\\tevent RemoveProvider(address provider);\\n\\n\\tfunction isProvider(address provider) external view returns (bool);\\n\\n\\tfunction wallets(address provider) external view returns (address);\\n\\n\\tfunction isValidSignature(\\n\\t\\taddress provider,\\n\\t\\tbytes32 hash,\\n\\t\\tbytes memory signature\\n\\t) external returns (bool);\\n}\\n\",\"keccak256\":\"0xfe5c997043f05e2b105bbbfe9d006d7f2d0049f20ba6b2b74cc397cc65be2f77\",\"license\":\"UNLICENSE\"},\"contracts/interfaces/IProvidersWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '../interfaces/IProviders.sol';\\n\\ninterface IProvidersWrapper {\\n\\tevent ProvidersUpdated(IProviders providers);\\n\\n\\tfunction providers() external view returns (IProviders);\\n}\\n\",\"keccak256\":\"0x1d2ca264ab54ad537468faa0deb6ec04ec367fc013b31ed20debe31842eae560\",\"license\":\"UNLICENSE\"},\"contracts/libraries/ResourceData.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nlibrary ResourceData {\\n\\n\\tenum ResourceType {\\n\\t\\tNull,\\n\\t\\tBuildingTime,\\n\\t\\tBandwidth,\\n\\t\\tARStorage,\\n\\t\\tIPFSStorage\\n\\t}\\n\\n\\tstruct Payload {\\n\\t\\tResourceData.ResourceType resourceType;\\n\\t\\tuint256[] values;\\n\\t}\\n\\n}\",\"keccak256\":\"0xdb575db840fd52f2ae05d464d6626137508ed25bc308badaa6badfdbed25b578\",\"license\":\"UNLICENSE\"},\"contracts/messages/MessageReceiverWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\n\\nabstract contract MessageReceiverWrapper is OwnableUpgradeable {\\n\\taddress public messageReceiver;\\n\\n\\tevent MessageReceiverUpdated(address messageReceiver);\\n\\n\\tmodifier onlyMessageReceiver() {\\n\\t\\trequire(msg.sender == messageReceiver, 'MessageReceiverWrapper: caller is not message receiver');\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction __Init_Message_Receiver(address _messageReceiver) internal onlyInitializing {\\n\\t\\t_setMessageReceiver(_messageReceiver);\\n\\t}\\n\\n\\tfunction setMessageReceiver(address _messageReceiver) external onlyOwner {\\n\\t\\t_setMessageReceiver(_messageReceiver);\\n\\t}\\n\\n\\tfunction _setMessageReceiver(address _messageReceiver) internal {\\n\\t\\tmessageReceiver = _messageReceiver;\\n\\t\\temit MessageReceiverUpdated(_messageReceiver);\\n\\t}\\n\\n}\",\"keccak256\":\"0xb04a31226c0fc2c345ece6675f3a613f3f07d49034c2a012f769d2ad4fb68346\",\"license\":\"GPL-3.0-only\"},\"contracts/payment/DstChainPayment.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol';\\n\\nimport '../resources/ControllersWrapper.sol';\\nimport '../interfaces/IDstChainPayment.sol';\\nimport '../providers/ProvidersWrapper.sol';\\nimport '../messages/MessageReceiverWrapper.sol';\\nimport '../access/OwnerWithdrawable.sol';\\nimport './ResourPayloadTool.sol';\\n\\ncontract DstChainPayment is\\n\\tIDstChainPayment,\\n\\tResourPayloadTool,\\n\\tMessageReceiverWrapper,\\n\\tReentrancyGuardUpgradeable,\\n\\tProvidersWrapper,\\n\\tControllersWrapper,\\n\\tOwnerWithdrawable\\n{\\n\\tusing SafeMathUpgradeable for uint256;\\n\\tusing SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n\\tIERC20Upgradeable public token;\\n\\n\\tmapping(address => uint256) public providerBalances;\\n\\n\\tconstructor() initializer {}\\n\\n\\tfunction initialize(\\n\\t\\taddress owner,\\n\\t\\taddress pauser,\\n\\t\\tIProviders providers,\\n\\t\\taddress messageReceiver,\\n\\t\\tIERC20Upgradeable token\\n\\t) external initializer {\\n\\t\\t_transferOwnership(owner);\\n\\t\\t__Init_Pauser(pauser);\\n\\t\\t__Init_Providers(providers);\\n\\t\\t__Init_Message_Receiver(messageReceiver);\\n\\t\\t__Init_Token(token);\\n\\t}\\n\\n\\tfunction Init_Payment(\\n\\t\\taddress owner,\\n\\t\\taddress pauser,\\n\\t\\tIProviders providers,\\n\\t\\taddress messageReceiver,\\n\\t\\tIERC20Upgradeable token\\n\\t) external initializer {\\n\\t\\t_transferOwnership(owner);\\n\\t\\t__Init_Pauser(pauser);\\n\\t\\t__Init_Providers(providers);\\n\\t\\t__Init_Message_Receiver(messageReceiver);\\n\\t\\t__Init_Token(token);\\n\\t}\\n\\n\\tfunction __Init_Token(IERC20Upgradeable _token) internal onlyInitializing {\\n\\t\\t_setToken(_token);\\n\\t}\\n\\n\\tfunction convertSourceChainPayloads(uint256 amount, ResourceData.Payload[] memory payloads) public view returns (ResourceData.Payload[] memory) {\\n\\t\\treturn _convertSourceChainPayloads(amount, payloads);\\n\\t}\\n\\n\\tfunction payFromSourceChain(\\n\\t\\tIERC20Upgradeable _token,\\n\\t\\tuint256 dstAmount,\\n\\t\\tbytes calldata message\\n\\t) external override onlyMessageReceiver whenNotPaused nonReentrant returns (uint256 value) {\\n\\t\\trequire(token == _token, 'DstChainPayment: invalid token');\\n\\t\\t(address provider, uint64 nonce, bytes32 account, ResourceData.Payload[] memory payloads) = decodeSourceChainMessage(message);\\n\\t\\tPaymentPayload memory payload = PaymentPayload(provider, nonce, account, _convertSourceChainPayloads(matchResourceDecimals(dstAmount), payloads));\\n\\t\\t_processPayloads(payload.account, payload.payloads, false);\\n\\t\\t_pay(payload.provider, dstAmount);\\n\\n\\t\\temit Paid(msg.sender, token, payload);\\n\\t}\\n\\n\\tfunction pay(PaymentPayload memory payload) public override whenNotPaused nonReentrant returns (uint256 value) {\\n\\t\\tvalue = _processPayloads(payload.account, payload.payloads, true);\\n\\t\\tvalue = matchTokenDecimals(value);\\n\\t\\t_pay(payload.provider, value);\\n\\t\\n\\t\\temit Paid(msg.sender, token, payload);\\n\\t}\\n\\n\\tfunction _pay(address provider, uint256 amount) internal returns (uint256 value) {\\n\\t\\trequire(providers.isProvider(provider), 'DstChainPayment: nonexistent provider');\\n\\t\\ttoken.safeTransferFrom(msg.sender, address(this), amount);\\n\\t\\tproviderBalances[provider] = providerBalances[provider].add(amount);\\n\\n\\t}\\n\\n\\tfunction _processPayloads(bytes32 account, ResourceData.Payload[] memory payloads, bool withValue) internal returns (uint256 value) {\\n\\t\\trequire(payloads.length > 0, 'DstChainPayment: invalid payloads');\\n\\t\\tfor (uint256 i = 0; i < payloads.length; i++) {\\n\\t\\t\\tResourceData.Payload memory payload = payloads[i];\\n\\t\\t\\tif (payload.resourceType == ResourceData.ResourceType.BuildingTime) {\\n\\t\\t\\t\\trequire(payload.values.length == 1, 'DstChainPayment: invalid value length for BuildingTime');\\n\\t\\t\\t\\tbuildingTimeController.expand(account, payload.values[0]);\\n\\t\\t\\t} else if (payload.resourceType == ResourceData.ResourceType.ARStorage) {\\n\\t\\t\\t\\trequire(payload.values.length == 1, 'DstChainPayment: invalid value length for ARStorage');\\n\\t\\t\\t\\tarStorageController.expand(account, payload.values[0]);\\n\\t\\t\\t} else if (payload.resourceType == ResourceData.ResourceType.Bandwidth) {\\n\\t\\t\\t\\trequire(payload.values.length == 1, 'DstChainPayment: invalid value length for Bandwidth');\\n\\t\\t\\t\\tbandwidthController.expand(account, payload.values[0]);\\n\\t\\t\\t} else if (payload.resourceType == ResourceData.ResourceType.IPFSStorage) {\\n\\t\\t\\t\\trequire(payload.values.length == 2, 'DstChainPayment: invalid value length for IPFSStorage');\\n\\t\\t\\t\\tipfsStorageController.expand(account, payload.values[0], payload.values[1]);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\trevert('DstChainPayment: unknown resource type');\\n\\t\\t\\t}\\n\\t\\t\\tif (withValue) {\\n\\t\\t\\t\\tfor (uint256 j = 0; j < payload.values.length; j++) {\\n\\t\\t\\t\\t\\tvalue = value.add(payload.values[0]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfunction matchResourceDecimals(uint256 amount) internal view returns (uint256 value) {\\n\\t\\treturn amount.mul(10**12);\\n\\t}\\n\\n\\tfunction matchTokenDecimals(uint256 amount) internal view returns (uint256 value) {\\n\\t\\treturn amount.div(10**12);\\n\\t}\\n\\n\\tfunction providerWithdraw(\\n\\t\\tIERC20Upgradeable token,\\n\\t\\taddress to,\\n\\t\\tuint256 value\\n\\t) external whenNotPaused nonReentrant {\\n\\t\\trequire(providers.isProvider(msg.sender), 'DstChainPayment: caller is not a provider');\\n\\t\\trequire(providerBalances[msg.sender] >= value, 'DstChainPayment: insufficient provider balance');\\n\\t\\tproviderBalances[msg.sender] = providerBalances[msg.sender].sub(value);\\n\\t\\ttoken.safeTransfer(to, value);\\n\\n\\t\\temit ProvidetWithdraw(msg.sender, token, to, value);\\n\\t}\\n\\n\\tfunction setToken(IERC20Upgradeable _token) external onlyOwner {\\n\\t\\t_setToken(_token);\\n\\t}\\n\\n\\tfunction _setToken(IERC20Upgradeable _token) internal {\\n\\t\\ttoken = _token;\\n\\t\\temit TokenUpdated(_token);\\n\\t}\\n\\n\\tfunction decodeSourceChainMessage(bytes memory message)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\treturns (\\n\\t\\t\\taddress provider,\\n\\t\\t\\tuint64 nonce,\\n\\t\\t\\tbytes32 account,\\n\\t\\t\\tResourceData.Payload[] memory payloads\\n\\t\\t)\\n\\t{\\n\\t\\t(provider, nonce, account, payloads) = abi.decode(message, (address, uint64, bytes32, ResourceData.Payload[]));\\n\\t}\\n}\\n\",\"keccak256\":\"0x3137351dbf69ee1895e3e2113bce92e1d0fdf6e7a0a85be00f8db1dd50024c70\",\"license\":\"GPL-3.0-only\"},\"contracts/payment/ResourPayloadTool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol';\\n\\nimport '../libraries/ResourceData.sol';\\n\\nabstract contract ResourPayloadTool {\\n\\tusing SafeMathUpgradeable for uint256;\\n\\n\\tfunction _convertSourceChainPayloads(uint256 dstAmount, ResourceData.Payload[] memory payloads) internal pure returns (ResourceData.Payload[] memory newPayloads) {\\n\\t\\trequire(payloads.length > 0, 'ResourPayloadTool: invalid payload length');\\n\\t\\tuint256 total = totalValue(payloads);\\n\\t\\trequire(total > 0, 'ResourPayloadTool: zero total value');\\n\\t\\tfor (uint256 i = 0; i < payloads.length; i++) {\\n\\t\\t\\trequire(payloads[i].values.length > 0, 'ResourPayloadTool: invalid value length');\\n\\t\\t\\tfor (uint256 j = 0; j < payloads[i].values.length; j++) {\\n\\t\\t\\t\\tpayloads[i].values[j] = payloads[i].values[j].mul(dstAmount).div(total);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn payloads;\\n\\t}\\n\\n\\tfunction totalValue(ResourceData.Payload[] memory payloads) public pure returns (uint256 value) {\\n\\t\\trequire(payloads.length > 0, 'ResourPayloadTool: invalid payloads length');\\n\\t\\tfor (uint256 i = 0; i < payloads.length; i++) {\\n\\t\\t\\tfor (uint256 j = 0; j < payloads[i].values.length; j++) {\\n\\t\\t\\t\\tvalue = value.add(payloads[i].values[j]);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0xbc1c91b8881fe0049a2c6db818334c4a0a507975189b2efb046f43dc52f723fe\",\"license\":\"GPL-3.0-only\"},\"contracts/providers/ProvidersWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\nimport '../access/Pauser.sol';\\nimport '../interfaces/IProvidersWrapper.sol';\\n\\nabstract contract ProvidersWrapper is IProvidersWrapper, Pauser {\\n\\tIProviders public override providers;\\n\\n\\tfunction __Init_Providers(IProviders _providers) internal onlyInitializing {\\n\\t\\t_setProviders(_providers);\\n\\t}\\n\\n\\tfunction _setProviders(IProviders _providers) internal {\\n\\t\\tproviders = _providers;\\n\\t\\temit ProvidersUpdated(_providers);\\n\\t}\\n}\\n\",\"keccak256\":\"0x42a8d8694c5b5f3858788b270b57660ce7c14a1abef3e8a534fa985d78e41391\",\"license\":\"UNLICENSE\"},\"contracts/resources/ControllersWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport '../resources/interfaces/INormalResourceController.sol';\\nimport '../resources/interfaces/IIPFSStorageController.sol';\\n\\nabstract contract ControllersWrapper is OwnableUpgradeable {\\n\\n\\tINormalResourceController public buildingTimeController;\\n\\n\\tINormalResourceController public bandwidthController;\\n\\n\\tINormalResourceController public arStorageController;\\n\\n\\tIIPFSStorageController public ipfsStorageController;\\n\\n\\tevent BuildingTimeControllerUpdated(INormalResourceController _buildingTimeController);\\n\\n\\tevent BandwidthControllerUpdated(INormalResourceController _bandwidthController);\\n\\n\\tevent ARStorageControllerUpdated(INormalResourceController _arStorageController);\\n\\n\\tevent IPFSStorageControllerUpdated(IIPFSStorageController _ipfsStorageController);\\n\\n\\tfunction setBuildingTimeController(INormalResourceController _buildingTimeController) external onlyOwner {\\n\\t\\t_setBuildingTimeController(_buildingTimeController);\\n\\t}\\n\\n\\tfunction setBandwidthController(INormalResourceController _bandwidthController) external onlyOwner {\\n\\t\\t_setBandwidthController(_bandwidthController);\\n\\t}\\n\\n\\tfunction setARStorageController(INormalResourceController _arStorageController) external onlyOwner {\\n\\t\\t_setARStorageController(_arStorageController);\\n\\t}\\n\\n\\tfunction setIPFSStorageController(IIPFSStorageController _ipfsStorageController) external onlyOwner {\\n\\t\\t_setIPFSStorageController(_ipfsStorageController);\\n\\t}\\n\\n\\tfunction _setBuildingTimeController(INormalResourceController _buildingTimeController) internal {\\n\\t\\tbuildingTimeController = _buildingTimeController;\\n\\t\\temit BuildingTimeControllerUpdated(_buildingTimeController);\\n\\t}\\n\\n\\tfunction _setBandwidthController(INormalResourceController _bandwidthController) internal {\\n\\t\\tbandwidthController = _bandwidthController;\\n\\t\\temit BandwidthControllerUpdated(_bandwidthController);\\n\\t}\\n\\n\\tfunction _setARStorageController(INormalResourceController _arStorageController) internal {\\n\\t\\tarStorageController = _arStorageController;\\n\\t\\temit ARStorageControllerUpdated(_arStorageController);\\n\\t}\\n\\n\\tfunction _setIPFSStorageController(IIPFSStorageController _ipfsStorageController) internal {\\n\\t\\tipfsStorageController = _ipfsStorageController;\\n\\t\\temit IPFSStorageControllerUpdated(_ipfsStorageController);\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x940019f75ae5cd36393f33cf0f73a5c8afa6da4e5c586166ef9115c0626a49dc\",\"license\":\"GPL-3.0-only\"},\"contracts/resources/interfaces/IAdaptorWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '../interfaces/IResourceAdaptor.sol';\\nimport '../../libraries/ResourceData.sol';\\n\\ninterface IAdaptorWrapper {\\n\\tevent ResourceAdaptorUpdated(IResourceAdaptor adaptor);\\n\\n\\tevent ResourceTypeUpdated(ResourceData.ResourceType resourceType);\\n\\n\\tfunction adaptor() external view returns (IResourceAdaptor);\\n\\n\\tfunction resourceType() external view returns (ResourceData.ResourceType);\\n\\n\\tfunction price() external view returns (uint256);\\n\\n\\tfunction getValueOf(uint256 amount) external view returns (uint256);\\n\\n\\tfunction getAmountOf(uint256 value) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd34f9e364967a82a04fea655b14e3d70c214f3735737cf59f7643fbaeaa6f735\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/IIPFSStorageController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\nimport '@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol';\\nimport './IAdaptorWrapper.sol';\\n\\ninterface IIPFSStorageController is IAdaptorWrapper {\\n\\tstruct IPFSStorage {\\n\\t\\tuint256 startTime;\\n\\t\\tuint256 expiration;\\n\\t\\tuint256 amount;\\n\\t}\\n\\n\\tevent Expanded(bytes32 account, uint256 expandedStorageFee, uint256 expandedExpirationFee);\\n\\n\\tfunction expand(\\n\\t\\tbytes32 account,\\n\\t\\tuint256 expandedStorageFee,\\n\\t\\tuint256 expandedExpirationFee\\n\\t) external returns (uint256);\\n\\n\\tfunction isExpired(bytes32 account) external view returns (bool);\\n\\n\\tfunction startTime(bytes32 account) external view returns (uint256);\\n\\n\\tfunction availableExpiration(bytes32 account) external view returns (uint256);\\n\\n\\tfunction expiration(bytes32 account) external view returns (uint256);\\n\\n\\tfunction expiredAt(bytes32 account) external view returns (uint256);\\n\\n\\tfunction balanceOf(bytes32 account) external view returns (uint256);\\n\\n\\tfunction expandedFee(\\n\\t\\tbytes32 account,\\n\\t\\tuint256 expandedStorage,\\n\\t\\tuint256 expandedExpiration\\n\\t) external view returns (uint256 expandedStorageFee, uint256 expandedExpirationFee);\\n\\n\\tfunction expansions(\\n\\t\\tbytes32 account,\\n\\t\\tuint256 expandedStorageFee,\\n\\t\\tuint256 expandedExpirationFee\\n\\t) external view returns (uint256 expandedStorage, uint256 expandedExpiration);\\n}\\n\",\"keccak256\":\"0xda13c1cb10e7860d2776f95ef597f349c8b047f9f1a0ad6adde71dc2caa70a00\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/INormalResourceController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport './IAdaptorWrapper.sol';\\n\\ninterface INormalResourceController is IAdaptorWrapper {\\n\\tevent Expanded(bytes32 account, uint256 value);\\n\\n\\tfunction expand(bytes32 account, uint256 value) external returns(uint256);\\n\\n\\tfunction balanceOf(bytes32 account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x73706ccbe9c3696d385acbd5ed0e45a424421f212bf9f1b726717fee0190bb33\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/IResourceAdaptor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '../../libraries/ResourceData.sol';\\n\\ninterface IResourceAdaptor {\\n\\n\\tfunction priceAt(ResourceData.ResourceType resourceType, uint256 _indexBlock) external view returns (uint256);\\n\\n\\tfunction getValueAt(\\n\\t\\tResourceData.ResourceType resourceType,\\n\\t\\tuint256 amount,\\n\\t\\tuint256 _indexBlock\\n\\t) external view returns (uint256);\\n\\n\\tfunction getAmountAt(\\n\\t\\tResourceData.ResourceType resourceType,\\n\\t\\tuint256 value,\\n\\t\\tuint256 _indexBlock\\n\\t) external view returns (uint256);\\n\\n\\tfunction priceOf(ResourceData.ResourceType resourceType) external view returns (uint256);\\n\\n\\tfunction getValueOf(ResourceData.ResourceType resourceType, uint256 amount) external view returns (uint256);\\n\\n\\tfunction getAmountOf(ResourceData.ResourceType resourceType, uint256 value) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf60bb837ce179f97f69cc642ef0b775cc58c952824869b89df3d29729133b738\",\"license\":\"UNLICENSE\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50600054610100900460ff166200002f5760005460ff161562000039565b620000396200009e565b620000615760405162461bcd60e51b81526004016200005890620000cb565b60405180910390fd5b600054610100900460ff1615801562000084576000805461ffff19166101011790555b801562000097576000805461ff00191690555b5062000124565b6000620000b630620000bc60201b62000e851760201c565b15905090565b6001600160a01b03163b151590565b602080825281016200011e81602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b92915050565b6132f480620001346000396000f3fe608060405234801561001057600080fd5b50600436106102115760003560e01c8063715018a611610125578063b05f87a8116100ad578063e84372491161007c578063e84372491461047c578063f2fde38b1461048f578063f8401fe6146104a2578063f8f071fa146104b5578063fc0c546a146104c857600080fd5b8063b05f87a814610420578063bb37111114610433578063bd16997514610446578063e2cae9f51461046957600080fd5b806382dc1ec4116100f457806382dc1ec4146103c55780638456cb59146103d85780638da5cb5b146103e0578063914fd2c3146103fa57806393563a951461040d57600080fd5b8063715018a61461037457806377ef533c1461037c5780637a7fa7531461038f57806380f51c12146103a257600080fd5b80634540a85b116101a85780635618ce2d116101775780635618ce2d1461031b5780635c975abb1461033b578063699256f4146103465780636b2c0f55146103595780636ef8d66d1461036c57600080fd5b80634540a85b146102c257806346fbf68e146102d5578063490e4fa2146102f557806349ea49e01461030857600080fd5b806328ac7f2c116101e457806328ac7f2c1461026757806329dbfc75146102945780633b8ccfb1146102a75780633f4ba83a146102ba57600080fd5b8063144fa6d7146102165780631459457a1461022b57806315e077691461023e5780632413c1271461022b575b600080fd5b610229610224366004611bdd565b6104db565b005b610229610239366004611c12565b61051a565b60ce54610251906001600160a01b031681565b60405161025e9190611ca4565b60405180910390f35b610287610275366004611cb2565b60d16020526000908152604090205481565b60405161025e9190611cd9565b60cc54610251906001600160a01b031681565b6102296102b5366004611cb2565b6105be565b6102296105f1565b6102296102d0366004611bdd565b610620565b6102e86102e3366004611cb2565b610653565b60405161025e9190611cef565b610287610303366004611fc6565b610671565b610229610316366004612000565b610747565b61032e610329366004612050565b6108e2565b60405161025e91906121ef565b60985460ff166102e8565b610229610354366004612200565b6108f7565b610229610367366004611cb2565b6109a5565b6102296109d8565b6102296109e1565b61028761038a366004612284565b610a15565b61022961039d366004611bdd565b610bcb565b6102e86103b0366004611cb2565b60ca6020526000908152604090205460ff1681565b6102296103d3366004611cb2565b610bfe565b610229610c31565b6033546001600160a01b03165b60405161025e91906122fa565b610229610408366004611bdd565b610c5e565b61022961041b366004612000565b610c91565b60cf54610251906001600160a01b031681565b610287610441366004612308565b610d02565b6104596104543660046123d0565b610dcf565b60405161025e9493929190612419565b6065546103ed906001600160a01b031681565b61022961048a366004611bdd565b610df9565b61022961049d366004611cb2565b610e2c565b60cb54610251906001600160a01b031681565b60cd54610251906001600160a01b031681565b60d054610251906001600160a01b031681565b6033546001600160a01b0316331461050e5760405162461bcd60e51b815260040161050590612492565b60405180910390fd5b61051781610e94565b50565b600054610100900460ff166105355760005460ff1615610539565b303b155b6105555760405162461bcd60e51b8152600401610505906124f0565b600054610100900460ff16158015610577576000805461ffff19166101011790555b61058086610eea565b61058985610f3c565b61059284610f63565b61059b83610f93565b6105a482610fba565b80156105b6576000805461ff00191690555b505050505050565b6033546001600160a01b031633146105e85760405162461bcd60e51b815260040161050590612492565b61051781610fe1565b6105fa33610653565b6106165760405162461bcd60e51b815260040161050590612534565b61061e61102c565b565b6033546001600160a01b0316331461064a5760405162461bcd60e51b815260040161050590612492565b61051781611092565b6001600160a01b0316600090815260ca602052604090205460ff1690565b600061067f60985460ff1690565b1561069c5760405162461bcd60e51b81526004016105059061256b565b600260665414156106bf5760405162461bcd60e51b8152600401610505906125af565b6002606655604082015160608301516106da919060016110dd565b90506106e581611440565b90506106f5826000015182611451565b5060d0546040517f699b2f7653a6bfb60eabd345a469cd1a72cf9733ed0179acb41b3d0b8d6b8583916107359133916001600160a01b031690869061266a565b60405180910390a16001606655919050565b60985460ff161561076a5760405162461bcd60e51b81526004016105059061256b565b6002606654141561078d5760405162461bcd60e51b8152600401610505906125af565b600260665560cb54604051636b074a0760e01b81526001600160a01b0390911690636b074a07906107c29033906004016122fa565b60206040518083038186803b1580156107da57600080fd5b505afa1580156107ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081291906126aa565b61082e5760405162461bcd60e51b815260040161050590612711565b33600090815260d1602052604090205481111561085d5760405162461bcd60e51b81526004016105059061276c565b33600090815260d16020526040902054610877908261154a565b33600090815260d1602052604090205561089b6001600160a01b0384168383611556565b7f6a5b5b630c1c43e83d8863b2f40228b9238480ce8c629132ea0862c7ce6c1b23338484846040516108d0949392919061277c565b60405180910390a15050600160665550565b60606108ee83836115b1565b90505b92915050565b6033546001600160a01b031633146109215760405162461bcd60e51b815260040161050590612492565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f193505050509050806109675760405162461bcd60e51b8152600401610505906127f3565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e48278383604051610998929190612803565b60405180910390a1505050565b6033546001600160a01b031633146109cf5760405162461bcd60e51b815260040161050590612492565b6105178161172f565b61061e3361172f565b6033546001600160a01b03163314610a0b5760405162461bcd60e51b815260040161050590612492565b61061e6000610eea565b6065546000906001600160a01b03163314610a425760405162461bcd60e51b815260040161050590612871565b60985460ff1615610a655760405162461bcd60e51b81526004016105059061256b565b60026066541415610a885760405162461bcd60e51b8152600401610505906125af565b600260665560d0546001600160a01b03868116911614610aba5760405162461bcd60e51b8152600401610505906128b5565b600080600080610aff87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610dcf92505050565b935093509350935060006040518060800160405280866001600160a01b03168152602001856001600160401b03168152602001848152602001610b4a610b448c6117a4565b856115b1565b8152509050610b638160400151826060015160006110dd565b508051610b70908a611451565b5060d0546040517f699b2f7653a6bfb60eabd345a469cd1a72cf9733ed0179acb41b3d0b8d6b858391610bb09133916001600160a01b031690859061266a565b60405180910390a15050600160665550919695505050505050565b6033546001600160a01b03163314610bf55760405162461bcd60e51b815260040161050590612492565b610517816117b5565b6033546001600160a01b03163314610c285760405162461bcd60e51b815260040161050590612492565b61051781611800565b610c3a33610653565b610c565760405162461bcd60e51b815260040161050590612534565b61061e611879565b6033546001600160a01b03163314610c885760405162461bcd60e51b815260040161050590612492565b610517816118d1565b6033546001600160a01b03163314610cbb5760405162461bcd60e51b815260040161050590612492565b610ccf6001600160a01b0384168383611556565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b6398838383604051610998939291906128c5565b600080825111610d245760405162461bcd60e51b815260040161050590612934565b60005b8251811015610dc95760005b838281518110610d4557610d45612944565b60200260200101516020015151811015610db657610da2848381518110610d6e57610d6e612944565b6020026020010151602001518281518110610d8b57610d8b612944565b60200260200101518461191c90919063ffffffff16565b925080610dae81612970565b915050610d33565b5080610dc181612970565b915050610d27565b50919050565b6000806000606084806020019051810190610dea9190612b15565b92989197509550909350915050565b6033546001600160a01b03163314610e235760405162461bcd60e51b815260040161050590612492565b61051781611928565b6033546001600160a01b03163314610e565760405162461bcd60e51b815260040161050590612492565b6001600160a01b038116610e7c5760405162461bcd60e51b815260040161050590612bd6565b61051781610eea565b6001600160a01b03163b151590565b60d080546001600160a01b0319166001600160a01b0383161790556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3090610edf908390611ca4565b60405180910390a150565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610c285760405162461bcd60e51b815260040161050590612c2e565b600054610100900460ff16610f8a5760405162461bcd60e51b815260040161050590612c2e565b61051781611973565b600054610100900460ff166105e85760405162461bcd60e51b815260040161050590612c2e565b600054610100900460ff1661050e5760405162461bcd60e51b815260040161050590612c2e565b606580546001600160a01b0319166001600160a01b0383161790556040517fafe9b28ca24a54df8c44769c685f7b92824aae021cdfcaa4719d493571a23c4c90610edf9083906122fa565b60985460ff1661104e5760405162461bcd60e51b815260040161050590612c69565b6098805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405161108891906122fa565b60405180910390a1565b60cf80546001600160a01b0319166001600160a01b0383161790556040517f7b091d9397a2f75213edeec1728b27a9d863f0f8aafb62fce0f1154f48f110f890610edf908390611ca4565b6000808351116110ff5760405162461bcd60e51b815260040161050590612cb7565b60005b835181101561143857600084828151811061111f5761111f612944565b602002602001015190506001600481111561113c5761113c6120a7565b8151600481111561114f5761114f6120a7565b14156112245780602001515160011461117a5760405162461bcd60e51b815260040161050590612d08565b60cc54602082015180516001600160a01b039092169163467aa8de9189916000906111a7576111a7612944565b60200260200101516040518363ffffffff1660e01b81526004016111cc929190612d18565b602060405180830381600087803b1580156111e657600080fd5b505af11580156111fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121e9190612d26565b506113c8565b600381516004811115611239576112396120a7565b1415611291578060200151516001146112645760405162461bcd60e51b815260040161050590612d85565b60ce54602082015180516001600160a01b039092169163467aa8de9189916000906111a7576111a7612944565b6002815160048111156112a6576112a66120a7565b14156112fe578060200151516001146112d15760405162461bcd60e51b815260040161050590612dd3565b60cd54602082015180516001600160a01b039092169163467aa8de9189916000906111a7576111a7612944565b600481516004811115611313576113136120a7565b14156113b05780602001515160021461133e5760405162461bcd60e51b815260040161050590612e23565b60cf54602082015180516001600160a01b0390921691634235fec091899160009061136b5761136b612944565b6020026020010151846020015160018151811061138a5761138a612944565b60200260200101516040518463ffffffff1660e01b81526004016111cc93929190612e33565b60405162461bcd60e51b815260040161050590612e91565b83156114255760005b8160200151518110156114235761140f82602001516000815181106113f8576113f8612944565b60200260200101518561191c90919063ffffffff16565b93508061141b81612970565b9150506113d1565b505b508061143081612970565b915050611102565b509392505050565b60006108f18264e8d4a510006119be565b60cb54604051636b074a0760e01b81526000916001600160a01b031690636b074a07906114829086906004016122fa565b60206040518083038186803b15801561149a57600080fd5b505afa1580156114ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d291906126aa565b6114ee5760405162461bcd60e51b815260040161050590612ee3565b60d054611506906001600160a01b03163330856119ca565b6001600160a01b038316600090815260d16020526040902054611529908361191c565b6001600160a01b03909316600090815260d160205260409020929092555090565b60006108ee8284612ef3565b6115ac8363a9059cbb60e01b8484604051602401611575929190612f0a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526119f1565b505050565b606060008251116115d45760405162461bcd60e51b815260040161050590612f5e565b60006115df83610d02565b9050600081116116015760405162461bcd60e51b815260040161050590612fae565b60005b835181101561172657600084828151811061162157611621612944565b602002602001015160200151511161164b5760405162461bcd60e51b815260040161050590613002565b60005b84828151811061166057611660612944565b60200260200101516020015151811015611713576116c7836116c18888868151811061168e5761168e612944565b60200260200101516020015185815181106116ab576116ab612944565b6020026020010151611a8090919063ffffffff16565b906119be565b8583815181106116d9576116d9612944565b60200260200101516020015182815181106116f6576116f6612944565b60209081029190910101528061170b81612970565b91505061164e565b508061171e81612970565b915050611604565b50919392505050565b61173881610653565b6117545760405162461bcd60e51b815260040161050590613046565b6001600160a01b038116600090815260ca602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90610edf9083906122fa565b60006108f18264e8d4a51000611a80565b60cd80546001600160a01b0319166001600160a01b0383161790556040517f100702071f8eb4f459f5f9dcf12bba9b3aeafa0eca6a018364f645558d792c3790610edf908390611ca4565b61180981610653565b156118265760405162461bcd60e51b815260040161050590613094565b6001600160a01b038116600090815260ca602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890610edf9083906122fa565b60985460ff161561189c5760405162461bcd60e51b81526004016105059061256b565b6098805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861107b3390565b60ce80546001600160a01b0319166001600160a01b0383161790556040517f6a7e09ebc58179cd1c17c89209474e58d29e43b1bf78dd57f896e7be983220eb90610edf908390611ca4565b60006108ee82846130a4565b60cc80546001600160a01b0319166001600160a01b0383161790556040517feb1b948f6c63784a1d91e42dd967c49aae87b1db36d3107e9b913963ae7cd03990610edf908390611ca4565b60cb80546001600160a01b0319166001600160a01b0383161790556040517fe63288198842f0dacdcbdc3f22dcd4e473d1f3cee7e10603ae6ddc3e667c528490610edf908390611ca4565b60006108ee82846130d2565b6119eb846323b872dd60e01b858585604051602401611575939291906130e6565b50505050565b6000611a46826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a8c9092919063ffffffff16565b8051909150156115ac5780806020019051810190611a6491906126aa565b6115ac5760405162461bcd60e51b81526004016105059061313b565b60006108ee828461314b565b6060611a9b8484600085611aa5565b90505b9392505050565b606082471015611ac75760405162461bcd60e51b8152600401610505906131ad565b6001600160a01b0385163b611aee5760405162461bcd60e51b8152600401610505906131f1565b600080866001600160a01b03168587604051611b0a919061324f565b60006040518083038185875af1925050503d8060008114611b47576040519150601f19603f3d011682016040523d82523d6000602084013e611b4c565b606091505b5091509150611b5c828286611b69565b925050505b949350505050565b60608315611b78575081611a9e565b825115611b885782518084602001fd5b8160405162461bcd60e51b8152600401610505919061328d565b60006001600160a01b0382166108f1565b60006108f182611ba2565b611bc781611bb3565b811461051757600080fd5b80356108f181611bbe565b600060208284031215611bf257611bf2600080fd5b6000611b618484611bd2565b611bc781611ba2565b80356108f181611bfe565b600080600080600060a08688031215611c2d57611c2d600080fd5b6000611c398888611c07565b9550506020611c4a88828901611c07565b9450506040611c5b88828901611bd2565b9350506060611c6c88828901611c07565b9250506080611c7d88828901611bd2565b9150509295509295909350565b60006108f182611bb3565b611c9e81611c8a565b82525050565b602081016108f18284611c95565b600060208284031215611cc757611cc7600080fd5b6000611b618484611c07565b80611c9e565b602081016108f18284611cd3565b801515611c9e565b602081016108f18284611ce7565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715611d3857611d38611cfd565b6040525050565b6000611d4a60405190565b9050611d568282611d13565b919050565b6001600160401b038116611bc7565b80356108f181611d5b565b80611bc7565b80356108f181611d75565b60006001600160401b03821115611d9f57611d9f611cfd565b5060209081020190565b6005811061051757600080fd5b80356108f181611da9565b6000611dd4611dcf84611d86565b611d3f565b83815290506020808201908402830185811115611df357611df3600080fd5b835b81811015611e175780611e088882611d7b565b84525060209283019201611df5565b5050509392505050565b600082601f830112611e3557611e35600080fd5b8135611b61848260208601611dc1565b600060408284031215611e5a57611e5a600080fd5b611e646040611d3f565b90506000611e728484611db6565b82525060208201356001600160401b03811115611e9157611e91600080fd5b611e9d84828501611e21565b60208301525092915050565b6000611eb7611dcf84611d86565b83815290506020808201908402830185811115611ed657611ed6600080fd5b835b81811015611e175780356001600160401b03811115611ef957611ef9600080fd5b808601611f068982611e45565b8552505060209283019201611ed8565b600082601f830112611f2a57611f2a600080fd5b8135611b61848260208601611ea9565b600060808284031215611f4f57611f4f600080fd5b611f596080611d3f565b90506000611f678484611c07565b8252506020611f7884848301611d6a565b6020830152506040611f8c84828501611d7b565b60408301525060608201356001600160401b03811115611fae57611fae600080fd5b611fba84828501611f16565b60608301525092915050565b600060208284031215611fdb57611fdb600080fd5b81356001600160401b03811115611ff457611ff4600080fd5b611b6184828501611f3a565b60008060006060848603121561201857612018600080fd5b60006120248686611bd2565b935050602061203586828701611c07565b925050604061204686828701611d7b565b9150509250925092565b6000806040838503121561206657612066600080fd5b60006120728585611d7b565b92505060208301356001600160401b0381111561209157612091600080fd5b61209d85828601611f16565b9150509250929050565b634e487b7160e01b600052602160045260246000fd5b60058110610517576105176120a7565b80611d56816120bd565b60006108f1826120cd565b611c9e816120d7565b60006120f78383611cd3565b505060200190565b6000612109825190565b80845260209384019383018060005b8381101561213d57815161212c88826120eb565b975060208301925050600101612118565b509495945050505050565b8051600090604084019061215c85826120e2565b506020830151848203602086015261217482826120ff565b95945050505050565b60006108ee8383612148565b6000612193825190565b808452602084019350836020820285016121ad8560200190565b8060005b858110156121e257848403895281516121ca858261217d565b94506020830160209a909a01999250506001016121b1565b5091979650505050505050565b602080825281016108ee8184612189565b6000806040838503121561221657612216600080fd5b60006122228585611c07565b925050602061209d85828601611d7b565b60008083601f84011261224857612248600080fd5b5081356001600160401b0381111561226257612262600080fd5b60208301915083600182028301111561227d5761227d600080fd5b9250929050565b6000806000806060858703121561229d5761229d600080fd5b60006122a98787611bd2565b94505060206122ba87828801611d7b565b93505060408501356001600160401b038111156122d9576122d9600080fd5b6122e587828801612233565b95989497509550505050565b611c9e81611ba2565b602081016108f182846122f1565b60006020828403121561231d5761231d600080fd5b81356001600160401b0381111561233657612336600080fd5b611b6184828501611f16565b60006001600160401b0382111561235b5761235b611cfd565b601f19601f83011660200192915050565b82818337506000910152565b6000612386611dcf84612342565b9050828152602081018484840111156123a1576123a1600080fd5b61143884828561236c565b600082601f8301126123c0576123c0600080fd5b8135611b61848260208601612378565b6000602082840312156123e5576123e5600080fd5b81356001600160401b038111156123fe576123fe600080fd5b611b61848285016123ac565b6001600160401b038116611c9e565b6080810161242782876122f1565b612434602083018661240a565b6124416040830185611cd3565b81810360608301526124538184612189565b9695505050505050565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b602080825281016108f18161245d565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291505b5060400190565b602080825281016108f1816124a2565b601c81526000602082017f5061757365723a2043616c6c6572206973206e6f7420706175736572000000008152915061248b565b602080825281016108f181612500565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b8152915061248b565b602080825281016108f181612544565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c008152915061248b565b602080825281016108f18161257b565b60006125c9825190565b808452602084019350836020820285016125e38560200190565b8060005b858110156121e25784840389528151612600858261217d565b94506020830160209a909a01999250506001016125e7565b8051600090608084019061262c85826122f1565b50602083015161263f602086018261240a565b5060408301516126526040860182611cd3565b506060830151848203606086015261217482826125bf565b6060810161267882866122f1565b6126856020830185611c95565b81810360408301526121748184612618565b801515611bc7565b80516108f181612697565b6000602082840312156126bf576126bf600080fd5b6000611b61848461269f565b602981526000602082017f447374436861696e5061796d656e743a2063616c6c6572206973206e6f74206181526810383937bb34b232b960b91b602082015291506124e9565b602080825281016108f1816126cb565b602e81526000602082017f447374436861696e5061796d656e743a20696e73756666696369656e7420707281526d6f76696465722062616c616e636560901b602082015291506124e9565b602080825281016108f181612721565b6080810161278a82876122f1565b6127976020830186611c95565b6127a460408301856122f1565b6121746060830184611cd3565b602581526000602082017f5061796d656e743a207769746864726177206e617469766520746f6b656e2066815264185a5b195960da1b602082015291506124e9565b602080825281016108f1816127b1565b604081016128118285611c95565b611a9e6020830184611cd3565b603681526000602082017f4d6573736167655265636569766572577261707065723a2063616c6c6572206981527539903737ba1036b2b9b9b0b3b2903932b1b2b4bb32b960511b602082015291506124e9565b602080825281016108f18161281e565b601e81526000602082017f447374436861696e5061796d656e743a20696e76616c696420746f6b656e00008152915061248b565b602080825281016108f181612881565b606081016128d38286611c95565b6128e060208301856122f1565b611b616040830184611cd3565b602a81526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152690c2c8e640d8cadccee8d60b31b602082015291506124e9565b602080825281016108f1816128ed565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156129845761298461295a565b5060010190565b80516108f181611bfe565b80516108f181611d5b565b80516108f181611d75565b80516108f181611da9565b60006129c5611dcf84611d86565b838152905060208082019084028301858111156129e4576129e4600080fd5b835b81811015611e1757806129f988826129a1565b845250602092830192016129e6565b600082601f830112612a1c57612a1c600080fd5b8151611b618482602086016129b7565b600060408284031215612a4157612a41600080fd5b612a4b6040611d3f565b90506000612a5984846129ac565b82525060208201516001600160401b03811115612a7857612a78600080fd5b611e9d84828501612a08565b6000612a92611dcf84611d86565b83815290506020808201908402830185811115612ab157612ab1600080fd5b835b81811015611e175780516001600160401b03811115612ad457612ad4600080fd5b808601612ae18982612a2c565b8552505060209283019201612ab3565b600082601f830112612b0557612b05600080fd5b8151611b61848260208601612a84565b60008060008060808587031215612b2e57612b2e600080fd5b6000612b3a878761298b565b9450506020612b4b87828801612996565b9350506040612b5c878288016129a1565b92505060608501516001600160401b03811115612b7b57612b7b600080fd5b612b8787828801612af1565b91505092959194509250565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015291506124e9565b602080825281016108f181612b93565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b602082015291506124e9565b602080825281016108f181612be6565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b8152915061248b565b602080825281016108f181612c3e565b602181526000602082017f447374436861696e5061796d656e743a20696e76616c6964207061796c6f61648152607360f81b602082015291506124e9565b602080825281016108f181612c79565b6036815260006020820160008051602061329f833981519152815275656e67746820666f72204275696c64696e6754696d6560501b602082015291506124e9565b602080825281016108f181612cc7565b604081016128118285611cd3565b600060208284031215612d3b57612d3b600080fd5b6000611b6184846129a1565b6033815260006020820160008051602061329f833981519152815272656e67746820666f7220415253746f7261676560681b602082015291506124e9565b602080825281016108f181612d47565b6033815260006020820160008051602061329f8339815191528152720cadccee8d040ccdee44084c2dcc8eed2c8e8d606b1b602082015291506124e9565b602080825281016108f181612d95565b6035815260006020820160008051602061329f833981519152815274656e67746820666f72204950465353746f7261676560581b602082015291506124e9565b602080825281016108f181612de3565b60608101612e418286611cd3565b6128e06020830185611cd3565b602681526000602082017f447374436861696e5061796d656e743a20756e6b6e6f776e207265736f75726381526565207479706560d01b602082015291506124e9565b602080825281016108f181612e4e565b602581526000602082017f447374436861696e5061796d656e743a206e6f6e6578697374656e742070726f8152643b34b232b960d91b602082015291506124e9565b602080825281016108f181612ea1565b600082821015612f0557612f0561295a565b500390565b6040810161281182856122f1565b602981526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152680c2c840d8cadccee8d60bb1b602082015291506124e9565b602080825281016108f181612f18565b602381526000602082017f5265736f75725061796c6f6164546f6f6c3a207a65726f20746f74616c2076618152626c756560e81b602082015291506124e9565b602080825281016108f181612f6e565b602781526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c69642076616c7565815266040d8cadccee8d60cb1b602082015291506124e9565b602080825281016108f181612fbe565b601d81526000602082017f5061757365723a204163636f756e74206973206e6f74207061757365720000008152915061248b565b602080825281016108f181613012565b602181526000602082017f5061757365723a204163636f756e7420697320616c72656164792070617573658152603960f91b602082015291506124e9565b602080825281016108f181613056565b600082198211156130b7576130b761295a565b500190565b634e487b7160e01b600052601260045260246000fd5b6000826130e1576130e16130bc565b500490565b606081016128d382866122f1565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015291506124e9565b602080825281016108f1816130f4565b60008160001904831182151516156131655761316561295a565b500290565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b602082015291506124e9565b602080825281016108f18161316a565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000008152915061248b565b602080825281016108f1816131bd565b60005b8381101561321c578181015183820152602001613204565b838111156119eb5750506000910152565b6000613237825190565b613245818560208601613201565b9290920192915050565b6000611a9e828461322d565b6000613265825190565b80845260208401935061327c818560208601613201565b601f01601f19169290920192915050565b602080825281016108ee818461325b56fe447374436861696e5061796d656e743a20696e76616c69642076616c7565206ca2646970667358221220924e4c3d95f218a0eec767dfa2c93cf17a13515fd2521b78ba73b37637d47c3464736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102115760003560e01c8063715018a611610125578063b05f87a8116100ad578063e84372491161007c578063e84372491461047c578063f2fde38b1461048f578063f8401fe6146104a2578063f8f071fa146104b5578063fc0c546a146104c857600080fd5b8063b05f87a814610420578063bb37111114610433578063bd16997514610446578063e2cae9f51461046957600080fd5b806382dc1ec4116100f457806382dc1ec4146103c55780638456cb59146103d85780638da5cb5b146103e0578063914fd2c3146103fa57806393563a951461040d57600080fd5b8063715018a61461037457806377ef533c1461037c5780637a7fa7531461038f57806380f51c12146103a257600080fd5b80634540a85b116101a85780635618ce2d116101775780635618ce2d1461031b5780635c975abb1461033b578063699256f4146103465780636b2c0f55146103595780636ef8d66d1461036c57600080fd5b80634540a85b146102c257806346fbf68e146102d5578063490e4fa2146102f557806349ea49e01461030857600080fd5b806328ac7f2c116101e457806328ac7f2c1461026757806329dbfc75146102945780633b8ccfb1146102a75780633f4ba83a146102ba57600080fd5b8063144fa6d7146102165780631459457a1461022b57806315e077691461023e5780632413c1271461022b575b600080fd5b610229610224366004611bdd565b6104db565b005b610229610239366004611c12565b61051a565b60ce54610251906001600160a01b031681565b60405161025e9190611ca4565b60405180910390f35b610287610275366004611cb2565b60d16020526000908152604090205481565b60405161025e9190611cd9565b60cc54610251906001600160a01b031681565b6102296102b5366004611cb2565b6105be565b6102296105f1565b6102296102d0366004611bdd565b610620565b6102e86102e3366004611cb2565b610653565b60405161025e9190611cef565b610287610303366004611fc6565b610671565b610229610316366004612000565b610747565b61032e610329366004612050565b6108e2565b60405161025e91906121ef565b60985460ff166102e8565b610229610354366004612200565b6108f7565b610229610367366004611cb2565b6109a5565b6102296109d8565b6102296109e1565b61028761038a366004612284565b610a15565b61022961039d366004611bdd565b610bcb565b6102e86103b0366004611cb2565b60ca6020526000908152604090205460ff1681565b6102296103d3366004611cb2565b610bfe565b610229610c31565b6033546001600160a01b03165b60405161025e91906122fa565b610229610408366004611bdd565b610c5e565b61022961041b366004612000565b610c91565b60cf54610251906001600160a01b031681565b610287610441366004612308565b610d02565b6104596104543660046123d0565b610dcf565b60405161025e9493929190612419565b6065546103ed906001600160a01b031681565b61022961048a366004611bdd565b610df9565b61022961049d366004611cb2565b610e2c565b60cb54610251906001600160a01b031681565b60cd54610251906001600160a01b031681565b60d054610251906001600160a01b031681565b6033546001600160a01b0316331461050e5760405162461bcd60e51b815260040161050590612492565b60405180910390fd5b61051781610e94565b50565b600054610100900460ff166105355760005460ff1615610539565b303b155b6105555760405162461bcd60e51b8152600401610505906124f0565b600054610100900460ff16158015610577576000805461ffff19166101011790555b61058086610eea565b61058985610f3c565b61059284610f63565b61059b83610f93565b6105a482610fba565b80156105b6576000805461ff00191690555b505050505050565b6033546001600160a01b031633146105e85760405162461bcd60e51b815260040161050590612492565b61051781610fe1565b6105fa33610653565b6106165760405162461bcd60e51b815260040161050590612534565b61061e61102c565b565b6033546001600160a01b0316331461064a5760405162461bcd60e51b815260040161050590612492565b61051781611092565b6001600160a01b0316600090815260ca602052604090205460ff1690565b600061067f60985460ff1690565b1561069c5760405162461bcd60e51b81526004016105059061256b565b600260665414156106bf5760405162461bcd60e51b8152600401610505906125af565b6002606655604082015160608301516106da919060016110dd565b90506106e581611440565b90506106f5826000015182611451565b5060d0546040517f699b2f7653a6bfb60eabd345a469cd1a72cf9733ed0179acb41b3d0b8d6b8583916107359133916001600160a01b031690869061266a565b60405180910390a16001606655919050565b60985460ff161561076a5760405162461bcd60e51b81526004016105059061256b565b6002606654141561078d5760405162461bcd60e51b8152600401610505906125af565b600260665560cb54604051636b074a0760e01b81526001600160a01b0390911690636b074a07906107c29033906004016122fa565b60206040518083038186803b1580156107da57600080fd5b505afa1580156107ee573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081291906126aa565b61082e5760405162461bcd60e51b815260040161050590612711565b33600090815260d1602052604090205481111561085d5760405162461bcd60e51b81526004016105059061276c565b33600090815260d16020526040902054610877908261154a565b33600090815260d1602052604090205561089b6001600160a01b0384168383611556565b7f6a5b5b630c1c43e83d8863b2f40228b9238480ce8c629132ea0862c7ce6c1b23338484846040516108d0949392919061277c565b60405180910390a15050600160665550565b60606108ee83836115b1565b90505b92915050565b6033546001600160a01b031633146109215760405162461bcd60e51b815260040161050590612492565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f193505050509050806109675760405162461bcd60e51b8152600401610505906127f3565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e48278383604051610998929190612803565b60405180910390a1505050565b6033546001600160a01b031633146109cf5760405162461bcd60e51b815260040161050590612492565b6105178161172f565b61061e3361172f565b6033546001600160a01b03163314610a0b5760405162461bcd60e51b815260040161050590612492565b61061e6000610eea565b6065546000906001600160a01b03163314610a425760405162461bcd60e51b815260040161050590612871565b60985460ff1615610a655760405162461bcd60e51b81526004016105059061256b565b60026066541415610a885760405162461bcd60e51b8152600401610505906125af565b600260665560d0546001600160a01b03868116911614610aba5760405162461bcd60e51b8152600401610505906128b5565b600080600080610aff87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610dcf92505050565b935093509350935060006040518060800160405280866001600160a01b03168152602001856001600160401b03168152602001848152602001610b4a610b448c6117a4565b856115b1565b8152509050610b638160400151826060015160006110dd565b508051610b70908a611451565b5060d0546040517f699b2f7653a6bfb60eabd345a469cd1a72cf9733ed0179acb41b3d0b8d6b858391610bb09133916001600160a01b031690859061266a565b60405180910390a15050600160665550919695505050505050565b6033546001600160a01b03163314610bf55760405162461bcd60e51b815260040161050590612492565b610517816117b5565b6033546001600160a01b03163314610c285760405162461bcd60e51b815260040161050590612492565b61051781611800565b610c3a33610653565b610c565760405162461bcd60e51b815260040161050590612534565b61061e611879565b6033546001600160a01b03163314610c885760405162461bcd60e51b815260040161050590612492565b610517816118d1565b6033546001600160a01b03163314610cbb5760405162461bcd60e51b815260040161050590612492565b610ccf6001600160a01b0384168383611556565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b6398838383604051610998939291906128c5565b600080825111610d245760405162461bcd60e51b815260040161050590612934565b60005b8251811015610dc95760005b838281518110610d4557610d45612944565b60200260200101516020015151811015610db657610da2848381518110610d6e57610d6e612944565b6020026020010151602001518281518110610d8b57610d8b612944565b60200260200101518461191c90919063ffffffff16565b925080610dae81612970565b915050610d33565b5080610dc181612970565b915050610d27565b50919050565b6000806000606084806020019051810190610dea9190612b15565b92989197509550909350915050565b6033546001600160a01b03163314610e235760405162461bcd60e51b815260040161050590612492565b61051781611928565b6033546001600160a01b03163314610e565760405162461bcd60e51b815260040161050590612492565b6001600160a01b038116610e7c5760405162461bcd60e51b815260040161050590612bd6565b61051781610eea565b6001600160a01b03163b151590565b60d080546001600160a01b0319166001600160a01b0383161790556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3090610edf908390611ca4565b60405180910390a150565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610c285760405162461bcd60e51b815260040161050590612c2e565b600054610100900460ff16610f8a5760405162461bcd60e51b815260040161050590612c2e565b61051781611973565b600054610100900460ff166105e85760405162461bcd60e51b815260040161050590612c2e565b600054610100900460ff1661050e5760405162461bcd60e51b815260040161050590612c2e565b606580546001600160a01b0319166001600160a01b0383161790556040517fafe9b28ca24a54df8c44769c685f7b92824aae021cdfcaa4719d493571a23c4c90610edf9083906122fa565b60985460ff1661104e5760405162461bcd60e51b815260040161050590612c69565b6098805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405161108891906122fa565b60405180910390a1565b60cf80546001600160a01b0319166001600160a01b0383161790556040517f7b091d9397a2f75213edeec1728b27a9d863f0f8aafb62fce0f1154f48f110f890610edf908390611ca4565b6000808351116110ff5760405162461bcd60e51b815260040161050590612cb7565b60005b835181101561143857600084828151811061111f5761111f612944565b602002602001015190506001600481111561113c5761113c6120a7565b8151600481111561114f5761114f6120a7565b14156112245780602001515160011461117a5760405162461bcd60e51b815260040161050590612d08565b60cc54602082015180516001600160a01b039092169163467aa8de9189916000906111a7576111a7612944565b60200260200101516040518363ffffffff1660e01b81526004016111cc929190612d18565b602060405180830381600087803b1580156111e657600080fd5b505af11580156111fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121e9190612d26565b506113c8565b600381516004811115611239576112396120a7565b1415611291578060200151516001146112645760405162461bcd60e51b815260040161050590612d85565b60ce54602082015180516001600160a01b039092169163467aa8de9189916000906111a7576111a7612944565b6002815160048111156112a6576112a66120a7565b14156112fe578060200151516001146112d15760405162461bcd60e51b815260040161050590612dd3565b60cd54602082015180516001600160a01b039092169163467aa8de9189916000906111a7576111a7612944565b600481516004811115611313576113136120a7565b14156113b05780602001515160021461133e5760405162461bcd60e51b815260040161050590612e23565b60cf54602082015180516001600160a01b0390921691634235fec091899160009061136b5761136b612944565b6020026020010151846020015160018151811061138a5761138a612944565b60200260200101516040518463ffffffff1660e01b81526004016111cc93929190612e33565b60405162461bcd60e51b815260040161050590612e91565b83156114255760005b8160200151518110156114235761140f82602001516000815181106113f8576113f8612944565b60200260200101518561191c90919063ffffffff16565b93508061141b81612970565b9150506113d1565b505b508061143081612970565b915050611102565b509392505050565b60006108f18264e8d4a510006119be565b60cb54604051636b074a0760e01b81526000916001600160a01b031690636b074a07906114829086906004016122fa565b60206040518083038186803b15801561149a57600080fd5b505afa1580156114ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d291906126aa565b6114ee5760405162461bcd60e51b815260040161050590612ee3565b60d054611506906001600160a01b03163330856119ca565b6001600160a01b038316600090815260d16020526040902054611529908361191c565b6001600160a01b03909316600090815260d160205260409020929092555090565b60006108ee8284612ef3565b6115ac8363a9059cbb60e01b8484604051602401611575929190612f0a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526119f1565b505050565b606060008251116115d45760405162461bcd60e51b815260040161050590612f5e565b60006115df83610d02565b9050600081116116015760405162461bcd60e51b815260040161050590612fae565b60005b835181101561172657600084828151811061162157611621612944565b602002602001015160200151511161164b5760405162461bcd60e51b815260040161050590613002565b60005b84828151811061166057611660612944565b60200260200101516020015151811015611713576116c7836116c18888868151811061168e5761168e612944565b60200260200101516020015185815181106116ab576116ab612944565b6020026020010151611a8090919063ffffffff16565b906119be565b8583815181106116d9576116d9612944565b60200260200101516020015182815181106116f6576116f6612944565b60209081029190910101528061170b81612970565b91505061164e565b508061171e81612970565b915050611604565b50919392505050565b61173881610653565b6117545760405162461bcd60e51b815260040161050590613046565b6001600160a01b038116600090815260ca602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90610edf9083906122fa565b60006108f18264e8d4a51000611a80565b60cd80546001600160a01b0319166001600160a01b0383161790556040517f100702071f8eb4f459f5f9dcf12bba9b3aeafa0eca6a018364f645558d792c3790610edf908390611ca4565b61180981610653565b156118265760405162461bcd60e51b815260040161050590613094565b6001600160a01b038116600090815260ca602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890610edf9083906122fa565b60985460ff161561189c5760405162461bcd60e51b81526004016105059061256b565b6098805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861107b3390565b60ce80546001600160a01b0319166001600160a01b0383161790556040517f6a7e09ebc58179cd1c17c89209474e58d29e43b1bf78dd57f896e7be983220eb90610edf908390611ca4565b60006108ee82846130a4565b60cc80546001600160a01b0319166001600160a01b0383161790556040517feb1b948f6c63784a1d91e42dd967c49aae87b1db36d3107e9b913963ae7cd03990610edf908390611ca4565b60cb80546001600160a01b0319166001600160a01b0383161790556040517fe63288198842f0dacdcbdc3f22dcd4e473d1f3cee7e10603ae6ddc3e667c528490610edf908390611ca4565b60006108ee82846130d2565b6119eb846323b872dd60e01b858585604051602401611575939291906130e6565b50505050565b6000611a46826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a8c9092919063ffffffff16565b8051909150156115ac5780806020019051810190611a6491906126aa565b6115ac5760405162461bcd60e51b81526004016105059061313b565b60006108ee828461314b565b6060611a9b8484600085611aa5565b90505b9392505050565b606082471015611ac75760405162461bcd60e51b8152600401610505906131ad565b6001600160a01b0385163b611aee5760405162461bcd60e51b8152600401610505906131f1565b600080866001600160a01b03168587604051611b0a919061324f565b60006040518083038185875af1925050503d8060008114611b47576040519150601f19603f3d011682016040523d82523d6000602084013e611b4c565b606091505b5091509150611b5c828286611b69565b925050505b949350505050565b60608315611b78575081611a9e565b825115611b885782518084602001fd5b8160405162461bcd60e51b8152600401610505919061328d565b60006001600160a01b0382166108f1565b60006108f182611ba2565b611bc781611bb3565b811461051757600080fd5b80356108f181611bbe565b600060208284031215611bf257611bf2600080fd5b6000611b618484611bd2565b611bc781611ba2565b80356108f181611bfe565b600080600080600060a08688031215611c2d57611c2d600080fd5b6000611c398888611c07565b9550506020611c4a88828901611c07565b9450506040611c5b88828901611bd2565b9350506060611c6c88828901611c07565b9250506080611c7d88828901611bd2565b9150509295509295909350565b60006108f182611bb3565b611c9e81611c8a565b82525050565b602081016108f18284611c95565b600060208284031215611cc757611cc7600080fd5b6000611b618484611c07565b80611c9e565b602081016108f18284611cd3565b801515611c9e565b602081016108f18284611ce7565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715611d3857611d38611cfd565b6040525050565b6000611d4a60405190565b9050611d568282611d13565b919050565b6001600160401b038116611bc7565b80356108f181611d5b565b80611bc7565b80356108f181611d75565b60006001600160401b03821115611d9f57611d9f611cfd565b5060209081020190565b6005811061051757600080fd5b80356108f181611da9565b6000611dd4611dcf84611d86565b611d3f565b83815290506020808201908402830185811115611df357611df3600080fd5b835b81811015611e175780611e088882611d7b565b84525060209283019201611df5565b5050509392505050565b600082601f830112611e3557611e35600080fd5b8135611b61848260208601611dc1565b600060408284031215611e5a57611e5a600080fd5b611e646040611d3f565b90506000611e728484611db6565b82525060208201356001600160401b03811115611e9157611e91600080fd5b611e9d84828501611e21565b60208301525092915050565b6000611eb7611dcf84611d86565b83815290506020808201908402830185811115611ed657611ed6600080fd5b835b81811015611e175780356001600160401b03811115611ef957611ef9600080fd5b808601611f068982611e45565b8552505060209283019201611ed8565b600082601f830112611f2a57611f2a600080fd5b8135611b61848260208601611ea9565b600060808284031215611f4f57611f4f600080fd5b611f596080611d3f565b90506000611f678484611c07565b8252506020611f7884848301611d6a565b6020830152506040611f8c84828501611d7b565b60408301525060608201356001600160401b03811115611fae57611fae600080fd5b611fba84828501611f16565b60608301525092915050565b600060208284031215611fdb57611fdb600080fd5b81356001600160401b03811115611ff457611ff4600080fd5b611b6184828501611f3a565b60008060006060848603121561201857612018600080fd5b60006120248686611bd2565b935050602061203586828701611c07565b925050604061204686828701611d7b565b9150509250925092565b6000806040838503121561206657612066600080fd5b60006120728585611d7b565b92505060208301356001600160401b0381111561209157612091600080fd5b61209d85828601611f16565b9150509250929050565b634e487b7160e01b600052602160045260246000fd5b60058110610517576105176120a7565b80611d56816120bd565b60006108f1826120cd565b611c9e816120d7565b60006120f78383611cd3565b505060200190565b6000612109825190565b80845260209384019383018060005b8381101561213d57815161212c88826120eb565b975060208301925050600101612118565b509495945050505050565b8051600090604084019061215c85826120e2565b506020830151848203602086015261217482826120ff565b95945050505050565b60006108ee8383612148565b6000612193825190565b808452602084019350836020820285016121ad8560200190565b8060005b858110156121e257848403895281516121ca858261217d565b94506020830160209a909a01999250506001016121b1565b5091979650505050505050565b602080825281016108ee8184612189565b6000806040838503121561221657612216600080fd5b60006122228585611c07565b925050602061209d85828601611d7b565b60008083601f84011261224857612248600080fd5b5081356001600160401b0381111561226257612262600080fd5b60208301915083600182028301111561227d5761227d600080fd5b9250929050565b6000806000806060858703121561229d5761229d600080fd5b60006122a98787611bd2565b94505060206122ba87828801611d7b565b93505060408501356001600160401b038111156122d9576122d9600080fd5b6122e587828801612233565b95989497509550505050565b611c9e81611ba2565b602081016108f182846122f1565b60006020828403121561231d5761231d600080fd5b81356001600160401b0381111561233657612336600080fd5b611b6184828501611f16565b60006001600160401b0382111561235b5761235b611cfd565b601f19601f83011660200192915050565b82818337506000910152565b6000612386611dcf84612342565b9050828152602081018484840111156123a1576123a1600080fd5b61143884828561236c565b600082601f8301126123c0576123c0600080fd5b8135611b61848260208601612378565b6000602082840312156123e5576123e5600080fd5b81356001600160401b038111156123fe576123fe600080fd5b611b61848285016123ac565b6001600160401b038116611c9e565b6080810161242782876122f1565b612434602083018661240a565b6124416040830185611cd3565b81810360608301526124538184612189565b9695505050505050565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b602080825281016108f18161245d565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291505b5060400190565b602080825281016108f1816124a2565b601c81526000602082017f5061757365723a2043616c6c6572206973206e6f7420706175736572000000008152915061248b565b602080825281016108f181612500565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b8152915061248b565b602080825281016108f181612544565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c008152915061248b565b602080825281016108f18161257b565b60006125c9825190565b808452602084019350836020820285016125e38560200190565b8060005b858110156121e25784840389528151612600858261217d565b94506020830160209a909a01999250506001016125e7565b8051600090608084019061262c85826122f1565b50602083015161263f602086018261240a565b5060408301516126526040860182611cd3565b506060830151848203606086015261217482826125bf565b6060810161267882866122f1565b6126856020830185611c95565b81810360408301526121748184612618565b801515611bc7565b80516108f181612697565b6000602082840312156126bf576126bf600080fd5b6000611b61848461269f565b602981526000602082017f447374436861696e5061796d656e743a2063616c6c6572206973206e6f74206181526810383937bb34b232b960b91b602082015291506124e9565b602080825281016108f1816126cb565b602e81526000602082017f447374436861696e5061796d656e743a20696e73756666696369656e7420707281526d6f76696465722062616c616e636560901b602082015291506124e9565b602080825281016108f181612721565b6080810161278a82876122f1565b6127976020830186611c95565b6127a460408301856122f1565b6121746060830184611cd3565b602581526000602082017f5061796d656e743a207769746864726177206e617469766520746f6b656e2066815264185a5b195960da1b602082015291506124e9565b602080825281016108f1816127b1565b604081016128118285611c95565b611a9e6020830184611cd3565b603681526000602082017f4d6573736167655265636569766572577261707065723a2063616c6c6572206981527539903737ba1036b2b9b9b0b3b2903932b1b2b4bb32b960511b602082015291506124e9565b602080825281016108f18161281e565b601e81526000602082017f447374436861696e5061796d656e743a20696e76616c696420746f6b656e00008152915061248b565b602080825281016108f181612881565b606081016128d38286611c95565b6128e060208301856122f1565b611b616040830184611cd3565b602a81526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152690c2c8e640d8cadccee8d60b31b602082015291506124e9565b602080825281016108f1816128ed565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156129845761298461295a565b5060010190565b80516108f181611bfe565b80516108f181611d5b565b80516108f181611d75565b80516108f181611da9565b60006129c5611dcf84611d86565b838152905060208082019084028301858111156129e4576129e4600080fd5b835b81811015611e1757806129f988826129a1565b845250602092830192016129e6565b600082601f830112612a1c57612a1c600080fd5b8151611b618482602086016129b7565b600060408284031215612a4157612a41600080fd5b612a4b6040611d3f565b90506000612a5984846129ac565b82525060208201516001600160401b03811115612a7857612a78600080fd5b611e9d84828501612a08565b6000612a92611dcf84611d86565b83815290506020808201908402830185811115612ab157612ab1600080fd5b835b81811015611e175780516001600160401b03811115612ad457612ad4600080fd5b808601612ae18982612a2c565b8552505060209283019201612ab3565b600082601f830112612b0557612b05600080fd5b8151611b61848260208601612a84565b60008060008060808587031215612b2e57612b2e600080fd5b6000612b3a878761298b565b9450506020612b4b87828801612996565b9350506040612b5c878288016129a1565b92505060608501516001600160401b03811115612b7b57612b7b600080fd5b612b8787828801612af1565b91505092959194509250565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015291506124e9565b602080825281016108f181612b93565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b602082015291506124e9565b602080825281016108f181612be6565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b8152915061248b565b602080825281016108f181612c3e565b602181526000602082017f447374436861696e5061796d656e743a20696e76616c6964207061796c6f61648152607360f81b602082015291506124e9565b602080825281016108f181612c79565b6036815260006020820160008051602061329f833981519152815275656e67746820666f72204275696c64696e6754696d6560501b602082015291506124e9565b602080825281016108f181612cc7565b604081016128118285611cd3565b600060208284031215612d3b57612d3b600080fd5b6000611b6184846129a1565b6033815260006020820160008051602061329f833981519152815272656e67746820666f7220415253746f7261676560681b602082015291506124e9565b602080825281016108f181612d47565b6033815260006020820160008051602061329f8339815191528152720cadccee8d040ccdee44084c2dcc8eed2c8e8d606b1b602082015291506124e9565b602080825281016108f181612d95565b6035815260006020820160008051602061329f833981519152815274656e67746820666f72204950465353746f7261676560581b602082015291506124e9565b602080825281016108f181612de3565b60608101612e418286611cd3565b6128e06020830185611cd3565b602681526000602082017f447374436861696e5061796d656e743a20756e6b6e6f776e207265736f75726381526565207479706560d01b602082015291506124e9565b602080825281016108f181612e4e565b602581526000602082017f447374436861696e5061796d656e743a206e6f6e6578697374656e742070726f8152643b34b232b960d91b602082015291506124e9565b602080825281016108f181612ea1565b600082821015612f0557612f0561295a565b500390565b6040810161281182856122f1565b602981526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152680c2c840d8cadccee8d60bb1b602082015291506124e9565b602080825281016108f181612f18565b602381526000602082017f5265736f75725061796c6f6164546f6f6c3a207a65726f20746f74616c2076618152626c756560e81b602082015291506124e9565b602080825281016108f181612f6e565b602781526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c69642076616c7565815266040d8cadccee8d60cb1b602082015291506124e9565b602080825281016108f181612fbe565b601d81526000602082017f5061757365723a204163636f756e74206973206e6f74207061757365720000008152915061248b565b602080825281016108f181613012565b602181526000602082017f5061757365723a204163636f756e7420697320616c72656164792070617573658152603960f91b602082015291506124e9565b602080825281016108f181613056565b600082198211156130b7576130b761295a565b500190565b634e487b7160e01b600052601260045260246000fd5b6000826130e1576130e16130bc565b500490565b606081016128d382866122f1565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015291506124e9565b602080825281016108f1816130f4565b60008160001904831182151516156131655761316561295a565b500290565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b602082015291506124e9565b602080825281016108f18161316a565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000008152915061248b565b602080825281016108f1816131bd565b60005b8381101561321c578181015183820152602001613204565b838111156119eb5750506000910152565b6000613237825190565b613245818560208601613201565b9290920192915050565b6000611a9e828461322d565b6000613265825190565b80845260208401935061327c818560208601613201565b601f01601f19169290920192915050565b602080825281016108ee818461325b56fe447374436861696e5061796d656e743a20696e76616c69642076616c7565206ca2646970667358221220924e4c3d95f218a0eec767dfa2c93cf17a13515fd2521b78ba73b37637d47c3464736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 147,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 150,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 970,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 122,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 4648,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "messageReceiver",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 339,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_status",
        "offset": 0,
        "slot": "102",
        "type": "t_uint256"
      },
      {
        "astId": 383,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "__gap",
        "offset": 0,
        "slot": "103",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 235,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_paused",
        "offset": 0,
        "slot": "152",
        "type": "t_bool"
      },
      {
        "astId": 324,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "__gap",
        "offset": 0,
        "slot": "153",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3742,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "pausers",
        "offset": 0,
        "slot": "202",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 6575,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "providers",
        "offset": 0,
        "slot": "203",
        "type": "t_contract(IProviders)4243"
      },
      {
        "astId": 6823,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "buildingTimeController",
        "offset": 0,
        "slot": "204",
        "type": "t_contract(INormalResourceController)8036"
      },
      {
        "astId": 6826,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "bandwidthController",
        "offset": 0,
        "slot": "205",
        "type": "t_contract(INormalResourceController)8036"
      },
      {
        "astId": 6829,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "arStorageController",
        "offset": 0,
        "slot": "206",
        "type": "t_contract(INormalResourceController)8036"
      },
      {
        "astId": 6832,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "ipfsStorageController",
        "offset": 0,
        "slot": "207",
        "type": "t_contract(IIPFSStorageController)8008"
      },
      {
        "astId": 5083,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "token",
        "offset": 0,
        "slot": "208",
        "type": "t_contract(IERC20Upgradeable)462"
      },
      {
        "astId": 5087,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "providerBalances",
        "offset": 0,
        "slot": "209",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20Upgradeable)462": {
        "encoding": "inplace",
        "label": "contract IERC20Upgradeable",
        "numberOfBytes": "20"
      },
      "t_contract(IIPFSStorageController)8008": {
        "encoding": "inplace",
        "label": "contract IIPFSStorageController",
        "numberOfBytes": "20"
      },
      "t_contract(INormalResourceController)8036": {
        "encoding": "inplace",
        "label": "contract INormalResourceController",
        "numberOfBytes": "20"
      },
      "t_contract(IProviders)4243": {
        "encoding": "inplace",
        "label": "contract IProviders",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}