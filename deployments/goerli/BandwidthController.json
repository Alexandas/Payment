{
  "address": "0xD8e587E0414aF3920EA17E3cfc3b87d70F755a58",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dstChainPayment",
          "type": "address"
        },
        {
          "internalType": "contract IResourceAdaptor",
          "name": "adaptor",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dstChainPayment",
          "type": "address"
        }
      ],
      "name": "DstChainPaymentUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "account",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Expanded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IResourceAdaptor",
          "name": "adaptor",
          "type": "address"
        }
      ],
      "name": "ResourceAdaptorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum ResourceData.ResourceType",
          "name": "resourceType",
          "type": "uint8"
        }
      ],
      "name": "ResourceTypeUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "adaptor",
      "outputs": [
        {
          "internalType": "contract IResourceAdaptor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "account",
          "type": "bytes32"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dstChainPayment",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "account",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "expand",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "getAmountOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getValueOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dstChainPayment",
          "type": "address"
        },
        {
          "internalType": "contract IResourceAdaptor",
          "name": "adaptor",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resourceType",
      "outputs": [
        {
          "internalType": "enum ResourceData.ResourceType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dstChainPayment",
          "type": "address"
        }
      ],
      "name": "setDstChainPayment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IResourceAdaptor",
          "name": "_adaptor",
          "type": "address"
        }
      ],
      "name": "setResourceAdaptor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum ResourceData.ResourceType",
          "name": "_resourceType",
          "type": "uint8"
        }
      ],
      "name": "setResourceType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1b599afcf4bee205ce378e7243dd4319d15b7ea560c3a7223339d7367c3e1297",
  "receipt": {
    "to": null,
    "from": "0xF1658C608708172655A8e70a1624c29F956Ee63D",
    "contractAddress": "0xD8e587E0414aF3920EA17E3cfc3b87d70F755a58",
    "transactionIndex": 4,
    "gasUsed": "1458447",
    "logsBloom": "0x
    "blockHash": "0xc6e15dd89612b32a73a4a91cdfd5a5c69f52429626243516619cb80f8a0cb250",
    "transactionHash": "0x1b599afcf4bee205ce378e7243dd4319d15b7ea560c3a7223339d7367c3e1297",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 6798135,
        "transactionHash": "0x1b599afcf4bee205ce378e7243dd4319d15b7ea560c3a7223339d7367c3e1297",
        "address": "0xD8e587E0414aF3920EA17E3cfc3b87d70F755a58",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f1658c608708172655a8e70a1624c29f956ee63d"
        ],
        "data": "0x",
        "logIndex": 2,
        "blockHash": "0xc6e15dd89612b32a73a4a91cdfd5a5c69f52429626243516619cb80f8a0cb250"
      },
      {
        "transactionIndex": 4,
        "blockNumber": 6798135,
        "transactionHash": "0x1b599afcf4bee205ce378e7243dd4319d15b7ea560c3a7223339d7367c3e1297",
        "address": "0xD8e587E0414aF3920EA17E3cfc3b87d70F755a58",
        "topics": [
          "0xf2071e1b38ab3c561fb5d090a912ad00d911946da5f417b4eac46024a2f6ed60"
        ],
        "data": "0x000000000000000000000000db356d2a9cc7485aba452bb5842b34c1937c5078",
        "logIndex": 3,
        "blockHash": "0xc6e15dd89612b32a73a4a91cdfd5a5c69f52429626243516619cb80f8a0cb250"
      },
      {
        "transactionIndex": 4,
        "blockNumber": 6798135,
        "transactionHash": "0x1b599afcf4bee205ce378e7243dd4319d15b7ea560c3a7223339d7367c3e1297",
        "address": "0xD8e587E0414aF3920EA17E3cfc3b87d70F755a58",
        "topics": [
          "0xcb398744d70dd9f7eb9e1e65c9c74f4d3276143240e25316135eb6585db6c1c1"
        ],
        "data": "0x0000000000000000000000001141eb47ebcacf39cdc2e4317dc8c3c23a96cf0d",
        "logIndex": 4,
        "blockHash": "0xc6e15dd89612b32a73a4a91cdfd5a5c69f52429626243516619cb80f8a0cb250"
      },
      {
        "transactionIndex": 4,
        "blockNumber": 6798135,
        "transactionHash": "0x1b599afcf4bee205ce378e7243dd4319d15b7ea560c3a7223339d7367c3e1297",
        "address": "0xD8e587E0414aF3920EA17E3cfc3b87d70F755a58",
        "topics": [
          "0xfd8efb560fb934faf6ee365a559c93f9a480bad1f14c5041d2cb8468296f87f0"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000000000000000002",
        "logIndex": 5,
        "blockHash": "0xc6e15dd89612b32a73a4a91cdfd5a5c69f52429626243516619cb80f8a0cb250"
      }
    ],
    "blockNumber": 6798135,
    "cumulativeGasUsed": "2026702",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xF1658C608708172655A8e70a1624c29F956Ee63D",
    "0xDb356D2a9cC7485ABa452bB5842B34C1937c5078",
    "0x1141eB47EbCAcf39CDc2e4317Dc8c3C23a96cF0D"
  ],
  "solcInputHash": "4c6d0a9f2d25bbb837c9b893e47b3460",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dstChainPayment\",\"type\":\"address\"},{\"internalType\":\"contract IResourceAdaptor\",\"name\":\"adaptor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstChainPayment\",\"type\":\"address\"}],\"name\":\"DstChainPaymentUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Expanded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IResourceAdaptor\",\"name\":\"adaptor\",\"type\":\"address\"}],\"name\":\"ResourceAdaptorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"}],\"name\":\"ResourceTypeUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adaptor\",\"outputs\":[{\"internalType\":\"contract IResourceAdaptor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dstChainPayment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"expand\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"getAmountOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getValueOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dstChainPayment\",\"type\":\"address\"},{\"internalType\":\"contract IResourceAdaptor\",\"name\":\"adaptor\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resourceType\",\"outputs\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dstChainPayment\",\"type\":\"address\"}],\"name\":\"setDstChainPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IResourceAdaptor\",\"name\":\"_adaptor\",\"type\":\"address\"}],\"name\":\"setResourceAdaptor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"_resourceType\",\"type\":\"uint8\"}],\"name\":\"setResourceType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/resources/controllers/normal/BandwidthController.sol\":\"BandwidthController\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMathUpgradeable {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\"},\"contracts/libraries/ResourceData.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nlibrary ResourceData {\\n\\n\\tenum ResourceType {\\n\\t\\tNull,\\n\\t\\tBuildingTime,\\n\\t\\tBandwidth,\\n\\t\\tARStorage,\\n\\t\\tIPFSStorage\\n\\t}\\n\\n\\tstruct Payload {\\n\\t\\tResourceData.ResourceType resourceType;\\n\\t\\tuint256[] values;\\n\\t}\\n\\n}\",\"keccak256\":\"0xdb575db840fd52f2ae05d464d6626137508ed25bc308badaa6badfdbed25b578\",\"license\":\"UNLICENSE\"},\"contracts/payment/DstChainPaymentWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\n\\nabstract contract DstChainPaymentWrapper is OwnableUpgradeable {\\n\\taddress public dstChainPayment;\\n\\n\\tevent DstChainPaymentUpdated(address dstChainPayment);\\n\\n\\tmodifier onlyDstChainPayment() {\\n\\t\\trequire(msg.sender == dstChainPayment, 'DstChainPaymentWrapper: caller is not dst chain payment');\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction __Init_Dst_Chain_Payment(address _dstChainPayment) internal onlyInitializing {\\n\\t\\t_setDstChainPayment(_dstChainPayment);\\n\\t}\\n\\n\\tfunction setDstChainPayment(address _dstChainPayment) external onlyOwner {\\n\\t\\t_setDstChainPayment(_dstChainPayment);\\n\\t}\\n\\n\\tfunction _setDstChainPayment(address _dstChainPayment) internal {\\n\\t\\tdstChainPayment = _dstChainPayment;\\n\\t\\temit DstChainPaymentUpdated(_dstChainPayment);\\n\\t}\\n\\n}\",\"keccak256\":\"0x58d525d2b57be6db60acddc8d9b59db989b6f98affe2f80b718f8ae0b79b74fa\",\"license\":\"GPL-3.0-only\"},\"contracts/resources/AdaptorWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\n\\nimport './interfaces/IAdaptorWrapper.sol';\\nimport '../libraries/ResourceData.sol';\\n\\n\\nabstract contract AdaptorWrapper is IAdaptorWrapper, OwnableUpgradeable {\\n\\tIResourceAdaptor public override adaptor;\\n\\n\\tResourceData.ResourceType public override resourceType;\\n\\n\\tfunction __Init_Resource_Adaptor(IResourceAdaptor _adaptor) internal onlyInitializing {\\n\\t\\t_setResourceAdaptor(_adaptor);\\n\\t}\\n\\n\\tfunction __Init_Resource_Type(ResourceData.ResourceType _resourceType) internal onlyInitializing {\\n\\t\\t_setResourceType(_resourceType);\\n\\t}\\n\\n\\tfunction setResourceAdaptor(IResourceAdaptor _adaptor) external onlyOwner {\\n\\t\\t_setResourceAdaptor(_adaptor);\\n\\t}\\n\\n\\tfunction setResourceType(ResourceData.ResourceType _resourceType) external onlyOwner {\\n\\t\\t_setResourceType(_resourceType);\\n\\t}\\n\\n\\tfunction price() public view returns (uint256) {\\n\\t\\treturn adaptor.priceOf(resourceType);\\n\\t}\\n\\n\\tfunction getValueOf(uint256 amount) public view returns (uint256) {\\n\\t\\treturn adaptor.getValueOf(resourceType, amount);\\n\\t}\\n\\n\\tfunction getAmountOf(uint256 value) public view returns (uint256) {\\n\\t\\treturn adaptor.getAmountOf(resourceType, value);\\n\\t}\\n\\n\\tfunction _setResourceAdaptor(IResourceAdaptor _adaptor) internal {\\n\\t\\tadaptor = _adaptor;\\n\\t\\temit ResourceAdaptorUpdated(_adaptor);\\n\\t}\\n\\n\\tfunction _setResourceType(ResourceData.ResourceType _resourceType) internal {\\n\\t\\tresourceType = _resourceType;\\n\\t\\temit ResourceTypeUpdated(_resourceType);\\n\\t}\\n}\\n\",\"keccak256\":\"0x547961502bb56dcf7d82f04cd7813c5fa658dec47ba177455a214a02da75121e\",\"license\":\"UNLICENSE\"},\"contracts/resources/controllers/normal/BandwidthController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport './NormalResourceController.sol';\\n\\ncontract BandwidthController is NormalResourceController {\\n\\tconstructor(\\n\\t\\taddress owner, \\t\\t\\n\\t\\taddress dstChainPayment,\\n\\t\\tIResourceAdaptor adaptor\\n\\t) initializer {\\n\\t\\t__Init_Normal_Resource_Controller(owner, dstChainPayment, adaptor, ResourceData.ResourceType.Bandwidth);\\n\\t}\\n\\n\\tfunction initialize(\\n\\t\\taddress owner, \\t\\t\\n\\t\\taddress dstChainPayment,\\n\\t\\tIResourceAdaptor adaptor\\n\\t) external initializer {\\n\\t\\t__Init_Normal_Resource_Controller(owner, dstChainPayment, adaptor, ResourceData.ResourceType.Bandwidth);\\n\\t}\\n}\\n\",\"keccak256\":\"0xbbbdef7ee9de575ad221e0cd33a0f1935fd7d6fbb31001575a251f8c99cb8cdb\",\"license\":\"UNLICENSE\"},\"contracts/resources/controllers/normal/NormalResourceController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol';\\nimport '../../AdaptorWrapper.sol';\\nimport '../../interfaces/INormalResourceController.sol';\\nimport '../../../payment/DstChainPaymentWrapper.sol';\\n\\nabstract contract NormalResourceController is INormalResourceController, DstChainPaymentWrapper, AdaptorWrapper {\\n\\tusing SafeMathUpgradeable for uint256;\\n\\n\\tmapping(bytes32 => uint256) internal balances;\\n\\n\\tfunction __Init_Normal_Resource_Controller(\\n\\t\\taddress owner,\\n\\t\\taddress dstChainPayment,\\n\\t\\tIResourceAdaptor adaptor,\\n\\t\\tResourceData.ResourceType resourceType\\n\\t) internal onlyInitializing {\\n\\t\\t_transferOwnership(owner);\\n\\t\\t__Init_Dst_Chain_Payment(dstChainPayment);\\n\\t\\t__Init_Resource_Adaptor(adaptor);\\n\\t\\t__Init_Resource_Type(resourceType);\\n\\t}\\n\\n\\tfunction expand(bytes32 account, uint256 value) external override onlyDstChainPayment returns(uint256) {\\n\\t\\tuint256 amount = getAmountOf(value);\\n\\t\\tbalances[account] = balances[account].add(amount);\\n\\t\\temit Expanded(account, value);\\n\\t\\treturn value;\\n\\t}\\n\\n\\tfunction balanceOf(bytes32 account) public view override returns(uint256) {\\n\\t\\treturn balances[account];\\n\\t}\\n}\\n\",\"keccak256\":\"0x0280b1de14a86d28bf4510fc5926dd211f9e8f3250372e6f237d2ac1c98bb959\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/IAdaptorWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '../interfaces/IResourceAdaptor.sol';\\nimport '../../libraries/ResourceData.sol';\\n\\ninterface IAdaptorWrapper {\\n\\tevent ResourceAdaptorUpdated(IResourceAdaptor adaptor);\\n\\n\\tevent ResourceTypeUpdated(ResourceData.ResourceType resourceType);\\n\\n\\tfunction adaptor() external view returns (IResourceAdaptor);\\n\\n\\tfunction resourceType() external view returns (ResourceData.ResourceType);\\n\\n\\tfunction price() external view returns (uint256);\\n\\n\\tfunction getValueOf(uint256 amount) external view returns (uint256);\\n\\n\\tfunction getAmountOf(uint256 value) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd34f9e364967a82a04fea655b14e3d70c214f3735737cf59f7643fbaeaa6f735\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/INormalResourceController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport './IAdaptorWrapper.sol';\\n\\ninterface INormalResourceController is IAdaptorWrapper {\\n\\tevent Expanded(bytes32 account, uint256 value);\\n\\n\\tfunction expand(bytes32 account, uint256 value) external returns(uint256);\\n\\n\\tfunction balanceOf(bytes32 account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x73706ccbe9c3696d385acbd5ed0e45a424421f212bf9f1b726717fee0190bb33\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/IResourceAdaptor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '../../libraries/ResourceData.sol';\\n\\ninterface IResourceAdaptor {\\n\\n\\tfunction priceAt(ResourceData.ResourceType resourceType, uint256 _indexBlock) external view returns (uint256);\\n\\n\\tfunction getValueAt(\\n\\t\\tResourceData.ResourceType resourceType,\\n\\t\\tuint256 amount,\\n\\t\\tuint256 _indexBlock\\n\\t) external view returns (uint256);\\n\\n\\tfunction getAmountAt(\\n\\t\\tResourceData.ResourceType resourceType,\\n\\t\\tuint256 value,\\n\\t\\tuint256 _indexBlock\\n\\t) external view returns (uint256);\\n\\n\\tfunction priceOf(ResourceData.ResourceType resourceType) external view returns (uint256);\\n\\n\\tfunction getValueOf(ResourceData.ResourceType resourceType, uint256 amount) external view returns (uint256);\\n\\n\\tfunction getAmountOf(ResourceData.ResourceType resourceType, uint256 value) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf60bb837ce179f97f69cc642ef0b775cc58c952824869b89df3d29729133b738\",\"license\":\"UNLICENSE\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620020543803806200205483398181016040528101906200003791906200062d565b600060019054906101000a900460ff16620000615760008054906101000a900460ff161562000072565b620000716200014660201b60201c565b5b620000b4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ab9062000710565b60405180910390fd5b60008060019054906101000a900460ff16159050801562000105576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6200011a84848460026200016460201b60201c565b80156200013c5760008060016101000a81548160ff0219169083151502179055505b505050506200091d565b60006200015e306200020060201b62000b021760201c565b15905090565b600060019054906101000a900460ff16620001b6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001ad90620007a8565b60405180910390fd5b620001c7846200022360201b60201c565b620001d883620002e960201b60201c565b620001e9826200034f60201b60201c565b620001fa81620003b560201b60201c565b50505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff166200033b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200033290620007a8565b60405180910390fd5b6200034c816200041b60201b60201c565b50565b600060019054906101000a900460ff16620003a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200039890620007a8565b60405180910390fd5b620003b2816200049860201b60201c565b50565b600060019054906101000a900460ff1662000407576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003fe90620007a8565b60405180910390fd5b62000418816200051560201b60201c565b50565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff2071e1b38ab3c561fb5d090a912ad00d911946da5f417b4eac46024a2f6ed60816040516200048d9190620007db565b60405180910390a150565b80606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcb398744d70dd9f7eb9e1e65c9c74f4d3276143240e25316135eb6585db6c1c1816040516200050a919062000863565b60405180910390a150565b80606660146101000a81548160ff021916908360048111156200053d576200053c62000880565b5b02179055507ffd8efb560fb934faf6ee365a559c93f9a480bad1f14c5041d2cb8468296f87f08160405162000573919062000900565b60405180910390a150565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620005b08262000583565b9050919050565b620005c281620005a3565b8114620005ce57600080fd5b50565b600081519050620005e281620005b7565b92915050565b6000620005f582620005a3565b9050919050565b6200060781620005e8565b81146200061357600080fd5b50565b6000815190506200062781620005fc565b92915050565b6000806000606084860312156200064957620006486200057e565b5b60006200065986828701620005d1565b93505060206200066c86828701620005d1565b92505060406200067f8682870162000616565b9150509250925092565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000620006f8602e8362000689565b915062000705826200069a565b604082019050919050565b600060208201905081810360008301526200072b81620006e9565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b600062000790602b8362000689565b91506200079d8262000732565b604082019050919050565b60006020820190508181036000830152620007c38162000781565b9050919050565b620007d581620005a3565b82525050565b6000602082019050620007f26000830184620007ca565b92915050565b6000819050919050565b6000620008236200081d620008178462000583565b620007f8565b62000583565b9050919050565b6000620008378262000802565b9050919050565b60006200084b826200082a565b9050919050565b6200085d816200083e565b82525050565b60006020820190506200087a600083018462000852565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110620008c357620008c262000880565b5b50565b6000819050620008d682620008af565b919050565b6000620008e882620008c6565b9050919050565b620008fa81620008db565b82525050565b6000602082019050620009176000830184620008ef565b92915050565b611727806200092d6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063c2cd9b2b11610066578063c2cd9b2b14610270578063f2fde38b1461028e578063f60cfa59146102aa578063f7d22190146102c8576100f5565b8063715018a61461020e5780638da5cb5b14610218578063a035b1fe14610236578063c0c53b8b14610254576100f5565b80634513f23d116100d35780634513f23d14610176578063467aa8de14610192578063691b2a6d146101c25780636c7f1542146101de576100f5565b806306570749146100fa5780630ab2b6b91461012a578063429aafd91461015a575b600080fd5b610114600480360381019061010f9190610f39565b6102e6565b6040516101219190610f75565b60405180910390f35b610144600480360381019061013f9190610f39565b6103ab565b6040516101519190610f75565b60405180910390f35b610174600480360381019061016f9190610fee565b610470565b005b610190600480360381019061018b9190611059565b6104f8565b005b6101ac60048036038101906101a791906110bc565b610580565b6040516101b99190610f75565b60405180910390f35b6101dc60048036038101906101d79190611121565b61069f565b005b6101f860048036038101906101f3919061114e565b610727565b6040516102059190610f75565b60405180910390f35b610216610744565b005b6102206107cc565b60405161022d919061118a565b60405180910390f35b61023e6107f6565b60405161024b9190610f75565b60405180910390f35b61026e600480360381019061026991906111a5565b6108b7565b005b6102786109ab565b6040516102859190611257565b60405180910390f35b6102a860048036038101906102a39190610fee565b6109d1565b005b6102b2610ac9565b6040516102bf919061118a565b60405180910390f35b6102d0610aef565b6040516102dd91906112e9565b60405180910390f35b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6170b51606660149054906101000a900460ff16846040518363ffffffff1660e01b8152600401610354929190611304565b60206040518083038186803b15801561036c57600080fd5b505afa158015610380573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a49190611342565b9050919050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166368fbeb18606660149054906101000a900460ff16846040518363ffffffff1660e01b8152600401610419929190611304565b60206040518083038186803b15801561043157600080fd5b505afa158015610445573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104699190611342565b9050919050565b610478610b25565b73ffffffffffffffffffffffffffffffffffffffff166104966107cc565b73ffffffffffffffffffffffffffffffffffffffff16146104ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e3906113cc565b60405180910390fd5b6104f581610b2d565b50565b610500610b25565b73ffffffffffffffffffffffffffffffffffffffff1661051e6107cc565b73ffffffffffffffffffffffffffffffffffffffff1614610574576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056b906113cc565b60405180910390fd5b61057d81610ba8565b50565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610612576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106099061145e565b60405180910390fd5b600061061d836102e6565b9050610645816067600087815260200190815260200160002054610c2390919063ffffffff16565b60676000868152602001908152602001600020819055507fc94dc324f0c4f025f229aaac825915c9524860787daeb3d08728a9818b393915848460405161068d92919061148d565b60405180910390a18291505092915050565b6106a7610b25565b73ffffffffffffffffffffffffffffffffffffffff166106c56107cc565b73ffffffffffffffffffffffffffffffffffffffff161461071b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610712906113cc565b60405180910390fd5b61072481610c39565b50565b600060676000838152602001908152602001600020549050919050565b61074c610b25565b73ffffffffffffffffffffffffffffffffffffffff1661076a6107cc565b73ffffffffffffffffffffffffffffffffffffffff16146107c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b7906113cc565b60405180910390fd5b6107ca6000610c9d565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663912397c3606660149054906101000a900460ff166040518263ffffffff1660e01b815260040161086291906112e9565b60206040518083038186803b15801561087a57600080fd5b505afa15801561088e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b29190611342565b905090565b600060019054906101000a900460ff166108df5760008054906101000a900460ff16156108e8565b6108e7610d63565b5b610927576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091e90611528565b60405180910390fd5b60008060019054906101000a900460ff161590508015610977576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6109848484846002610d74565b80156109a55760008060016101000a81548160ff0219169083151502179055505b50505050565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109d9610b25565b73ffffffffffffffffffffffffffffffffffffffff166109f76107cc565b73ffffffffffffffffffffffffffffffffffffffff1614610a4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a44906113cc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610abd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab4906115ba565b60405180910390fd5b610ac681610c9d565b50565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606660149054906101000a900460ff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600033905090565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff2071e1b38ab3c561fb5d090a912ad00d911946da5f417b4eac46024a2f6ed6081604051610b9d919061118a565b60405180910390a150565b80606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcb398744d70dd9f7eb9e1e65c9c74f4d3276143240e25316135eb6585db6c1c181604051610c189190611257565b60405180910390a150565b60008183610c319190611609565b905092915050565b80606660146101000a81548160ff02191690836004811115610c5e57610c5d611272565b5b02179055507ffd8efb560fb934faf6ee365a559c93f9a480bad1f14c5041d2cb8468296f87f081604051610c9291906112e9565b60405180910390a150565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610d6e30610b02565b15905090565b600060019054906101000a900460ff16610dc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dba906116d1565b60405180910390fd5b610dcc84610c9d565b610dd583610ded565b610dde82610e48565b610de781610ea3565b50505050565b600060019054906101000a900460ff16610e3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e33906116d1565b60405180910390fd5b610e4581610b2d565b50565b600060019054906101000a900460ff16610e97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8e906116d1565b60405180910390fd5b610ea081610ba8565b50565b600060019054906101000a900460ff16610ef2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee9906116d1565b60405180910390fd5b610efb81610c39565b50565b600080fd5b6000819050919050565b610f1681610f03565b8114610f2157600080fd5b50565b600081359050610f3381610f0d565b92915050565b600060208284031215610f4f57610f4e610efe565b5b6000610f5d84828501610f24565b91505092915050565b610f6f81610f03565b82525050565b6000602082019050610f8a6000830184610f66565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fbb82610f90565b9050919050565b610fcb81610fb0565b8114610fd657600080fd5b50565b600081359050610fe881610fc2565b92915050565b60006020828403121561100457611003610efe565b5b600061101284828501610fd9565b91505092915050565b600061102682610fb0565b9050919050565b6110368161101b565b811461104157600080fd5b50565b6000813590506110538161102d565b92915050565b60006020828403121561106f5761106e610efe565b5b600061107d84828501611044565b91505092915050565b6000819050919050565b61109981611086565b81146110a457600080fd5b50565b6000813590506110b681611090565b92915050565b600080604083850312156110d3576110d2610efe565b5b60006110e1858286016110a7565b92505060206110f285828601610f24565b9150509250929050565b6005811061110957600080fd5b50565b60008135905061111b816110fc565b92915050565b60006020828403121561113757611136610efe565b5b60006111458482850161110c565b91505092915050565b60006020828403121561116457611163610efe565b5b6000611172848285016110a7565b91505092915050565b61118481610fb0565b82525050565b600060208201905061119f600083018461117b565b92915050565b6000806000606084860312156111be576111bd610efe565b5b60006111cc86828701610fd9565b93505060206111dd86828701610fd9565b92505060406111ee86828701611044565b9150509250925092565b6000819050919050565b600061121d61121861121384610f90565b6111f8565b610f90565b9050919050565b600061122f82611202565b9050919050565b600061124182611224565b9050919050565b61125181611236565b82525050565b600060208201905061126c6000830184611248565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600581106112b2576112b1611272565b5b50565b60008190506112c3826112a1565b919050565b60006112d3826112b5565b9050919050565b6112e3816112c8565b82525050565b60006020820190506112fe60008301846112da565b92915050565b600060408201905061131960008301856112da565b6113266020830184610f66565b9392505050565b60008151905061133c81610f0d565b92915050565b60006020828403121561135857611357610efe565b5b60006113668482850161132d565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006113b660208361136f565b91506113c182611380565b602082019050919050565b600060208201905081810360008301526113e5816113a9565b9050919050565b7f447374436861696e5061796d656e74577261707065723a2063616c6c6572206960008201527f73206e6f742064737420636861696e207061796d656e74000000000000000000602082015250565b600061144860378361136f565b9150611453826113ec565b604082019050919050565b600060208201905081810360008301526114778161143b565b9050919050565b61148781611086565b82525050565b60006040820190506114a2600083018561147e565b6114af6020830184610f66565b9392505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611512602e8361136f565b915061151d826114b6565b604082019050919050565b6000602082019050818103600083015261154181611505565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006115a460268361136f565b91506115af82611548565b604082019050919050565b600060208201905081810360008301526115d381611597565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061161482610f03565b915061161f83610f03565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611654576116536115da565b5b828201905092915050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006116bb602b8361136f565b91506116c68261165f565b604082019050919050565b600060208201905081810360008301526116ea816116ae565b905091905056fea26469706673582212206c1ccd47d2f581bf06f7b2f05c638971890a0714ce55b7a545e5f08c8754bfb264736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063c2cd9b2b11610066578063c2cd9b2b14610270578063f2fde38b1461028e578063f60cfa59146102aa578063f7d22190146102c8576100f5565b8063715018a61461020e5780638da5cb5b14610218578063a035b1fe14610236578063c0c53b8b14610254576100f5565b80634513f23d116100d35780634513f23d14610176578063467aa8de14610192578063691b2a6d146101c25780636c7f1542146101de576100f5565b806306570749146100fa5780630ab2b6b91461012a578063429aafd91461015a575b600080fd5b610114600480360381019061010f9190610f39565b6102e6565b6040516101219190610f75565b60405180910390f35b610144600480360381019061013f9190610f39565b6103ab565b6040516101519190610f75565b60405180910390f35b610174600480360381019061016f9190610fee565b610470565b005b610190600480360381019061018b9190611059565b6104f8565b005b6101ac60048036038101906101a791906110bc565b610580565b6040516101b99190610f75565b60405180910390f35b6101dc60048036038101906101d79190611121565b61069f565b005b6101f860048036038101906101f3919061114e565b610727565b6040516102059190610f75565b60405180910390f35b610216610744565b005b6102206107cc565b60405161022d919061118a565b60405180910390f35b61023e6107f6565b60405161024b9190610f75565b60405180910390f35b61026e600480360381019061026991906111a5565b6108b7565b005b6102786109ab565b6040516102859190611257565b60405180910390f35b6102a860048036038101906102a39190610fee565b6109d1565b005b6102b2610ac9565b6040516102bf919061118a565b60405180910390f35b6102d0610aef565b6040516102dd91906112e9565b60405180910390f35b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a6170b51606660149054906101000a900460ff16846040518363ffffffff1660e01b8152600401610354929190611304565b60206040518083038186803b15801561036c57600080fd5b505afa158015610380573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a49190611342565b9050919050565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166368fbeb18606660149054906101000a900460ff16846040518363ffffffff1660e01b8152600401610419929190611304565b60206040518083038186803b15801561043157600080fd5b505afa158015610445573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104699190611342565b9050919050565b610478610b25565b73ffffffffffffffffffffffffffffffffffffffff166104966107cc565b73ffffffffffffffffffffffffffffffffffffffff16146104ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e3906113cc565b60405180910390fd5b6104f581610b2d565b50565b610500610b25565b73ffffffffffffffffffffffffffffffffffffffff1661051e6107cc565b73ffffffffffffffffffffffffffffffffffffffff1614610574576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056b906113cc565b60405180910390fd5b61057d81610ba8565b50565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610612576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106099061145e565b60405180910390fd5b600061061d836102e6565b9050610645816067600087815260200190815260200160002054610c2390919063ffffffff16565b60676000868152602001908152602001600020819055507fc94dc324f0c4f025f229aaac825915c9524860787daeb3d08728a9818b393915848460405161068d92919061148d565b60405180910390a18291505092915050565b6106a7610b25565b73ffffffffffffffffffffffffffffffffffffffff166106c56107cc565b73ffffffffffffffffffffffffffffffffffffffff161461071b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610712906113cc565b60405180910390fd5b61072481610c39565b50565b600060676000838152602001908152602001600020549050919050565b61074c610b25565b73ffffffffffffffffffffffffffffffffffffffff1661076a6107cc565b73ffffffffffffffffffffffffffffffffffffffff16146107c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b7906113cc565b60405180910390fd5b6107ca6000610c9d565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663912397c3606660149054906101000a900460ff166040518263ffffffff1660e01b815260040161086291906112e9565b60206040518083038186803b15801561087a57600080fd5b505afa15801561088e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b29190611342565b905090565b600060019054906101000a900460ff166108df5760008054906101000a900460ff16156108e8565b6108e7610d63565b5b610927576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091e90611528565b60405180910390fd5b60008060019054906101000a900460ff161590508015610977576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6109848484846002610d74565b80156109a55760008060016101000a81548160ff0219169083151502179055505b50505050565b606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109d9610b25565b73ffffffffffffffffffffffffffffffffffffffff166109f76107cc565b73ffffffffffffffffffffffffffffffffffffffff1614610a4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a44906113cc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610abd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab4906115ba565b60405180910390fd5b610ac681610c9d565b50565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606660149054906101000a900460ff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600033905090565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff2071e1b38ab3c561fb5d090a912ad00d911946da5f417b4eac46024a2f6ed6081604051610b9d919061118a565b60405180910390a150565b80606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fcb398744d70dd9f7eb9e1e65c9c74f4d3276143240e25316135eb6585db6c1c181604051610c189190611257565b60405180910390a150565b60008183610c319190611609565b905092915050565b80606660146101000a81548160ff02191690836004811115610c5e57610c5d611272565b5b02179055507ffd8efb560fb934faf6ee365a559c93f9a480bad1f14c5041d2cb8468296f87f081604051610c9291906112e9565b60405180910390a150565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000610d6e30610b02565b15905090565b600060019054906101000a900460ff16610dc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dba906116d1565b60405180910390fd5b610dcc84610c9d565b610dd583610ded565b610dde82610e48565b610de781610ea3565b50505050565b600060019054906101000a900460ff16610e3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e33906116d1565b60405180910390fd5b610e4581610b2d565b50565b600060019054906101000a900460ff16610e97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8e906116d1565b60405180910390fd5b610ea081610ba8565b50565b600060019054906101000a900460ff16610ef2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee9906116d1565b60405180910390fd5b610efb81610c39565b50565b600080fd5b6000819050919050565b610f1681610f03565b8114610f2157600080fd5b50565b600081359050610f3381610f0d565b92915050565b600060208284031215610f4f57610f4e610efe565b5b6000610f5d84828501610f24565b91505092915050565b610f6f81610f03565b82525050565b6000602082019050610f8a6000830184610f66565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fbb82610f90565b9050919050565b610fcb81610fb0565b8114610fd657600080fd5b50565b600081359050610fe881610fc2565b92915050565b60006020828403121561100457611003610efe565b5b600061101284828501610fd9565b91505092915050565b600061102682610fb0565b9050919050565b6110368161101b565b811461104157600080fd5b50565b6000813590506110538161102d565b92915050565b60006020828403121561106f5761106e610efe565b5b600061107d84828501611044565b91505092915050565b6000819050919050565b61109981611086565b81146110a457600080fd5b50565b6000813590506110b681611090565b92915050565b600080604083850312156110d3576110d2610efe565b5b60006110e1858286016110a7565b92505060206110f285828601610f24565b9150509250929050565b6005811061110957600080fd5b50565b60008135905061111b816110fc565b92915050565b60006020828403121561113757611136610efe565b5b60006111458482850161110c565b91505092915050565b60006020828403121561116457611163610efe565b5b6000611172848285016110a7565b91505092915050565b61118481610fb0565b82525050565b600060208201905061119f600083018461117b565b92915050565b6000806000606084860312156111be576111bd610efe565b5b60006111cc86828701610fd9565b93505060206111dd86828701610fd9565b92505060406111ee86828701611044565b9150509250925092565b6000819050919050565b600061121d61121861121384610f90565b6111f8565b610f90565b9050919050565b600061122f82611202565b9050919050565b600061124182611224565b9050919050565b61125181611236565b82525050565b600060208201905061126c6000830184611248565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600581106112b2576112b1611272565b5b50565b60008190506112c3826112a1565b919050565b60006112d3826112b5565b9050919050565b6112e3816112c8565b82525050565b60006020820190506112fe60008301846112da565b92915050565b600060408201905061131960008301856112da565b6113266020830184610f66565b9392505050565b60008151905061133c81610f0d565b92915050565b60006020828403121561135857611357610efe565b5b60006113668482850161132d565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006113b660208361136f565b91506113c182611380565b602082019050919050565b600060208201905081810360008301526113e5816113a9565b9050919050565b7f447374436861696e5061796d656e74577261707065723a2063616c6c6572206960008201527f73206e6f742064737420636861696e207061796d656e74000000000000000000602082015250565b600061144860378361136f565b9150611453826113ec565b604082019050919050565b600060208201905081810360008301526114778161143b565b9050919050565b61148781611086565b82525050565b60006040820190506114a2600083018561147e565b6114af6020830184610f66565b9392505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000611512602e8361136f565b915061151d826114b6565b604082019050919050565b6000602082019050818103600083015261154181611505565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006115a460268361136f565b91506115af82611548565b604082019050919050565b600060208201905081810360008301526115d381611597565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061161482610f03565b915061161f83610f03565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611654576116536115da565b5b828201905092915050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006116bb602b8361136f565b91506116c68261165f565b604082019050919050565b600060208201905081810360008301526116ea816116ae565b905091905056fea26469706673582212206c1ccd47d2f581bf06f7b2f05c638971890a0714ce55b7a545e5f08c8754bfb264736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 147,
        "contract": "contracts/resources/controllers/normal/BandwidthController.sol:BandwidthController",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 150,
        "contract": "contracts/resources/controllers/normal/BandwidthController.sol:BandwidthController",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 970,
        "contract": "contracts/resources/controllers/normal/BandwidthController.sol:BandwidthController",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/resources/controllers/normal/BandwidthController.sol:BandwidthController",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 122,
        "contract": "contracts/resources/controllers/normal/BandwidthController.sol:BandwidthController",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 5170,
        "contract": "contracts/resources/controllers/normal/BandwidthController.sol:BandwidthController",
        "label": "dstChainPayment",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 6036,
        "contract": "contracts/resources/controllers/normal/BandwidthController.sol:BandwidthController",
        "label": "adaptor",
        "offset": 0,
        "slot": "102",
        "type": "t_contract(IResourceAdaptor)7550"
      },
      {
        "astId": 6040,
        "contract": "contracts/resources/controllers/normal/BandwidthController.sol:BandwidthController",
        "label": "resourceType",
        "offset": 20,
        "slot": "102",
        "type": "t_enum(ResourceType)3822"
      },
      {
        "astId": 7226,
        "contract": "contracts/resources/controllers/normal/BandwidthController.sol:BandwidthController",
        "label": "balances",
        "offset": 0,
        "slot": "103",
        "type": "t_mapping(t_bytes32,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IResourceAdaptor)7550": {
        "encoding": "inplace",
        "label": "contract IResourceAdaptor",
        "numberOfBytes": "20"
      },
      "t_enum(ResourceType)3822": {
        "encoding": "inplace",
        "label": "enum ResourceData.ResourceType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}