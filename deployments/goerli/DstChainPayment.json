{
  "address": "0xDb356D2a9cC7485ABa452bB5842B34C1937c5078",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pauser",
          "type": "address"
        },
        {
          "internalType": "contract IProviders",
          "name": "providers",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messageReceiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract INormalResourceController",
          "name": "_arStorageController",
          "type": "address"
        }
      ],
      "name": "ARStorageControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract INormalResourceController",
          "name": "_bandwidthController",
          "type": "address"
        }
      ],
      "name": "BandwidthControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract INormalResourceController",
          "name": "_buildingTimeController",
          "type": "address"
        }
      ],
      "name": "BuildingTimeControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IIPFSStorageController",
          "name": "_ipfsStorageController",
          "type": "address"
        }
      ],
      "name": "IPFSStorageControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "messageReceiver",
          "type": "address"
        }
      ],
      "name": "MessageReceiverUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "NativeWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "account",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "enum ResourceData.ResourceType",
                  "name": "resourceType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct ResourceData.Payload[]",
              "name": "payloads",
              "type": "tuple[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IDstChainPayment.PaymentPayload",
          "name": "payload",
          "type": "tuple"
        }
      ],
      "name": "Paid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IProviders",
          "name": "providers",
          "type": "address"
        }
      ],
      "name": "ProvidersUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ProvidetWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pauser",
          "type": "address"
        },
        {
          "internalType": "contract IProviders",
          "name": "providers",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messageReceiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "Init_Payment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "arStorageController",
      "outputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bandwidthController",
      "outputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buildingTimeController",
      "outputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "enum ResourceData.ResourceType",
              "name": "resourceType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ResourceData.Payload[]",
          "name": "payloads",
          "type": "tuple[]"
        }
      ],
      "name": "convertSourceChainPayloads",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum ResourceData.ResourceType",
              "name": "resourceType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ResourceData.Payload[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "decodeSourceChainMessage",
      "outputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes32",
          "name": "account",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "enum ResourceData.ResourceType",
              "name": "resourceType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ResourceData.Payload[]",
          "name": "payloads",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ipfsStorageController",
      "outputs": [
        {
          "internalType": "contract IIPFSStorageController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pausers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "account",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "enum ResourceData.ResourceType",
                  "name": "resourceType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct ResourceData.Payload[]",
              "name": "payloads",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IDstChainPayment.PaymentPayload",
          "name": "payload",
          "type": "tuple"
        }
      ],
      "name": "pay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "dstAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "payFromSourceChain",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "providerBalances",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "providerWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "providers",
      "outputs": [
        {
          "internalType": "contract IProviders",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "_arStorageController",
          "type": "address"
        }
      ],
      "name": "setARStorageController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "_bandwidthController",
          "type": "address"
        }
      ],
      "name": "setBandwidthController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "_buildingTimeController",
          "type": "address"
        }
      ],
      "name": "setBuildingTimeController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IIPFSStorageController",
          "name": "_ipfsStorageController",
          "type": "address"
        }
      ],
      "name": "setIPFSStorageController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageReceiver",
          "type": "address"
        }
      ],
      "name": "setMessageReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum ResourceData.ResourceType",
              "name": "resourceType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ResourceData.Payload[]",
          "name": "payloads",
          "type": "tuple[]"
        }
      ],
      "name": "totalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "withdrawNative",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x18652e122c9b87889e22ed05d5ec3ac6e85358b96c779972d91f5ff0d7a23fa2",
  "receipt": {
    "to": null,
    "from": "0xF1658C608708172655A8e70a1624c29F956Ee63D",
    "contractAddress": "0xDb356D2a9cC7485ABa452bB5842B34C1937c5078",
    "transactionIndex": 0,
    "gasUsed": "4840920",
    "logsBloom": "0x
    "blockHash": "0xb5ed8b9892def3f65d74192949d6c62d95218022084e636980239377fbab86c1",
    "transactionHash": "0x18652e122c9b87889e22ed05d5ec3ac6e85358b96c779972d91f5ff0d7a23fa2",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 6798105,
        "transactionHash": "0x18652e122c9b87889e22ed05d5ec3ac6e85358b96c779972d91f5ff0d7a23fa2",
        "address": "0xDb356D2a9cC7485ABa452bB5842B34C1937c5078",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f1658c608708172655a8e70a1624c29f956ee63d"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xb5ed8b9892def3f65d74192949d6c62d95218022084e636980239377fbab86c1"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6798105,
        "transactionHash": "0x18652e122c9b87889e22ed05d5ec3ac6e85358b96c779972d91f5ff0d7a23fa2",
        "address": "0xDb356D2a9cC7485ABa452bB5842B34C1937c5078",
        "topics": [
          "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8"
        ],
        "data": "0x000000000000000000000000f1658c608708172655a8e70a1624c29f956ee63d",
        "logIndex": 1,
        "blockHash": "0xb5ed8b9892def3f65d74192949d6c62d95218022084e636980239377fbab86c1"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6798105,
        "transactionHash": "0x18652e122c9b87889e22ed05d5ec3ac6e85358b96c779972d91f5ff0d7a23fa2",
        "address": "0xDb356D2a9cC7485ABa452bB5842B34C1937c5078",
        "topics": [
          "0xe63288198842f0dacdcbdc3f22dcd4e473d1f3cee7e10603ae6ddc3e667c5284"
        ],
        "data": "0x00000000000000000000000098469e0d9d31bdc1d0d29485738614941492f9dc",
        "logIndex": 2,
        "blockHash": "0xb5ed8b9892def3f65d74192949d6c62d95218022084e636980239377fbab86c1"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6798105,
        "transactionHash": "0x18652e122c9b87889e22ed05d5ec3ac6e85358b96c779972d91f5ff0d7a23fa2",
        "address": "0xDb356D2a9cC7485ABa452bB5842B34C1937c5078",
        "topics": [
          "0xafe9b28ca24a54df8c44769c685f7b92824aae021cdfcaa4719d493571a23c4c"
        ],
        "data": "0x000000000000000000000000f1c3bc06fef12c9feabeef64af0b4929fb1613b6",
        "logIndex": 3,
        "blockHash": "0xb5ed8b9892def3f65d74192949d6c62d95218022084e636980239377fbab86c1"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6798105,
        "transactionHash": "0x18652e122c9b87889e22ed05d5ec3ac6e85358b96c779972d91f5ff0d7a23fa2",
        "address": "0xDb356D2a9cC7485ABa452bB5842B34C1937c5078",
        "topics": [
          "0x5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e30"
        ],
        "data": "0x000000000000000000000000f1658c608708172655a8e70a1624c29f956ee63d",
        "logIndex": 4,
        "blockHash": "0xb5ed8b9892def3f65d74192949d6c62d95218022084e636980239377fbab86c1"
      }
    ],
    "blockNumber": 6798105,
    "cumulativeGasUsed": "4840920",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xF1658C608708172655A8e70a1624c29F956Ee63D",
    "0xF1658C608708172655A8e70a1624c29F956Ee63D",
    "0x98469e0D9d31BDC1D0d29485738614941492f9Dc",
    "0xF1c3bC06fef12c9fEaBeEF64AF0B4929FB1613B6",
    "0xF1658C608708172655A8e70a1624c29F956Ee63D"
  ],
  "solcInputHash": "c0a972a4af822082f95de07f6d9ff60c",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"contract IProviders\",\"name\":\"providers\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"messageReceiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract INormalResourceController\",\"name\":\"_arStorageController\",\"type\":\"address\"}],\"name\":\"ARStorageControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract INormalResourceController\",\"name\":\"_bandwidthController\",\"type\":\"address\"}],\"name\":\"BandwidthControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract INormalResourceController\",\"name\":\"_buildingTimeController\",\"type\":\"address\"}],\"name\":\"BuildingTimeControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IIPFSStorageController\",\"name\":\"_ipfsStorageController\",\"type\":\"address\"}],\"name\":\"IPFSStorageControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"messageReceiver\",\"type\":\"address\"}],\"name\":\"MessageReceiverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NativeWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct IDstChainPayment.PaymentPayload\",\"name\":\"payload\",\"type\":\"tuple\"}],\"name\":\"Paid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IProviders\",\"name\":\"providers\",\"type\":\"address\"}],\"name\":\"ProvidersUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ProvidetWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"contract IProviders\",\"name\":\"providers\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"messageReceiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"Init_Payment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arStorageController\",\"outputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bandwidthController\",\"outputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buildingTimeController\",\"outputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"name\":\"convertSourceChainPayloads\",\"outputs\":[{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"decodeSourceChainMessage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsStorageController\",\"outputs\":[{\"internalType\":\"contract IIPFSStorageController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pausers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IDstChainPayment.PaymentPayload\",\"name\":\"payload\",\"type\":\"tuple\"}],\"name\":\"pay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dstAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"payFromSourceChain\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"providerBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"providerWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"providers\",\"outputs\":[{\"internalType\":\"contract IProviders\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"_arStorageController\",\"type\":\"address\"}],\"name\":\"setARStorageController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"_bandwidthController\",\"type\":\"address\"}],\"name\":\"setBandwidthController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"_buildingTimeController\",\"type\":\"address\"}],\"name\":\"setBuildingTimeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIPFSStorageController\",\"name\":\"_ipfsStorageController\",\"type\":\"address\"}],\"name\":\"setIPFSStorageController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageReceiver\",\"type\":\"address\"}],\"name\":\"setMessageReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"name\":\"totalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawNative\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/payment/DstChainPayment.sol\":\"DstChainPayment\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/IERC20Upgradeable.sol\\\";\\n\",\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMathUpgradeable {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\"},\"contracts/access/OwnerWithdrawable.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol';\\n\\nabstract contract OwnerWithdrawable is OwnableUpgradeable  {\\n\\tusing SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n\\tevent Withdrawal(IERC20Upgradeable token, address to, uint256 value);\\n\\n\\tevent NativeWithdrawal(address to, uint256 value);\\n\\n\\tfunction withdraw(IERC20Upgradeable token, address to, uint256 value) external onlyOwner {\\n\\t\\ttoken.safeTransfer(to, value);\\n\\t\\temit Withdrawal(token, to, value);\\n\\t}\\n\\n\\tfunction withdrawNative(address payable to, uint256 value) external onlyOwner {\\n\\t\\tbool success = to.send(value);\\n\\t\\trequire(success, 'Payment: withdraw native token failed');\\n\\t\\temit NativeWithdrawal(to, value);\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x795ed1ca0da5ab6d318f00a9752a7dbef4173466e34e4cca658496d0675cc7f1\",\"license\":\"UNLICENSE\"},\"contracts/access/Pauser.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol';\\n\\nabstract contract Pauser is OwnableUpgradeable, PausableUpgradeable {\\n\\tmapping(address => bool) public pausers;\\n\\n\\tevent PauserAdded(address account);\\n\\tevent PauserRemoved(address account);\\n\\n\\tfunction __Init_Pauser(address account) internal onlyInitializing {\\n\\t\\t_addPauser(account);\\n\\t}\\n\\n\\tmodifier onlyPauser() {\\n\\t\\trequire(isPauser(msg.sender), 'Pauser: Caller is not pauser');\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction pause() public onlyPauser {\\n\\t\\t_pause();\\n\\t}\\n\\n\\tfunction unpause() public onlyPauser {\\n\\t\\t_unpause();\\n\\t}\\n\\n\\tfunction isPauser(address account) public view returns (bool) {\\n\\t\\treturn pausers[account];\\n\\t}\\n\\n\\tfunction addPauser(address account) public onlyOwner {\\n\\t\\t_addPauser(account);\\n\\t}\\n\\n\\tfunction removePauser(address account) public onlyOwner {\\n\\t\\t_removePauser(account);\\n\\t}\\n\\n\\tfunction renouncePauser() public {\\n\\t\\t_removePauser(msg.sender);\\n\\t}\\n\\n\\tfunction _addPauser(address account) private {\\n\\t\\trequire(!isPauser(account), 'Pauser: Account is already pauser');\\n\\t\\tpausers[account] = true;\\n\\t\\temit PauserAdded(account);\\n\\t}\\n\\n\\tfunction _removePauser(address account) private {\\n\\t\\trequire(isPauser(account), 'Pauser: Account is not pauser');\\n\\t\\tpausers[account] = false;\\n\\t\\temit PauserRemoved(account);\\n\\t}\\n}\\n\",\"keccak256\":\"0xc389407247a71425c067105ba1dbf04816e70f648e85f374a69b1cb72c40cb4c\",\"license\":\"GPL-3.0-only\"},\"contracts/interfaces/IDstChainPayment.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol';\\nimport '../libraries/ResourceData.sol';\\n\\ninterface IDstChainPayment {\\n\\n\\tstruct PaymentPayload {\\n\\t\\taddress provider;\\n\\t\\tuint64 nonce;\\n\\t\\tbytes32 account;\\n\\t\\tResourceData.Payload[] payloads;\\n\\t}\\n\\n\\tevent TokenUpdated(IERC20Upgradeable token);\\n\\n\\tevent Paid(address payer, IERC20Upgradeable token, PaymentPayload payload);\\n\\n\\tevent ProvidetWithdraw(address provider, IERC20Upgradeable token, address to, uint256 value);\\n\\n\\tfunction payFromSourceChain(\\n\\t\\tIERC20Upgradeable token,\\n\\t\\tuint256 amount,\\n\\t\\tbytes calldata message\\n\\t) external returns (uint256 value);\\n\\n\\tfunction pay(PaymentPayload memory payload) external returns (uint256 value);\\n\\n}\\n\",\"keccak256\":\"0xc3813dbd193aa5441b0b25adc1167593b210809669c4a4587f11cd9f27a16f1f\",\"license\":\"UNLICENSE\"},\"contracts/interfaces/IProviders.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\ninterface IProviders {\\n\\tevent ProviderUpdated(address provider, address wallet);\\n\\n\\tevent RemoveProvider(address provider);\\n\\n\\tfunction isProvider(address provider) external view returns (bool);\\n\\n\\tfunction wallets(address provider) external view returns (address);\\n\\n\\tfunction isValidSignature(\\n\\t\\taddress provider,\\n\\t\\tbytes32 hash,\\n\\t\\tbytes memory signature\\n\\t) external returns (bool);\\n}\\n\",\"keccak256\":\"0xfe5c997043f05e2b105bbbfe9d006d7f2d0049f20ba6b2b74cc397cc65be2f77\",\"license\":\"UNLICENSE\"},\"contracts/interfaces/IProvidersWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '../interfaces/IProviders.sol';\\n\\ninterface IProvidersWrapper {\\n\\tevent ProvidersUpdated(IProviders providers);\\n\\n\\tfunction providers() external view returns (IProviders);\\n}\\n\",\"keccak256\":\"0x1d2ca264ab54ad537468faa0deb6ec04ec367fc013b31ed20debe31842eae560\",\"license\":\"UNLICENSE\"},\"contracts/libraries/ResourceData.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nlibrary ResourceData {\\n\\n\\tenum ResourceType {\\n\\t\\tNull,\\n\\t\\tBuildingTime,\\n\\t\\tBandwidth,\\n\\t\\tARStorage,\\n\\t\\tIPFSStorage\\n\\t}\\n\\n\\tstruct Payload {\\n\\t\\tResourceData.ResourceType resourceType;\\n\\t\\tuint256[] values;\\n\\t}\\n\\n}\",\"keccak256\":\"0xdb575db840fd52f2ae05d464d6626137508ed25bc308badaa6badfdbed25b578\",\"license\":\"UNLICENSE\"},\"contracts/messages/MessageReceiverWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\n\\nabstract contract MessageReceiverWrapper is OwnableUpgradeable {\\n\\taddress public messageReceiver;\\n\\n\\tevent MessageReceiverUpdated(address messageReceiver);\\n\\n\\tmodifier onlyMessageReceiver() {\\n\\t\\trequire(msg.sender == messageReceiver, 'MessageReceiverWrapper: caller is not message receiver');\\n\\t\\t_;\\n\\t}\\n\\n\\tfunction __Init_Message_Receiver(address _messageReceiver) internal onlyInitializing {\\n\\t\\t_setMessageReceiver(_messageReceiver);\\n\\t}\\n\\n\\tfunction setMessageReceiver(address _messageReceiver) external onlyOwner {\\n\\t\\t_setMessageReceiver(_messageReceiver);\\n\\t}\\n\\n\\tfunction _setMessageReceiver(address _messageReceiver) internal {\\n\\t\\tmessageReceiver = _messageReceiver;\\n\\t\\temit MessageReceiverUpdated(_messageReceiver);\\n\\t}\\n\\n}\",\"keccak256\":\"0xb04a31226c0fc2c345ece6675f3a613f3f07d49034c2a012f769d2ad4fb68346\",\"license\":\"GPL-3.0-only\"},\"contracts/payment/DstChainPayment.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol';\\n\\nimport '../resources/ControllersWrapper.sol';\\nimport '../interfaces/IDstChainPayment.sol';\\nimport '../providers/ProvidersWrapper.sol';\\nimport '../messages/MessageReceiverWrapper.sol';\\nimport '../access/OwnerWithdrawable.sol';\\nimport './ResourPayloadTool.sol';\\n\\ncontract DstChainPayment is\\n\\tIDstChainPayment,\\n\\tResourPayloadTool,\\n\\tMessageReceiverWrapper,\\n\\tReentrancyGuardUpgradeable,\\n\\tProvidersWrapper,\\n\\tControllersWrapper,\\n\\tOwnerWithdrawable\\n{\\n\\tusing SafeMathUpgradeable for uint256;\\n\\tusing SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n\\tIERC20Upgradeable public token;\\n\\n\\tmapping(address => uint256) public providerBalances;\\n\\n\\tconstructor(\\n\\t\\taddress owner,\\n\\t\\taddress pauser,\\n\\t\\tIProviders providers,\\n\\t\\taddress messageReceiver,\\n\\t\\tIERC20Upgradeable token\\n\\t) initializer {\\n\\t\\t_transferOwnership(owner);\\n\\t\\t__Init_Pauser(pauser);\\n\\t\\t__Init_Providers(providers);\\n\\t\\t__Init_Message_Receiver(messageReceiver);\\n\\t\\t__Init_Token(token);\\n\\t}\\n\\n\\tfunction Init_Payment(\\n\\t\\taddress owner,\\n\\t\\taddress pauser,\\n\\t\\tIProviders providers,\\n\\t\\taddress messageReceiver,\\n\\t\\tIERC20Upgradeable token\\n\\t) external initializer {\\n\\t\\t_transferOwnership(owner);\\n\\t\\t__Init_Pauser(pauser);\\n\\t\\t__Init_Providers(providers);\\n\\t\\t__Init_Message_Receiver(messageReceiver);\\n\\t\\t__Init_Token(token);\\n\\t}\\n\\n\\tfunction __Init_Token(IERC20Upgradeable _token) internal onlyInitializing {\\n\\t\\t_setToken(_token);\\n\\t}\\n\\n\\tfunction convertSourceChainPayloads(uint256 amount, ResourceData.Payload[] memory payloads) public view returns(ResourceData.Payload[] memory) {\\n\\t\\treturn _convertSourceChainPayloads(amount, payloads);\\n\\t}\\n\\n\\tfunction payFromSourceChain(\\n\\t\\tIERC20Upgradeable _token,\\n\\t\\tuint256 dstAmount,\\n\\t\\tbytes calldata message\\n\\t) external override onlyMessageReceiver whenNotPaused nonReentrant returns (uint256 value) {\\n\\t\\t// require(token == _token, 'DstChainPayment: invalid token');\\n\\t\\t(address provider, uint64 nonce, bytes32 account, ResourceData.Payload[] memory payloads) = decodeSourceChainMessage(message);\\n\\t\\tPaymentPayload memory payload = PaymentPayload(provider, nonce, account, _convertSourceChainPayloads(dstAmount, payloads));\\n\\t\\treturn _pay(payload);\\n\\t}\\n\\n\\tfunction pay(PaymentPayload memory payload) public override whenNotPaused nonReentrant returns (uint256 value) {\\n\\t\\treturn _pay(payload);\\n\\t}\\n\\n\\tfunction _pay(PaymentPayload memory payload) internal returns (uint256 value) {\\n\\t\\trequire(providers.isProvider(payload.provider), 'DstChainPayment: nonexistent provider');\\n\\t\\tvalue = _processPayloads(payload.account, payload.payloads);\\n\\t\\ttoken.safeTransferFrom(msg.sender, address(this), value);\\n\\t\\tproviderBalances[payload.provider] = providerBalances[payload.provider].add(value);\\n\\n\\t\\temit Paid(msg.sender, token, payload);\\n\\t}\\n\\n\\tfunction _processPayloads(bytes32 account, ResourceData.Payload[] memory payloads) internal returns (uint256 value) {\\n\\t\\trequire(payloads.length > 0, 'DstChainPayment: invalid payloads');\\n\\t\\tfor (uint256 i = 0; i < payloads.length; i++) {\\n\\t\\t\\tResourceData.Payload memory payload = payloads[i];\\n\\t\\t\\tif (payload.resourceType == ResourceData.ResourceType.BuildingTime) {\\n\\t\\t\\t\\tvalue = value.add(_processNormalResource(buildingTimeController, account, payload));\\n\\t\\t\\t} else if (payload.resourceType == ResourceData.ResourceType.ARStorage) {\\n\\t\\t\\t\\tvalue = value.add(_processNormalResource(arStorageController, account, payload));\\n\\t\\t\\t} else if (payload.resourceType == ResourceData.ResourceType.Bandwidth) {\\n\\t\\t\\t\\tvalue = value.add(_processNormalResource(bandwidthController, account, payload));\\n\\t\\t\\t} else if (payload.resourceType == ResourceData.ResourceType.IPFSStorage) {\\n\\t\\t\\t\\tvalue = value.add(_processIPFSStorage(ipfsStorageController, account, payload));\\n\\t\\t\\t} else {\\n\\t\\t\\t\\trevert('DstChainPayment: unknown resource type');\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tfunction _processNormalResource(\\n\\t\\tINormalResourceController controller,\\n\\t\\tbytes32 account,\\n\\t\\tResourceData.Payload memory payload\\n\\t) internal returns (uint256 value) {\\n\\t\\trequire(payload.values.length == 1, 'DstChainPayment: invalid token value length');\\n\\t\\treturn controller.expand(account, payload.values[0]);\\n\\t}\\n\\n\\tfunction _processIPFSStorage(\\n\\t\\tIIPFSStorageController controller,\\n\\t\\tbytes32 account,\\n\\t\\tResourceData.Payload memory payload\\n\\t) internal returns (uint256 value) {\\n\\t\\trequire(payload.values.length == 2, 'DstChainPayment: invalid token value');\\n\\t\\treturn controller.expand(account, payload.values[0], payload.values[1]);\\n\\t}\\n\\n\\tfunction providerWithdraw(\\n\\t\\tIERC20Upgradeable token,\\n\\t\\taddress to,\\n\\t\\tuint256 value\\n\\t) external whenNotPaused nonReentrant {\\n\\t\\trequire(providers.isProvider(msg.sender), 'DstChainPayment: caller is not a provider');\\n\\t\\trequire(providerBalances[msg.sender] >= value, 'DstChainPayment: insufficient provider balance');\\n\\t\\tproviderBalances[msg.sender] = providerBalances[msg.sender].sub(value);\\n\\t\\ttoken.safeTransfer(to, value);\\n\\n\\t\\temit ProvidetWithdraw(msg.sender, token, to, value);\\n\\t}\\n\\n\\tfunction setToken(IERC20Upgradeable _token) external onlyOwner {\\n\\t\\t_setToken(_token);\\n\\t}\\n\\n\\tfunction _setToken(IERC20Upgradeable _token) internal {\\n\\t\\ttoken = _token;\\n\\t\\temit TokenUpdated(_token);\\n\\t}\\n\\n\\tfunction decodeSourceChainMessage(bytes memory message) public view returns (address provider, uint64 nonce, bytes32 account, ResourceData.Payload[] memory payloads) {\\n\\t\\t(provider, nonce, account, payloads) = abi.decode(message, (address, uint64, bytes32, ResourceData.Payload[]));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x9a650f969c40ec04df75e17a331e75e35b2fcb4e1b136d164cd05284a2929317\",\"license\":\"GPL-3.0-only\"},\"contracts/payment/ResourPayloadTool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol';\\n\\nimport '../libraries/ResourceData.sol';\\n\\nabstract contract ResourPayloadTool {\\n\\tusing SafeMathUpgradeable for uint256;\\n\\n\\tfunction _convertSourceChainPayloads(uint256 dstAmount, ResourceData.Payload[] memory payloads) internal pure returns (ResourceData.Payload[] memory newPayloads) {\\n\\t\\trequire(payloads.length > 0, 'ResourPayloadTool: invalid payload length');\\n\\t\\tuint256 total = totalValue(payloads);\\n\\t\\trequire(total > 0, 'ResourPayloadTool: zero values');\\n\\t\\tfor (uint256 i = 0; i < payloads.length; i++) {\\n\\t\\t\\trequire(payloads[i].values.length > 0, 'ResourPayloadTool: invalid value length');\\n\\t\\t\\tfor (uint256 j = 0; j < payloads[i].values.length; j++) {\\n\\t\\t\\t\\tpayloads[i].values[j] = payloads[i].values[j].mul(dstAmount).div(total);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn payloads;\\n\\t}\\n\\n\\tfunction totalValue(ResourceData.Payload[] memory payloads) public pure returns (uint256 value) {\\n\\t\\trequire(payloads.length > 0, 'ResourPayloadTool: invalid payloads length');\\n\\t\\tfor (uint256 i = 0; i < payloads.length; i++) {\\n\\t\\t\\tfor (uint256 j = 0; j < payloads[i].values.length; j++) {\\n\\t\\t\\t\\tvalue = value.add(payloads[i].values[j]);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x3d47b32c00baedbe7198b911baf686b320d901cf2e4472999f98418caa28ba9f\",\"license\":\"GPL-3.0-only\"},\"contracts/providers/ProvidersWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\nimport '../access/Pauser.sol';\\nimport '../interfaces/IProvidersWrapper.sol';\\n\\nabstract contract ProvidersWrapper is IProvidersWrapper, Pauser {\\n\\tIProviders public override providers;\\n\\n\\tfunction __Init_Providers(IProviders _providers) internal onlyInitializing {\\n\\t\\t_setProviders(_providers);\\n\\t}\\n\\n\\tfunction _setProviders(IProviders _providers) internal {\\n\\t\\tproviders = _providers;\\n\\t\\temit ProvidersUpdated(_providers);\\n\\t}\\n}\\n\",\"keccak256\":\"0x42a8d8694c5b5f3858788b270b57660ce7c14a1abef3e8a534fa985d78e41391\",\"license\":\"UNLICENSE\"},\"contracts/resources/ControllersWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport '../resources/interfaces/INormalResourceController.sol';\\nimport '../resources/interfaces/IIPFSStorageController.sol';\\n\\nabstract contract ControllersWrapper is OwnableUpgradeable {\\n\\n\\tINormalResourceController public buildingTimeController;\\n\\n\\tINormalResourceController public bandwidthController;\\n\\n\\tINormalResourceController public arStorageController;\\n\\n\\tIIPFSStorageController public ipfsStorageController;\\n\\n\\tevent BuildingTimeControllerUpdated(INormalResourceController _buildingTimeController);\\n\\n\\tevent BandwidthControllerUpdated(INormalResourceController _bandwidthController);\\n\\n\\tevent ARStorageControllerUpdated(INormalResourceController _arStorageController);\\n\\n\\tevent IPFSStorageControllerUpdated(IIPFSStorageController _ipfsStorageController);\\n\\n\\tfunction setBuildingTimeController(INormalResourceController _buildingTimeController) external onlyOwner {\\n\\t\\t_setBuildingTimeController(_buildingTimeController);\\n\\t}\\n\\n\\tfunction setBandwidthController(INormalResourceController _bandwidthController) external onlyOwner {\\n\\t\\t_setBandwidthController(_bandwidthController);\\n\\t}\\n\\n\\tfunction setARStorageController(INormalResourceController _arStorageController) external onlyOwner {\\n\\t\\t_setARStorageController(_arStorageController);\\n\\t}\\n\\n\\tfunction setIPFSStorageController(IIPFSStorageController _ipfsStorageController) external onlyOwner {\\n\\t\\t_setIPFSStorageController(_ipfsStorageController);\\n\\t}\\n\\n\\tfunction _setBuildingTimeController(INormalResourceController _buildingTimeController) internal {\\n\\t\\tbuildingTimeController = _buildingTimeController;\\n\\t\\temit BuildingTimeControllerUpdated(_buildingTimeController);\\n\\t}\\n\\n\\tfunction _setBandwidthController(INormalResourceController _bandwidthController) internal {\\n\\t\\tbandwidthController = _bandwidthController;\\n\\t\\temit BandwidthControllerUpdated(_bandwidthController);\\n\\t}\\n\\n\\tfunction _setARStorageController(INormalResourceController _arStorageController) internal {\\n\\t\\tarStorageController = _arStorageController;\\n\\t\\temit ARStorageControllerUpdated(_arStorageController);\\n\\t}\\n\\n\\tfunction _setIPFSStorageController(IIPFSStorageController _ipfsStorageController) internal {\\n\\t\\tipfsStorageController = _ipfsStorageController;\\n\\t\\temit IPFSStorageControllerUpdated(_ipfsStorageController);\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x940019f75ae5cd36393f33cf0f73a5c8afa6da4e5c586166ef9115c0626a49dc\",\"license\":\"GPL-3.0-only\"},\"contracts/resources/interfaces/IAdaptorWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '../interfaces/IResourceAdaptor.sol';\\nimport '../../libraries/ResourceData.sol';\\n\\ninterface IAdaptorWrapper {\\n\\tevent ResourceAdaptorUpdated(IResourceAdaptor adaptor);\\n\\n\\tevent ResourceTypeUpdated(ResourceData.ResourceType resourceType);\\n\\n\\tfunction adaptor() external view returns (IResourceAdaptor);\\n\\n\\tfunction resourceType() external view returns (ResourceData.ResourceType);\\n\\n\\tfunction price() external view returns (uint256);\\n\\n\\tfunction getValueOf(uint256 amount) external view returns (uint256);\\n\\n\\tfunction getAmountOf(uint256 value) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd34f9e364967a82a04fea655b14e3d70c214f3735737cf59f7643fbaeaa6f735\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/IIPFSStorageController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\nimport '@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol';\\nimport './IAdaptorWrapper.sol';\\n\\ninterface IIPFSStorageController is IAdaptorWrapper {\\n\\tstruct IPFSStorage {\\n\\t\\tuint256 startTime;\\n\\t\\tuint256 expiration;\\n\\t\\tuint256 amount;\\n\\t}\\n\\n\\tevent Expanded(bytes32 account, uint256 expandedStorageFee, uint256 expandedExpirationFee);\\n\\n\\tfunction expand(\\n\\t\\tbytes32 account,\\n\\t\\tuint256 expandedStorageFee,\\n\\t\\tuint256 expandedExpirationFee\\n\\t) external returns (uint256);\\n\\n\\tfunction isExpired(bytes32 account) external view returns (bool);\\n\\n\\tfunction startTime(bytes32 account) external view returns (uint256);\\n\\n\\tfunction availableExpiration(bytes32 account) external view returns (uint256);\\n\\n\\tfunction expiration(bytes32 account) external view returns (uint256);\\n\\n\\tfunction expiredAt(bytes32 account) external view returns (uint256);\\n\\n\\tfunction balanceOf(bytes32 account) external view returns (uint256);\\n\\n\\tfunction expandedFee(\\n\\t\\tbytes32 account,\\n\\t\\tuint256 expandedStorage,\\n\\t\\tuint256 expandedExpiration\\n\\t) external view returns (uint256 expandedStorageFee, uint256 expandedExpirationFee);\\n\\n\\tfunction expansions(\\n\\t\\tbytes32 account,\\n\\t\\tuint256 expandedStorageFee,\\n\\t\\tuint256 expandedExpirationFee\\n\\t) external view returns (uint256 expandedStorage, uint256 expandedExpiration);\\n}\\n\",\"keccak256\":\"0xda13c1cb10e7860d2776f95ef597f349c8b047f9f1a0ad6adde71dc2caa70a00\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/INormalResourceController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport './IAdaptorWrapper.sol';\\n\\ninterface INormalResourceController is IAdaptorWrapper {\\n\\tevent Expanded(bytes32 account, uint256 value);\\n\\n\\tfunction expand(bytes32 account, uint256 value) external returns(uint256);\\n\\n\\tfunction balanceOf(bytes32 account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x73706ccbe9c3696d385acbd5ed0e45a424421f212bf9f1b726717fee0190bb33\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/IResourceAdaptor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '../../libraries/ResourceData.sol';\\n\\ninterface IResourceAdaptor {\\n\\n\\tfunction priceAt(ResourceData.ResourceType resourceType, uint256 _indexBlock) external view returns (uint256);\\n\\n\\tfunction getValueAt(\\n\\t\\tResourceData.ResourceType resourceType,\\n\\t\\tuint256 amount,\\n\\t\\tuint256 _indexBlock\\n\\t) external view returns (uint256);\\n\\n\\tfunction getAmountAt(\\n\\t\\tResourceData.ResourceType resourceType,\\n\\t\\tuint256 value,\\n\\t\\tuint256 _indexBlock\\n\\t) external view returns (uint256);\\n\\n\\tfunction priceOf(ResourceData.ResourceType resourceType) external view returns (uint256);\\n\\n\\tfunction getValueOf(ResourceData.ResourceType resourceType, uint256 amount) external view returns (uint256);\\n\\n\\tfunction getAmountOf(ResourceData.ResourceType resourceType, uint256 value) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xf60bb837ce179f97f69cc642ef0b775cc58c952824869b89df3d29729133b738\",\"license\":\"UNLICENSE\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162005ee138038062005ee18339818101604052810190620000379190620007d0565b600060019054906101000a900460ff16620000615760008054906101000a900460ff161562000072565b620000716200018860201b60201c565b5b620000b4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ab90620008df565b60405180910390fd5b60008060019054906101000a900460ff16159050801562000105576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6200011686620001a660201b60201c565b62000127856200026c60201b60201c565b6200013884620002d260201b60201c565b62000149836200033860201b60201c565b6200015a826200039e60201b60201c565b80156200017c5760008060016101000a81548160ff0219169083151502179055505b50505050505062000b29565b6000620001a0306200040460201b620018901760201c565b15905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff16620002be576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002b59062000977565b60405180910390fd5b620002cf816200042760201b60201c565b50565b600060019054906101000a900460ff1662000324576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200031b9062000977565b60405180910390fd5b62000335816200050f60201b60201c565b50565b600060019054906101000a900460ff166200038a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003819062000977565b60405180910390fd5b6200039b816200058c60201b60201c565b50565b600060019054906101000a900460ff16620003f0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620003e79062000977565b60405180910390fd5b62000401816200060960201b60201c565b50565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b62000438816200068660201b60201c565b156200047b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620004729062000a0f565b60405180910390fd5b600160ca60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f88160405162000504919062000a42565b60405180910390a150565b8060cb60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe63288198842f0dacdcbdc3f22dcd4e473d1f3cee7e10603ae6ddc3e667c52848160405162000581919062000aca565b60405180910390a150565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fafe9b28ca24a54df8c44769c685f7b92824aae021cdfcaa4719d493571a23c4c81604051620005fe919062000a42565b60405180910390a150565b8060d060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e30816040516200067b919062000b0c565b60405180910390a150565b600060ca60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200070e82620006e1565b9050919050565b620007208162000701565b81146200072c57600080fd5b50565b600081519050620007408162000715565b92915050565b6000620007538262000701565b9050919050565b620007658162000746565b81146200077157600080fd5b50565b60008151905062000785816200075a565b92915050565b6000620007988262000701565b9050919050565b620007aa816200078b565b8114620007b657600080fd5b50565b600081519050620007ca816200079f565b92915050565b600080600080600060a08688031215620007ef57620007ee620006dc565b5b6000620007ff888289016200072f565b955050602062000812888289016200072f565b9450506040620008258882890162000774565b935050606062000838888289016200072f565b92505060806200084b88828901620007b9565b9150509295509295909350565b600082825260208201905092915050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000620008c7602e8362000858565b9150620008d48262000869565b604082019050919050565b60006020820190508181036000830152620008fa81620008b8565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b60006200095f602b8362000858565b91506200096c8262000901565b604082019050919050565b60006020820190508181036000830152620009928162000950565b9050919050565b7f5061757365723a204163636f756e7420697320616c726561647920706175736560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000620009f760218362000858565b915062000a048262000999565b604082019050919050565b6000602082019050818103600083015262000a2a81620009e8565b9050919050565b62000a3c8162000701565b82525050565b600060208201905062000a59600083018462000a31565b92915050565b6000819050919050565b600062000a8a62000a8462000a7e84620006e1565b62000a5f565b620006e1565b9050919050565b600062000a9e8262000a69565b9050919050565b600062000ab28262000a91565b9050919050565b62000ac48162000aa5565b82525050565b600060208201905062000ae1600083018462000ab9565b92915050565b600062000af48262000a91565b9050919050565b62000b068162000ae7565b82525050565b600060208201905062000b23600083018462000afb565b92915050565b6153a88062000b396000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806377ef533c1161011a578063bb371111116100ad578063e84372491161007c578063e84372491461059e578063f2fde38b146105ba578063f8401fe6146105d6578063f8f071fa146105f4578063fc0c546a1461061257610206565b8063bb37111114610501578063bd16997514610531578063d9caed1214610564578063e2cae9f51461058057610206565b80638456cb59116100e95780638456cb591461049f5780638da5cb5b146104a9578063914fd2c3146104c7578063b05f87a8146104e357610206565b806377ef533c146104075780637a7fa7531461043757806380f51c121461045357806382dc1ec41461048357610206565b80634540a85b1161019d5780635618ce2d1161016c5780635618ce2d146103895780635c975abb146103b95780636b2c0f55146103d75780636ef8d66d146103f3578063715018a6146103fd57610206565b80634540a85b146102f157806346fbf68e1461030d578063490e4fa21461033d57806349ea49e01461036d57610206565b806328ac7f2c116101d957806328ac7f2c1461027d57806329dbfc75146102ad5780633b8ccfb1146102cb5780633f4ba83a146102e757610206565b806307b18bde1461020b578063144fa6d71461022757806315e07769146102435780632413c12714610261575b600080fd5b61022560048036038101906102209190612ecd565b610630565b005b610241600480360381019061023c9190612f5d565b610763565b005b61024b6107eb565b6040516102589190612fe9565b60405180910390f35b61027b6004803603810190610276919061306e565b610811565b005b610297600480360381019061029291906130e9565b610927565b6040516102a49190613125565b60405180910390f35b6102b561093f565b6040516102c29190612fe9565b60405180910390f35b6102e560048036038101906102e091906130e9565b610965565b005b6102ef6109ed565b005b61030b6004803603810190610306919061317e565b610a3f565b005b610327600480360381019061032291906130e9565b610ac7565b60405161033491906131c6565b60405180910390f35b610357600480360381019061035291906135c0565b610b1d565b6040516103649190613125565b60405180910390f35b61038760048036038101906103829190613609565b610bcd565b005b6103a3600480360381019061039e919061365c565b610ed9565b6040516103b091906138ec565b60405180910390f35b6103c1610eed565b6040516103ce91906131c6565b60405180910390f35b6103f160048036038101906103ec91906130e9565b610f04565b005b6103fb610f8c565b005b610405610f97565b005b610421600480360381019061041c9190613969565b61101f565b60405161042e9190613125565b60405180910390f35b610451600480360381019061044c9190613a1b565b611210565b005b61046d600480360381019061046891906130e9565b611298565b60405161047a91906131c6565b60405180910390f35b61049d600480360381019061049891906130e9565b6112b8565b005b6104a7611340565b005b6104b1611392565b6040516104be9190613a57565b60405180910390f35b6104e160048036038101906104dc9190613a1b565b6113bc565b005b6104eb611444565b6040516104f89190613a93565b60405180910390f35b61051b60048036038101906105169190613aae565b61146a565b6040516105289190613125565b60405180910390f35b61054b60048036038101906105469190613bac565b61155f565b60405161055b9493929190613c13565b60405180910390f35b61057e60048036038101906105799190613609565b611591565b005b610588611678565b6040516105959190613a57565b60405180910390f35b6105b860048036038101906105b39190613a1b565b61169e565b005b6105d460048036038101906105cf91906130e9565b611726565b005b6105de61181e565b6040516105eb9190613c80565b60405180910390f35b6105fc611844565b6040516106099190612fe9565b60405180910390f35b61061a61186a565b6040516106279190613cbc565b60405180910390f35b6106386118b3565b73ffffffffffffffffffffffffffffffffffffffff16610656611392565b73ffffffffffffffffffffffffffffffffffffffff16146106ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a390613d34565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050905080610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071c90613dc6565b60405180910390fd5b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e48278383604051610756929190613e07565b60405180910390a1505050565b61076b6118b3565b73ffffffffffffffffffffffffffffffffffffffff16610789611392565b73ffffffffffffffffffffffffffffffffffffffff16146107df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d690613d34565b60405180910390fd5b6107e8816118bb565b50565b60ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff166108395760008054906101000a900460ff1615610842565b610841611936565b5b610881576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087890613ea2565b60405180910390fd5b60008060019054906101000a900460ff1615905080156108d1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6108da86611947565b6108e385611a0d565b6108ec84611a68565b6108f583611ac3565b6108fe82611b1e565b801561091f5760008060016101000a81548160ff0219169083151502179055505b505050505050565b60d16020528060005260406000206000915090505481565b60cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61096d6118b3565b73ffffffffffffffffffffffffffffffffffffffff1661098b611392565b73ffffffffffffffffffffffffffffffffffffffff16146109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d890613d34565b60405180910390fd5b6109ea81611b79565b50565b6109f633610ac7565b610a35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2c90613f0e565b60405180910390fd5b610a3d611bf4565b565b610a476118b3565b73ffffffffffffffffffffffffffffffffffffffff16610a65611392565b73ffffffffffffffffffffffffffffffffffffffff1614610abb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab290613d34565b60405180910390fd5b610ac481611c96565b50565b600060ca60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000610b27610eed565b15610b67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5e90613f7a565b60405180910390fd5b60026066541415610bad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba490613fe6565b60405180910390fd5b6002606681905550610bbe82611d11565b90506001606681905550919050565b610bd5610eed565b15610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c90613f7a565b60405180910390fd5b60026066541415610c5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5290613fe6565b60405180910390fd5b600260668190555060cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636b074a07336040518263ffffffff1660e01b8152600401610cbe9190613a57565b60206040518083038186803b158015610cd657600080fd5b505afa158015610cea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0e9190614032565b610d4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d44906140d1565b60405180910390fd5b8060d160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610dcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc690614163565b60405180910390fd5b610e218160d160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f6390919063ffffffff16565b60d160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e8f82828573ffffffffffffffffffffffffffffffffffffffff16611f799092919063ffffffff16565b7f6a5b5b630c1c43e83d8863b2f40228b9238480ce8c629132ea0862c7ce6c1b2333848484604051610ec49493929190614183565b60405180910390a16001606681905550505050565b6060610ee58383611fff565b905092915050565b6000609860009054906101000a900460ff16905090565b610f0c6118b3565b73ffffffffffffffffffffffffffffffffffffffff16610f2a611392565b73ffffffffffffffffffffffffffffffffffffffff1614610f80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7790613d34565b60405180910390fd5b610f89816121f9565b50565b610f95336121f9565b565b610f9f6118b3565b73ffffffffffffffffffffffffffffffffffffffff16610fbd611392565b73ffffffffffffffffffffffffffffffffffffffff1614611013576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100a90613d34565b60405180910390fd5b61101d6000611947565b565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a89061423a565b60405180910390fd5b6110b9610eed565b156110f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f090613f7a565b60405180910390fd5b6002606654141561113f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113690613fe6565b60405180910390fd5b600260668190555060008060008061119a87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061155f565b9350935093509350600060405180608001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018567ffffffffffffffff1681526020018481526020016111eb8b85611fff565b81525090506111f981611d11565b955050505050506001606681905550949350505050565b6112186118b3565b73ffffffffffffffffffffffffffffffffffffffff16611236611392565b73ffffffffffffffffffffffffffffffffffffffff161461128c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128390613d34565b60405180910390fd5b611295816122d3565b50565b60ca6020528060005260406000206000915054906101000a900460ff1681565b6112c06118b3565b73ffffffffffffffffffffffffffffffffffffffff166112de611392565b73ffffffffffffffffffffffffffffffffffffffff1614611334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132b90613d34565b60405180910390fd5b61133d8161234e565b50565b61134933610ac7565b611388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137f90613f0e565b60405180910390fd5b611390612429565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6113c46118b3565b73ffffffffffffffffffffffffffffffffffffffff166113e2611392565b73ffffffffffffffffffffffffffffffffffffffff1614611438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142f90613d34565b60405180910390fd5b611441816124cc565b50565b60cf60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808251116114af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a6906142cc565b60405180910390fd5b60005b82518110156115595760005b8382815181106114d1576114d06142ec565b5b60200260200101516020015151811015611545576115308483815181106114fb576114fa6142ec565b5b6020026020010151602001518281518110611519576115186142ec565b5b60200260200101518461254790919063ffffffff16565b9250808061153d9061434a565b9150506114be565b5080806115519061434a565b9150506114b2565b50919050565b600080600060608480602001905181019061157a91906145b4565b809450819550829650839750505050509193509193565b6115996118b3565b73ffffffffffffffffffffffffffffffffffffffff166115b7611392565b73ffffffffffffffffffffffffffffffffffffffff161461160d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160490613d34565b60405180910390fd5b61163882828573ffffffffffffffffffffffffffffffffffffffff16611f799092919063ffffffff16565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639883838360405161166b93929190614637565b60405180910390a1505050565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6116a66118b3565b73ffffffffffffffffffffffffffffffffffffffff166116c4611392565b73ffffffffffffffffffffffffffffffffffffffff161461171a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171190613d34565b60405180910390fd5b6117238161255d565b50565b61172e6118b3565b73ffffffffffffffffffffffffffffffffffffffff1661174c611392565b73ffffffffffffffffffffffffffffffffffffffff16146117a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179990613d34565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611812576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611809906146e0565b60405180910390fd5b61181b81611947565b50565b60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600033905090565b8060d060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e308160405161192b9190613cbc565b60405180910390a150565b600061194130611890565b15905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff16611a5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5390614772565b60405180910390fd5b611a658161234e565b50565b600060019054906101000a900460ff16611ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aae90614772565b60405180910390fd5b611ac0816125d8565b50565b600060019054906101000a900460ff16611b12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0990614772565b60405180910390fd5b611b1b81611b79565b50565b600060019054906101000a900460ff16611b6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6490614772565b60405180910390fd5b611b76816118bb565b50565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fafe9b28ca24a54df8c44769c685f7b92824aae021cdfcaa4719d493571a23c4c81604051611be99190613a57565b60405180910390a150565b611bfc610eed565b611c3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c32906147de565b60405180910390fd5b6000609860006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611c7f6118b3565b604051611c8c9190613a57565b60405180910390a1565b8060cf60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7b091d9397a2f75213edeec1728b27a9d863f0f8aafb62fce0f1154f48f110f881604051611d069190613a93565b60405180910390a150565b600060cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636b074a0783600001516040518263ffffffff1660e01b8152600401611d729190613a57565b60206040518083038186803b158015611d8a57600080fd5b505afa158015611d9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc29190614032565b611e01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611df890614870565b60405180910390fd5b611e1382604001518360600151612653565b9050611e6433308360d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166128f7909392919063ffffffff16565b611eba8160d16000856000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461254790919063ffffffff16565b60d16000846000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f699b2f7653a6bfb60eabd345a469cd1a72cf9733ed0179acb41b3d0b8d6b85833360d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684604051611f56939291906149a6565b60405180910390a1919050565b60008183611f7191906149e4565b905092915050565b611ffa8363a9059cbb60e01b8484604051602401611f98929190614a18565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612980565b505050565b60606000825111612045576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161203c90614ab3565b60405180910390fd5b60006120508361146a565b905060008111612095576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161208c90614b1f565b60405180910390fd5b60005b83518110156121ee5760008482815181106120b6576120b56142ec565b5b6020026020010151602001515111612103576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120fa90614bb1565b60405180910390fd5b60005b848281518110612119576121186142ec565b5b602002602001015160200151518110156121da5761218a8361217c88888681518110612148576121476142ec565b5b6020026020010151602001518581518110612166576121656142ec565b5b6020026020010151612a4790919063ffffffff16565b612a5d90919063ffffffff16565b85838151811061219d5761219c6142ec565b5b60200260200101516020015182815181106121bb576121ba6142ec565b5b60200260200101818152505080806121d29061434a565b915050612106565b5080806121e69061434a565b915050612098565b508291505092915050565b61220281610ac7565b612241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161223890614c1d565b60405180910390fd5b600060ca60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e816040516122c89190613a57565b60405180910390a150565b8060cd60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f100702071f8eb4f459f5f9dcf12bba9b3aeafa0eca6a018364f645558d792c37816040516123439190612fe9565b60405180910390a150565b61235781610ac7565b15612397576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161238e90614caf565b60405180910390fd5b600160ca60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f88160405161241e9190613a57565b60405180910390a150565b612431610eed565b15612471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161246890613f7a565b60405180910390fd5b6001609860006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586124b56118b3565b6040516124c29190613a57565b60405180910390a1565b8060ce60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f6a7e09ebc58179cd1c17c89209474e58d29e43b1bf78dd57f896e7be983220eb8160405161253c9190612fe9565b60405180910390a150565b600081836125559190614ccf565b905092915050565b8060cc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507feb1b948f6c63784a1d91e42dd967c49aae87b1db36d3107e9b913963ae7cd039816040516125cd9190612fe9565b60405180910390a150565b8060cb60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe63288198842f0dacdcbdc3f22dcd4e473d1f3cee7e10603ae6ddc3e667c5284816040516126489190613c80565b60405180910390a150565b600080825111612698576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161268f90614d97565b60405180910390fd5b60005b82518110156128f05760008382815181106126b9576126b86142ec565b5b60200260200101519050600160048111156126d7576126d66136e4565b5b816000015160048111156126ee576126ed6136e4565b5b141561273a5761273361272460cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168784612a73565b8461254790919063ffffffff16565b92506128dc565b6003600481111561274e5761274d6136e4565b5b81600001516004811115612765576127646136e4565b5b14156127b1576127aa61279b60ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168784612a73565b8461254790919063ffffffff16565b92506128db565b600260048111156127c5576127c46136e4565b5b816000015160048111156127dc576127db6136e4565b5b14156128285761282161281260cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168784612a73565b8461254790919063ffffffff16565b92506128da565b60048081111561283b5761283a6136e4565b5b81600001516004811115612852576128516136e4565b5b141561289e5761289761288860cf60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168784612b72565b8461254790919063ffffffff16565b92506128d9565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128d090614e29565b60405180910390fd5b5b5b5b5080806128e89061434a565b91505061269b565b5092915050565b61297a846323b872dd60e01b85858560405160240161291893929190614e49565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612980565b50505050565b60006129e2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612c929092919063ffffffff16565b9050600081511115612a425780806020019051810190612a029190614032565b612a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a3890614ef2565b60405180910390fd5b5b505050565b60008183612a559190614f12565b905092915050565b60008183612a6b9190614f9b565b905092915050565b6000600182602001515114612abd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ab49061503e565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663467aa8de848460200151600081518110612af257612af16142ec565b5b60200260200101516040518363ffffffff1660e01b8152600401612b1792919061505e565b602060405180830381600087803b158015612b3157600080fd5b505af1158015612b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b699190615087565b90509392505050565b6000600282602001515114612bbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bb390615126565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16634235fec0848460200151600081518110612bf157612bf06142ec565b5b60200260200101518560200151600181518110612c1157612c106142ec565b5b60200260200101516040518463ffffffff1660e01b8152600401612c3793929190615146565b602060405180830381600087803b158015612c5157600080fd5b505af1158015612c65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c899190615087565b90509392505050565b6060612ca18484600085612caa565b90509392505050565b606082471015612cef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ce6906151ef565b60405180910390fd5b612cf885611890565b612d37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d2e9061525b565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051612d6091906152f5565b60006040518083038185875af1925050503d8060008114612d9d576040519150601f19603f3d011682016040523d82523d6000602084013e612da2565b606091505b5091509150612db2828286612dbe565b92505050949350505050565b60608315612dce57829050612e1e565b600083511115612de15782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e159190615350565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612e6482612e39565b9050919050565b612e7481612e59565b8114612e7f57600080fd5b50565b600081359050612e9181612e6b565b92915050565b6000819050919050565b612eaa81612e97565b8114612eb557600080fd5b50565b600081359050612ec781612ea1565b92915050565b60008060408385031215612ee457612ee3612e2f565b5b6000612ef285828601612e82565b9250506020612f0385828601612eb8565b9150509250929050565b6000612f1882612e39565b9050919050565b6000612f2a82612f0d565b9050919050565b612f3a81612f1f565b8114612f4557600080fd5b50565b600081359050612f5781612f31565b92915050565b600060208284031215612f7357612f72612e2f565b5b6000612f8184828501612f48565b91505092915050565b6000819050919050565b6000612faf612faa612fa584612e39565b612f8a565b612e39565b9050919050565b6000612fc182612f94565b9050919050565b6000612fd382612fb6565b9050919050565b612fe381612fc8565b82525050565b6000602082019050612ffe6000830184612fda565b92915050565b61300d81612f0d565b811461301857600080fd5b50565b60008135905061302a81613004565b92915050565b600061303b82612f0d565b9050919050565b61304b81613030565b811461305657600080fd5b50565b60008135905061306881613042565b92915050565b600080600080600060a0868803121561308a57613089612e2f565b5b60006130988882890161301b565b95505060206130a98882890161301b565b94505060406130ba88828901613059565b93505060606130cb8882890161301b565b92505060806130dc88828901612f48565b9150509295509295909350565b6000602082840312156130ff576130fe612e2f565b5b600061310d8482850161301b565b91505092915050565b61311f81612e97565b82525050565b600060208201905061313a6000830184613116565b92915050565b600061314b82612f0d565b9050919050565b61315b81613140565b811461316657600080fd5b50565b60008135905061317881613152565b92915050565b60006020828403121561319457613193612e2f565b5b60006131a284828501613169565b91505092915050565b60008115159050919050565b6131c0816131ab565b82525050565b60006020820190506131db60008301846131b7565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61322f826131e6565b810181811067ffffffffffffffff8211171561324e5761324d6131f7565b5b80604052505050565b6000613261612e25565b905061326d8282613226565b919050565b600080fd5b600067ffffffffffffffff82169050919050565b61329481613277565b811461329f57600080fd5b50565b6000813590506132b18161328b565b92915050565b6000819050919050565b6132ca816132b7565b81146132d557600080fd5b50565b6000813590506132e7816132c1565b92915050565b600080fd5b600067ffffffffffffffff82111561330d5761330c6131f7565b5b602082029050602081019050919050565b600080fd5b6005811061333057600080fd5b50565b60008135905061334281613323565b92915050565b600067ffffffffffffffff821115613363576133626131f7565b5b602082029050602081019050919050565b600061338761338284613348565b613257565b905080838252602082019050602084028301858111156133aa576133a961331e565b5b835b818110156133d357806133bf8882612eb8565b8452602084019350506020810190506133ac565b5050509392505050565b600082601f8301126133f2576133f16132ed565b5b8135613402848260208601613374565b91505092915050565b600060408284031215613421576134206131e1565b5b61342b6040613257565b9050600061343b84828501613333565b600083015250602082013567ffffffffffffffff81111561345f5761345e613272565b5b61346b848285016133dd565b60208301525092915050565b600061348a613485846132f2565b613257565b905080838252602082019050602084028301858111156134ad576134ac61331e565b5b835b818110156134f457803567ffffffffffffffff8111156134d2576134d16132ed565b5b8086016134df898261340b565b855260208501945050506020810190506134af565b5050509392505050565b600082601f830112613513576135126132ed565b5b8135613523848260208601613477565b91505092915050565b600060808284031215613542576135416131e1565b5b61354c6080613257565b9050600061355c8482850161301b565b6000830152506020613570848285016132a2565b6020830152506040613584848285016132d8565b604083015250606082013567ffffffffffffffff8111156135a8576135a7613272565b5b6135b4848285016134fe565b60608301525092915050565b6000602082840312156135d6576135d5612e2f565b5b600082013567ffffffffffffffff8111156135f4576135f3612e34565b5b6136008482850161352c565b91505092915050565b60008060006060848603121561362257613621612e2f565b5b600061363086828701612f48565b93505060206136418682870161301b565b925050604061365286828701612eb8565b9150509250925092565b6000806040838503121561367357613672612e2f565b5b600061368185828601612eb8565b925050602083013567ffffffffffffffff8111156136a2576136a1612e34565b5b6136ae858286016134fe565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110613724576137236136e4565b5b50565b600081905061373582613713565b919050565b600061374582613727565b9050919050565b6137558161373a565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61379081612e97565b82525050565b60006137a28383613787565b60208301905092915050565b6000602082019050919050565b60006137c68261375b565b6137d08185613766565b93506137db83613777565b8060005b8381101561380c5781516137f38882613796565b97506137fe836137ae565b9250506001810190506137df565b5085935050505092915050565b6000604083016000830151613831600086018261374c565b506020830151848203602086015261384982826137bb565b9150508091505092915050565b60006138628383613819565b905092915050565b6000602082019050919050565b6000613882826136b8565b61388c81856136c3565b93508360208202850161389e856136d4565b8060005b858110156138da57848403895281516138bb8582613856565b94506138c68361386a565b925060208a019950506001810190506138a2565b50829750879550505050505092915050565b600060208201905081810360008301526139068184613877565b905092915050565b600080fd5b60008083601f840112613929576139286132ed565b5b8235905067ffffffffffffffff8111156139465761394561390e565b5b6020830191508360018202830111156139625761396161331e565b5b9250929050565b6000806000806060858703121561398357613982612e2f565b5b600061399187828801612f48565b94505060206139a287828801612eb8565b935050604085013567ffffffffffffffff8111156139c3576139c2612e34565b5b6139cf87828801613913565b925092505092959194509250565b60006139e882612f0d565b9050919050565b6139f8816139dd565b8114613a0357600080fd5b50565b600081359050613a15816139ef565b92915050565b600060208284031215613a3157613a30612e2f565b5b6000613a3f84828501613a06565b91505092915050565b613a5181612f0d565b82525050565b6000602082019050613a6c6000830184613a48565b92915050565b6000613a7d82612fb6565b9050919050565b613a8d81613a72565b82525050565b6000602082019050613aa86000830184613a84565b92915050565b600060208284031215613ac457613ac3612e2f565b5b600082013567ffffffffffffffff811115613ae257613ae1612e34565b5b613aee848285016134fe565b91505092915050565b600080fd5b600067ffffffffffffffff821115613b1757613b166131f7565b5b613b20826131e6565b9050602081019050919050565b82818337600083830152505050565b6000613b4f613b4a84613afc565b613257565b905082815260208101848484011115613b6b57613b6a613af7565b5b613b76848285613b2d565b509392505050565b600082601f830112613b9357613b926132ed565b5b8135613ba3848260208601613b3c565b91505092915050565b600060208284031215613bc257613bc1612e2f565b5b600082013567ffffffffffffffff811115613be057613bdf612e34565b5b613bec84828501613b7e565b91505092915050565b613bfe81613277565b82525050565b613c0d816132b7565b82525050565b6000608082019050613c286000830187613a48565b613c356020830186613bf5565b613c426040830185613c04565b8181036060830152613c548184613877565b905095945050505050565b6000613c6a82612fb6565b9050919050565b613c7a81613c5f565b82525050565b6000602082019050613c956000830184613c71565b92915050565b6000613ca682612fb6565b9050919050565b613cb681613c9b565b82525050565b6000602082019050613cd16000830184613cad565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613d1e602083613cd7565b9150613d2982613ce8565b602082019050919050565b60006020820190508181036000830152613d4d81613d11565b9050919050565b7f5061796d656e743a207769746864726177206e617469766520746f6b656e206660008201527f61696c6564000000000000000000000000000000000000000000000000000000602082015250565b6000613db0602583613cd7565b9150613dbb82613d54565b604082019050919050565b60006020820190508181036000830152613ddf81613da3565b9050919050565b6000613df182612fb6565b9050919050565b613e0181613de6565b82525050565b6000604082019050613e1c6000830185613df8565b613e296020830184613116565b9392505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000613e8c602e83613cd7565b9150613e9782613e30565b604082019050919050565b60006020820190508181036000830152613ebb81613e7f565b9050919050565b7f5061757365723a2043616c6c6572206973206e6f742070617573657200000000600082015250565b6000613ef8601c83613cd7565b9150613f0382613ec2565b602082019050919050565b60006020820190508181036000830152613f2781613eeb565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000613f64601083613cd7565b9150613f6f82613f2e565b602082019050919050565b60006020820190508181036000830152613f9381613f57565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000613fd0601f83613cd7565b9150613fdb82613f9a565b602082019050919050565b60006020820190508181036000830152613fff81613fc3565b9050919050565b61400f816131ab565b811461401a57600080fd5b50565b60008151905061402c81614006565b92915050565b60006020828403121561404857614047612e2f565b5b60006140568482850161401d565b91505092915050565b7f447374436861696e5061796d656e743a2063616c6c6572206973206e6f74206160008201527f2070726f76696465720000000000000000000000000000000000000000000000602082015250565b60006140bb602983613cd7565b91506140c68261405f565b604082019050919050565b600060208201905081810360008301526140ea816140ae565b9050919050565b7f447374436861696e5061796d656e743a20696e73756666696369656e7420707260008201527f6f76696465722062616c616e6365000000000000000000000000000000000000602082015250565b600061414d602e83613cd7565b9150614158826140f1565b604082019050919050565b6000602082019050818103600083015261417c81614140565b9050919050565b60006080820190506141986000830187613a48565b6141a56020830186613cad565b6141b26040830185613a48565b6141bf6060830184613116565b95945050505050565b7f4d6573736167655265636569766572577261707065723a2063616c6c6572206960008201527f73206e6f74206d65737361676520726563656976657200000000000000000000602082015250565b6000614224603683613cd7565b915061422f826141c8565b604082019050919050565b6000602082019050818103600083015261425381614217565b9050919050565b7f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f60008201527f616473206c656e67746800000000000000000000000000000000000000000000602082015250565b60006142b6602a83613cd7565b91506142c18261425a565b604082019050919050565b600060208201905081810360008301526142e5816142a9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061435582612e97565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156143885761438761431b565b5b600182019050919050565b6000815190506143a281612e6b565b92915050565b6000815190506143b78161328b565b92915050565b6000815190506143cc816132c1565b92915050565b6000815190506143e181613323565b92915050565b6000815190506143f681612ea1565b92915050565b600061440f61440a84613348565b613257565b905080838252602082019050602084028301858111156144325761443161331e565b5b835b8181101561445b578061444788826143e7565b845260208401935050602081019050614434565b5050509392505050565b600082601f83011261447a576144796132ed565b5b815161448a8482602086016143fc565b91505092915050565b6000604082840312156144a9576144a86131e1565b5b6144b36040613257565b905060006144c3848285016143d2565b600083015250602082015167ffffffffffffffff8111156144e7576144e6613272565b5b6144f384828501614465565b60208301525092915050565b600061451261450d846132f2565b613257565b905080838252602082019050602084028301858111156145355761453461331e565b5b835b8181101561457c57805167ffffffffffffffff81111561455a576145596132ed565b5b8086016145678982614493565b85526020850194505050602081019050614537565b5050509392505050565b600082601f83011261459b5761459a6132ed565b5b81516145ab8482602086016144ff565b91505092915050565b600080600080608085870312156145ce576145cd612e2f565b5b60006145dc87828801614393565b94505060206145ed878288016143a8565b93505060406145fe878288016143bd565b925050606085015167ffffffffffffffff81111561461f5761461e612e34565b5b61462b87828801614586565b91505092959194509250565b600060608201905061464c6000830186613cad565b6146596020830185613a48565b6146666040830184613116565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006146ca602683613cd7565b91506146d58261466e565b604082019050919050565b600060208201905081810360008301526146f9816146bd565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b600061475c602b83613cd7565b915061476782614700565b604082019050919050565b6000602082019050818103600083015261478b8161474f565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006147c8601483613cd7565b91506147d382614792565b602082019050919050565b600060208201905081810360008301526147f7816147bb565b9050919050565b7f447374436861696e5061796d656e743a206e6f6e6578697374656e742070726f60008201527f7669646572000000000000000000000000000000000000000000000000000000602082015250565b600061485a602583613cd7565b9150614865826147fe565b604082019050919050565b600060208201905081810360008301526148898161484d565b9050919050565b61489981612f0d565b82525050565b6148a881613277565b82525050565b6148b7816132b7565b82525050565b600082825260208201905092915050565b60006148d9826136b8565b6148e381856148bd565b9350836020820285016148f5856136d4565b8060005b8581101561493157848403895281516149128582613856565b945061491d8361386a565b925060208a019950506001810190506148f9565b50829750879550505050505092915050565b600060808301600083015161495b6000860182614890565b50602083015161496e602086018261489f565b50604083015161498160408601826148ae565b506060830151848203606086015261499982826148ce565b9150508091505092915050565b60006060820190506149bb6000830186613a48565b6149c86020830185613cad565b81810360408301526149da8184614943565b9050949350505050565b60006149ef82612e97565b91506149fa83612e97565b925082821015614a0d57614a0c61431b565b5b828203905092915050565b6000604082019050614a2d6000830185613a48565b614a3a6020830184613116565b9392505050565b7f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f60008201527f6164206c656e6774680000000000000000000000000000000000000000000000602082015250565b6000614a9d602983613cd7565b9150614aa882614a41565b604082019050919050565b60006020820190508181036000830152614acc81614a90565b9050919050565b7f5265736f75725061796c6f6164546f6f6c3a207a65726f2076616c7565730000600082015250565b6000614b09601e83613cd7565b9150614b1482614ad3565b602082019050919050565b60006020820190508181036000830152614b3881614afc565b9050919050565b7f5265736f75725061796c6f6164546f6f6c3a20696e76616c69642076616c756560008201527f206c656e67746800000000000000000000000000000000000000000000000000602082015250565b6000614b9b602783613cd7565b9150614ba682614b3f565b604082019050919050565b60006020820190508181036000830152614bca81614b8e565b9050919050565b7f5061757365723a204163636f756e74206973206e6f7420706175736572000000600082015250565b6000614c07601d83613cd7565b9150614c1282614bd1565b602082019050919050565b60006020820190508181036000830152614c3681614bfa565b9050919050565b7f5061757365723a204163636f756e7420697320616c726561647920706175736560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000614c99602183613cd7565b9150614ca482614c3d565b604082019050919050565b60006020820190508181036000830152614cc881614c8c565b9050919050565b6000614cda82612e97565b9150614ce583612e97565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115614d1a57614d1961431b565b5b828201905092915050565b7f447374436861696e5061796d656e743a20696e76616c6964207061796c6f616460008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000614d81602183613cd7565b9150614d8c82614d25565b604082019050919050565b60006020820190508181036000830152614db081614d74565b9050919050565b7f447374436861696e5061796d656e743a20756e6b6e6f776e207265736f75726360008201527f6520747970650000000000000000000000000000000000000000000000000000602082015250565b6000614e13602683613cd7565b9150614e1e82614db7565b604082019050919050565b60006020820190508181036000830152614e4281614e06565b9050919050565b6000606082019050614e5e6000830186613a48565b614e6b6020830185613a48565b614e786040830184613116565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000614edc602a83613cd7565b9150614ee782614e80565b604082019050919050565b60006020820190508181036000830152614f0b81614ecf565b9050919050565b6000614f1d82612e97565b9150614f2883612e97565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614f6157614f6061431b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000614fa682612e97565b9150614fb183612e97565b925082614fc157614fc0614f6c565b5b828204905092915050565b7f447374436861696e5061796d656e743a20696e76616c696420746f6b656e207660008201527f616c7565206c656e677468000000000000000000000000000000000000000000602082015250565b6000615028602b83613cd7565b915061503382614fcc565b604082019050919050565b600060208201905081810360008301526150578161501b565b9050919050565b60006040820190506150736000830185613c04565b6150806020830184613116565b9392505050565b60006020828403121561509d5761509c612e2f565b5b60006150ab848285016143e7565b91505092915050565b7f447374436861696e5061796d656e743a20696e76616c696420746f6b656e207660008201527f616c756500000000000000000000000000000000000000000000000000000000602082015250565b6000615110602483613cd7565b915061511b826150b4565b604082019050919050565b6000602082019050818103600083015261513f81615103565b9050919050565b600060608201905061515b6000830186613c04565b6151686020830185613116565b6151756040830184613116565b949350505050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006151d9602683613cd7565b91506151e48261517d565b604082019050919050565b60006020820190508181036000830152615208816151cc565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000615245601d83613cd7565b91506152508261520f565b602082019050919050565b6000602082019050818103600083015261527481615238565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156152af578082015181840152602081019050615294565b838111156152be576000848401525b50505050565b60006152cf8261527b565b6152d98185615286565b93506152e9818560208601615291565b80840191505092915050565b600061530182846152c4565b915081905092915050565b600081519050919050565b60006153228261530c565b61532c8185613cd7565b935061533c818560208601615291565b615345816131e6565b840191505092915050565b6000602082019050818103600083015261536a8184615317565b90509291505056fea2646970667358221220127fbb65452f30b8e6bf7dbc64afee4c6acb722f7bb8da0a521854a3a0225e7a64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102065760003560e01c806377ef533c1161011a578063bb371111116100ad578063e84372491161007c578063e84372491461059e578063f2fde38b146105ba578063f8401fe6146105d6578063f8f071fa146105f4578063fc0c546a1461061257610206565b8063bb37111114610501578063bd16997514610531578063d9caed1214610564578063e2cae9f51461058057610206565b80638456cb59116100e95780638456cb591461049f5780638da5cb5b146104a9578063914fd2c3146104c7578063b05f87a8146104e357610206565b806377ef533c146104075780637a7fa7531461043757806380f51c121461045357806382dc1ec41461048357610206565b80634540a85b1161019d5780635618ce2d1161016c5780635618ce2d146103895780635c975abb146103b95780636b2c0f55146103d75780636ef8d66d146103f3578063715018a6146103fd57610206565b80634540a85b146102f157806346fbf68e1461030d578063490e4fa21461033d57806349ea49e01461036d57610206565b806328ac7f2c116101d957806328ac7f2c1461027d57806329dbfc75146102ad5780633b8ccfb1146102cb5780633f4ba83a146102e757610206565b806307b18bde1461020b578063144fa6d71461022757806315e07769146102435780632413c12714610261575b600080fd5b61022560048036038101906102209190612ecd565b610630565b005b610241600480360381019061023c9190612f5d565b610763565b005b61024b6107eb565b6040516102589190612fe9565b60405180910390f35b61027b6004803603810190610276919061306e565b610811565b005b610297600480360381019061029291906130e9565b610927565b6040516102a49190613125565b60405180910390f35b6102b561093f565b6040516102c29190612fe9565b60405180910390f35b6102e560048036038101906102e091906130e9565b610965565b005b6102ef6109ed565b005b61030b6004803603810190610306919061317e565b610a3f565b005b610327600480360381019061032291906130e9565b610ac7565b60405161033491906131c6565b60405180910390f35b610357600480360381019061035291906135c0565b610b1d565b6040516103649190613125565b60405180910390f35b61038760048036038101906103829190613609565b610bcd565b005b6103a3600480360381019061039e919061365c565b610ed9565b6040516103b091906138ec565b60405180910390f35b6103c1610eed565b6040516103ce91906131c6565b60405180910390f35b6103f160048036038101906103ec91906130e9565b610f04565b005b6103fb610f8c565b005b610405610f97565b005b610421600480360381019061041c9190613969565b61101f565b60405161042e9190613125565b60405180910390f35b610451600480360381019061044c9190613a1b565b611210565b005b61046d600480360381019061046891906130e9565b611298565b60405161047a91906131c6565b60405180910390f35b61049d600480360381019061049891906130e9565b6112b8565b005b6104a7611340565b005b6104b1611392565b6040516104be9190613a57565b60405180910390f35b6104e160048036038101906104dc9190613a1b565b6113bc565b005b6104eb611444565b6040516104f89190613a93565b60405180910390f35b61051b60048036038101906105169190613aae565b61146a565b6040516105289190613125565b60405180910390f35b61054b60048036038101906105469190613bac565b61155f565b60405161055b9493929190613c13565b60405180910390f35b61057e60048036038101906105799190613609565b611591565b005b610588611678565b6040516105959190613a57565b60405180910390f35b6105b860048036038101906105b39190613a1b565b61169e565b005b6105d460048036038101906105cf91906130e9565b611726565b005b6105de61181e565b6040516105eb9190613c80565b60405180910390f35b6105fc611844565b6040516106099190612fe9565b60405180910390f35b61061a61186a565b6040516106279190613cbc565b60405180910390f35b6106386118b3565b73ffffffffffffffffffffffffffffffffffffffff16610656611392565b73ffffffffffffffffffffffffffffffffffffffff16146106ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a390613d34565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050905080610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071c90613dc6565b60405180910390fd5b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e48278383604051610756929190613e07565b60405180910390a1505050565b61076b6118b3565b73ffffffffffffffffffffffffffffffffffffffff16610789611392565b73ffffffffffffffffffffffffffffffffffffffff16146107df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d690613d34565b60405180910390fd5b6107e8816118bb565b50565b60ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900460ff166108395760008054906101000a900460ff1615610842565b610841611936565b5b610881576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087890613ea2565b60405180910390fd5b60008060019054906101000a900460ff1615905080156108d1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6108da86611947565b6108e385611a0d565b6108ec84611a68565b6108f583611ac3565b6108fe82611b1e565b801561091f5760008060016101000a81548160ff0219169083151502179055505b505050505050565b60d16020528060005260406000206000915090505481565b60cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61096d6118b3565b73ffffffffffffffffffffffffffffffffffffffff1661098b611392565b73ffffffffffffffffffffffffffffffffffffffff16146109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d890613d34565b60405180910390fd5b6109ea81611b79565b50565b6109f633610ac7565b610a35576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2c90613f0e565b60405180910390fd5b610a3d611bf4565b565b610a476118b3565b73ffffffffffffffffffffffffffffffffffffffff16610a65611392565b73ffffffffffffffffffffffffffffffffffffffff1614610abb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab290613d34565b60405180910390fd5b610ac481611c96565b50565b600060ca60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6000610b27610eed565b15610b67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5e90613f7a565b60405180910390fd5b60026066541415610bad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba490613fe6565b60405180910390fd5b6002606681905550610bbe82611d11565b90506001606681905550919050565b610bd5610eed565b15610c15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0c90613f7a565b60405180910390fd5b60026066541415610c5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5290613fe6565b60405180910390fd5b600260668190555060cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636b074a07336040518263ffffffff1660e01b8152600401610cbe9190613a57565b60206040518083038186803b158015610cd657600080fd5b505afa158015610cea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0e9190614032565b610d4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d44906140d1565b60405180910390fd5b8060d160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610dcf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc690614163565b60405180910390fd5b610e218160d160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611f6390919063ffffffff16565b60d160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610e8f82828573ffffffffffffffffffffffffffffffffffffffff16611f799092919063ffffffff16565b7f6a5b5b630c1c43e83d8863b2f40228b9238480ce8c629132ea0862c7ce6c1b2333848484604051610ec49493929190614183565b60405180910390a16001606681905550505050565b6060610ee58383611fff565b905092915050565b6000609860009054906101000a900460ff16905090565b610f0c6118b3565b73ffffffffffffffffffffffffffffffffffffffff16610f2a611392565b73ffffffffffffffffffffffffffffffffffffffff1614610f80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7790613d34565b60405180910390fd5b610f89816121f9565b50565b610f95336121f9565b565b610f9f6118b3565b73ffffffffffffffffffffffffffffffffffffffff16610fbd611392565b73ffffffffffffffffffffffffffffffffffffffff1614611013576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161100a90613d34565b60405180910390fd5b61101d6000611947565b565b6000606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110a89061423a565b60405180910390fd5b6110b9610eed565b156110f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110f090613f7a565b60405180910390fd5b6002606654141561113f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113690613fe6565b60405180910390fd5b600260668190555060008060008061119a87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061155f565b9350935093509350600060405180608001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018567ffffffffffffffff1681526020018481526020016111eb8b85611fff565b81525090506111f981611d11565b955050505050506001606681905550949350505050565b6112186118b3565b73ffffffffffffffffffffffffffffffffffffffff16611236611392565b73ffffffffffffffffffffffffffffffffffffffff161461128c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161128390613d34565b60405180910390fd5b611295816122d3565b50565b60ca6020528060005260406000206000915054906101000a900460ff1681565b6112c06118b3565b73ffffffffffffffffffffffffffffffffffffffff166112de611392565b73ffffffffffffffffffffffffffffffffffffffff1614611334576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161132b90613d34565b60405180910390fd5b61133d8161234e565b50565b61134933610ac7565b611388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161137f90613f0e565b60405180910390fd5b611390612429565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6113c46118b3565b73ffffffffffffffffffffffffffffffffffffffff166113e2611392565b73ffffffffffffffffffffffffffffffffffffffff1614611438576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142f90613d34565b60405180910390fd5b611441816124cc565b50565b60cf60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808251116114af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114a6906142cc565b60405180910390fd5b60005b82518110156115595760005b8382815181106114d1576114d06142ec565b5b60200260200101516020015151811015611545576115308483815181106114fb576114fa6142ec565b5b6020026020010151602001518281518110611519576115186142ec565b5b60200260200101518461254790919063ffffffff16565b9250808061153d9061434a565b9150506114be565b5080806115519061434a565b9150506114b2565b50919050565b600080600060608480602001905181019061157a91906145b4565b809450819550829650839750505050509193509193565b6115996118b3565b73ffffffffffffffffffffffffffffffffffffffff166115b7611392565b73ffffffffffffffffffffffffffffffffffffffff161461160d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161160490613d34565b60405180910390fd5b61163882828573ffffffffffffffffffffffffffffffffffffffff16611f799092919063ffffffff16565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639883838360405161166b93929190614637565b60405180910390a1505050565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6116a66118b3565b73ffffffffffffffffffffffffffffffffffffffff166116c4611392565b73ffffffffffffffffffffffffffffffffffffffff161461171a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171190613d34565b60405180910390fd5b6117238161255d565b50565b61172e6118b3565b73ffffffffffffffffffffffffffffffffffffffff1661174c611392565b73ffffffffffffffffffffffffffffffffffffffff16146117a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161179990613d34565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611812576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611809906146e0565b60405180910390fd5b61181b81611947565b50565b60cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600033905090565b8060d060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e308160405161192b9190613cbc565b60405180910390a150565b600061194130611890565b15905090565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600060019054906101000a900460ff16611a5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a5390614772565b60405180910390fd5b611a658161234e565b50565b600060019054906101000a900460ff16611ab7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aae90614772565b60405180910390fd5b611ac0816125d8565b50565b600060019054906101000a900460ff16611b12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0990614772565b60405180910390fd5b611b1b81611b79565b50565b600060019054906101000a900460ff16611b6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b6490614772565b60405180910390fd5b611b76816118bb565b50565b80606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fafe9b28ca24a54df8c44769c685f7b92824aae021cdfcaa4719d493571a23c4c81604051611be99190613a57565b60405180910390a150565b611bfc610eed565b611c3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c32906147de565b60405180910390fd5b6000609860006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611c7f6118b3565b604051611c8c9190613a57565b60405180910390a1565b8060cf60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7b091d9397a2f75213edeec1728b27a9d863f0f8aafb62fce0f1154f48f110f881604051611d069190613a93565b60405180910390a150565b600060cb60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636b074a0783600001516040518263ffffffff1660e01b8152600401611d729190613a57565b60206040518083038186803b158015611d8a57600080fd5b505afa158015611d9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dc29190614032565b611e01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611df890614870565b60405180910390fd5b611e1382604001518360600151612653565b9050611e6433308360d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166128f7909392919063ffffffff16565b611eba8160d16000856000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461254790919063ffffffff16565b60d16000846000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f699b2f7653a6bfb60eabd345a469cd1a72cf9733ed0179acb41b3d0b8d6b85833360d060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684604051611f56939291906149a6565b60405180910390a1919050565b60008183611f7191906149e4565b905092915050565b611ffa8363a9059cbb60e01b8484604051602401611f98929190614a18565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612980565b505050565b60606000825111612045576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161203c90614ab3565b60405180910390fd5b60006120508361146a565b905060008111612095576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161208c90614b1f565b60405180910390fd5b60005b83518110156121ee5760008482815181106120b6576120b56142ec565b5b6020026020010151602001515111612103576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016120fa90614bb1565b60405180910390fd5b60005b848281518110612119576121186142ec565b5b602002602001015160200151518110156121da5761218a8361217c88888681518110612148576121476142ec565b5b6020026020010151602001518581518110612166576121656142ec565b5b6020026020010151612a4790919063ffffffff16565b612a5d90919063ffffffff16565b85838151811061219d5761219c6142ec565b5b60200260200101516020015182815181106121bb576121ba6142ec565b5b60200260200101818152505080806121d29061434a565b915050612106565b5080806121e69061434a565b915050612098565b508291505092915050565b61220281610ac7565b612241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161223890614c1d565b60405180910390fd5b600060ca60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e816040516122c89190613a57565b60405180910390a150565b8060cd60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f100702071f8eb4f459f5f9dcf12bba9b3aeafa0eca6a018364f645558d792c37816040516123439190612fe9565b60405180910390a150565b61235781610ac7565b15612397576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161238e90614caf565b60405180910390fd5b600160ca60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f88160405161241e9190613a57565b60405180910390a150565b612431610eed565b15612471576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161246890613f7a565b60405180910390fd5b6001609860006101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586124b56118b3565b6040516124c29190613a57565b60405180910390a1565b8060ce60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f6a7e09ebc58179cd1c17c89209474e58d29e43b1bf78dd57f896e7be983220eb8160405161253c9190612fe9565b60405180910390a150565b600081836125559190614ccf565b905092915050565b8060cc60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507feb1b948f6c63784a1d91e42dd967c49aae87b1db36d3107e9b913963ae7cd039816040516125cd9190612fe9565b60405180910390a150565b8060cb60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fe63288198842f0dacdcbdc3f22dcd4e473d1f3cee7e10603ae6ddc3e667c5284816040516126489190613c80565b60405180910390a150565b600080825111612698576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161268f90614d97565b60405180910390fd5b60005b82518110156128f05760008382815181106126b9576126b86142ec565b5b60200260200101519050600160048111156126d7576126d66136e4565b5b816000015160048111156126ee576126ed6136e4565b5b141561273a5761273361272460cc60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168784612a73565b8461254790919063ffffffff16565b92506128dc565b6003600481111561274e5761274d6136e4565b5b81600001516004811115612765576127646136e4565b5b14156127b1576127aa61279b60ce60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168784612a73565b8461254790919063ffffffff16565b92506128db565b600260048111156127c5576127c46136e4565b5b816000015160048111156127dc576127db6136e4565b5b14156128285761282161281260cd60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168784612a73565b8461254790919063ffffffff16565b92506128da565b60048081111561283b5761283a6136e4565b5b81600001516004811115612852576128516136e4565b5b141561289e5761289761288860cf60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168784612b72565b8461254790919063ffffffff16565b92506128d9565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128d090614e29565b60405180910390fd5b5b5b5b5080806128e89061434a565b91505061269b565b5092915050565b61297a846323b872dd60e01b85858560405160240161291893929190614e49565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612980565b50505050565b60006129e2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612c929092919063ffffffff16565b9050600081511115612a425780806020019051810190612a029190614032565b612a41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a3890614ef2565b60405180910390fd5b5b505050565b60008183612a559190614f12565b905092915050565b60008183612a6b9190614f9b565b905092915050565b6000600182602001515114612abd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ab49061503e565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1663467aa8de848460200151600081518110612af257612af16142ec565b5b60200260200101516040518363ffffffff1660e01b8152600401612b1792919061505e565b602060405180830381600087803b158015612b3157600080fd5b505af1158015612b45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b699190615087565b90509392505050565b6000600282602001515114612bbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bb390615126565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff16634235fec0848460200151600081518110612bf157612bf06142ec565b5b60200260200101518560200151600181518110612c1157612c106142ec565b5b60200260200101516040518463ffffffff1660e01b8152600401612c3793929190615146565b602060405180830381600087803b158015612c5157600080fd5b505af1158015612c65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c899190615087565b90509392505050565b6060612ca18484600085612caa565b90509392505050565b606082471015612cef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ce6906151ef565b60405180910390fd5b612cf885611890565b612d37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d2e9061525b565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051612d6091906152f5565b60006040518083038185875af1925050503d8060008114612d9d576040519150601f19603f3d011682016040523d82523d6000602084013e612da2565b606091505b5091509150612db2828286612dbe565b92505050949350505050565b60608315612dce57829050612e1e565b600083511115612de15782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e159190615350565b60405180910390fd5b9392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612e6482612e39565b9050919050565b612e7481612e59565b8114612e7f57600080fd5b50565b600081359050612e9181612e6b565b92915050565b6000819050919050565b612eaa81612e97565b8114612eb557600080fd5b50565b600081359050612ec781612ea1565b92915050565b60008060408385031215612ee457612ee3612e2f565b5b6000612ef285828601612e82565b9250506020612f0385828601612eb8565b9150509250929050565b6000612f1882612e39565b9050919050565b6000612f2a82612f0d565b9050919050565b612f3a81612f1f565b8114612f4557600080fd5b50565b600081359050612f5781612f31565b92915050565b600060208284031215612f7357612f72612e2f565b5b6000612f8184828501612f48565b91505092915050565b6000819050919050565b6000612faf612faa612fa584612e39565b612f8a565b612e39565b9050919050565b6000612fc182612f94565b9050919050565b6000612fd382612fb6565b9050919050565b612fe381612fc8565b82525050565b6000602082019050612ffe6000830184612fda565b92915050565b61300d81612f0d565b811461301857600080fd5b50565b60008135905061302a81613004565b92915050565b600061303b82612f0d565b9050919050565b61304b81613030565b811461305657600080fd5b50565b60008135905061306881613042565b92915050565b600080600080600060a0868803121561308a57613089612e2f565b5b60006130988882890161301b565b95505060206130a98882890161301b565b94505060406130ba88828901613059565b93505060606130cb8882890161301b565b92505060806130dc88828901612f48565b9150509295509295909350565b6000602082840312156130ff576130fe612e2f565b5b600061310d8482850161301b565b91505092915050565b61311f81612e97565b82525050565b600060208201905061313a6000830184613116565b92915050565b600061314b82612f0d565b9050919050565b61315b81613140565b811461316657600080fd5b50565b60008135905061317881613152565b92915050565b60006020828403121561319457613193612e2f565b5b60006131a284828501613169565b91505092915050565b60008115159050919050565b6131c0816131ab565b82525050565b60006020820190506131db60008301846131b7565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61322f826131e6565b810181811067ffffffffffffffff8211171561324e5761324d6131f7565b5b80604052505050565b6000613261612e25565b905061326d8282613226565b919050565b600080fd5b600067ffffffffffffffff82169050919050565b61329481613277565b811461329f57600080fd5b50565b6000813590506132b18161328b565b92915050565b6000819050919050565b6132ca816132b7565b81146132d557600080fd5b50565b6000813590506132e7816132c1565b92915050565b600080fd5b600067ffffffffffffffff82111561330d5761330c6131f7565b5b602082029050602081019050919050565b600080fd5b6005811061333057600080fd5b50565b60008135905061334281613323565b92915050565b600067ffffffffffffffff821115613363576133626131f7565b5b602082029050602081019050919050565b600061338761338284613348565b613257565b905080838252602082019050602084028301858111156133aa576133a961331e565b5b835b818110156133d357806133bf8882612eb8565b8452602084019350506020810190506133ac565b5050509392505050565b600082601f8301126133f2576133f16132ed565b5b8135613402848260208601613374565b91505092915050565b600060408284031215613421576134206131e1565b5b61342b6040613257565b9050600061343b84828501613333565b600083015250602082013567ffffffffffffffff81111561345f5761345e613272565b5b61346b848285016133dd565b60208301525092915050565b600061348a613485846132f2565b613257565b905080838252602082019050602084028301858111156134ad576134ac61331e565b5b835b818110156134f457803567ffffffffffffffff8111156134d2576134d16132ed565b5b8086016134df898261340b565b855260208501945050506020810190506134af565b5050509392505050565b600082601f830112613513576135126132ed565b5b8135613523848260208601613477565b91505092915050565b600060808284031215613542576135416131e1565b5b61354c6080613257565b9050600061355c8482850161301b565b6000830152506020613570848285016132a2565b6020830152506040613584848285016132d8565b604083015250606082013567ffffffffffffffff8111156135a8576135a7613272565b5b6135b4848285016134fe565b60608301525092915050565b6000602082840312156135d6576135d5612e2f565b5b600082013567ffffffffffffffff8111156135f4576135f3612e34565b5b6136008482850161352c565b91505092915050565b60008060006060848603121561362257613621612e2f565b5b600061363086828701612f48565b93505060206136418682870161301b565b925050604061365286828701612eb8565b9150509250925092565b6000806040838503121561367357613672612e2f565b5b600061368185828601612eb8565b925050602083013567ffffffffffffffff8111156136a2576136a1612e34565b5b6136ae858286016134fe565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60058110613724576137236136e4565b5b50565b600081905061373582613713565b919050565b600061374582613727565b9050919050565b6137558161373a565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61379081612e97565b82525050565b60006137a28383613787565b60208301905092915050565b6000602082019050919050565b60006137c68261375b565b6137d08185613766565b93506137db83613777565b8060005b8381101561380c5781516137f38882613796565b97506137fe836137ae565b9250506001810190506137df565b5085935050505092915050565b6000604083016000830151613831600086018261374c565b506020830151848203602086015261384982826137bb565b9150508091505092915050565b60006138628383613819565b905092915050565b6000602082019050919050565b6000613882826136b8565b61388c81856136c3565b93508360208202850161389e856136d4565b8060005b858110156138da57848403895281516138bb8582613856565b94506138c68361386a565b925060208a019950506001810190506138a2565b50829750879550505050505092915050565b600060208201905081810360008301526139068184613877565b905092915050565b600080fd5b60008083601f840112613929576139286132ed565b5b8235905067ffffffffffffffff8111156139465761394561390e565b5b6020830191508360018202830111156139625761396161331e565b5b9250929050565b6000806000806060858703121561398357613982612e2f565b5b600061399187828801612f48565b94505060206139a287828801612eb8565b935050604085013567ffffffffffffffff8111156139c3576139c2612e34565b5b6139cf87828801613913565b925092505092959194509250565b60006139e882612f0d565b9050919050565b6139f8816139dd565b8114613a0357600080fd5b50565b600081359050613a15816139ef565b92915050565b600060208284031215613a3157613a30612e2f565b5b6000613a3f84828501613a06565b91505092915050565b613a5181612f0d565b82525050565b6000602082019050613a6c6000830184613a48565b92915050565b6000613a7d82612fb6565b9050919050565b613a8d81613a72565b82525050565b6000602082019050613aa86000830184613a84565b92915050565b600060208284031215613ac457613ac3612e2f565b5b600082013567ffffffffffffffff811115613ae257613ae1612e34565b5b613aee848285016134fe565b91505092915050565b600080fd5b600067ffffffffffffffff821115613b1757613b166131f7565b5b613b20826131e6565b9050602081019050919050565b82818337600083830152505050565b6000613b4f613b4a84613afc565b613257565b905082815260208101848484011115613b6b57613b6a613af7565b5b613b76848285613b2d565b509392505050565b600082601f830112613b9357613b926132ed565b5b8135613ba3848260208601613b3c565b91505092915050565b600060208284031215613bc257613bc1612e2f565b5b600082013567ffffffffffffffff811115613be057613bdf612e34565b5b613bec84828501613b7e565b91505092915050565b613bfe81613277565b82525050565b613c0d816132b7565b82525050565b6000608082019050613c286000830187613a48565b613c356020830186613bf5565b613c426040830185613c04565b8181036060830152613c548184613877565b905095945050505050565b6000613c6a82612fb6565b9050919050565b613c7a81613c5f565b82525050565b6000602082019050613c956000830184613c71565b92915050565b6000613ca682612fb6565b9050919050565b613cb681613c9b565b82525050565b6000602082019050613cd16000830184613cad565b92915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000613d1e602083613cd7565b9150613d2982613ce8565b602082019050919050565b60006020820190508181036000830152613d4d81613d11565b9050919050565b7f5061796d656e743a207769746864726177206e617469766520746f6b656e206660008201527f61696c6564000000000000000000000000000000000000000000000000000000602082015250565b6000613db0602583613cd7565b9150613dbb82613d54565b604082019050919050565b60006020820190508181036000830152613ddf81613da3565b9050919050565b6000613df182612fb6565b9050919050565b613e0181613de6565b82525050565b6000604082019050613e1c6000830185613df8565b613e296020830184613116565b9392505050565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b6000613e8c602e83613cd7565b9150613e9782613e30565b604082019050919050565b60006020820190508181036000830152613ebb81613e7f565b9050919050565b7f5061757365723a2043616c6c6572206973206e6f742070617573657200000000600082015250565b6000613ef8601c83613cd7565b9150613f0382613ec2565b602082019050919050565b60006020820190508181036000830152613f2781613eeb565b9050919050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b6000613f64601083613cd7565b9150613f6f82613f2e565b602082019050919050565b60006020820190508181036000830152613f9381613f57565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000613fd0601f83613cd7565b9150613fdb82613f9a565b602082019050919050565b60006020820190508181036000830152613fff81613fc3565b9050919050565b61400f816131ab565b811461401a57600080fd5b50565b60008151905061402c81614006565b92915050565b60006020828403121561404857614047612e2f565b5b60006140568482850161401d565b91505092915050565b7f447374436861696e5061796d656e743a2063616c6c6572206973206e6f74206160008201527f2070726f76696465720000000000000000000000000000000000000000000000602082015250565b60006140bb602983613cd7565b91506140c68261405f565b604082019050919050565b600060208201905081810360008301526140ea816140ae565b9050919050565b7f447374436861696e5061796d656e743a20696e73756666696369656e7420707260008201527f6f76696465722062616c616e6365000000000000000000000000000000000000602082015250565b600061414d602e83613cd7565b9150614158826140f1565b604082019050919050565b6000602082019050818103600083015261417c81614140565b9050919050565b60006080820190506141986000830187613a48565b6141a56020830186613cad565b6141b26040830185613a48565b6141bf6060830184613116565b95945050505050565b7f4d6573736167655265636569766572577261707065723a2063616c6c6572206960008201527f73206e6f74206d65737361676520726563656976657200000000000000000000602082015250565b6000614224603683613cd7565b915061422f826141c8565b604082019050919050565b6000602082019050818103600083015261425381614217565b9050919050565b7f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f60008201527f616473206c656e67746800000000000000000000000000000000000000000000602082015250565b60006142b6602a83613cd7565b91506142c18261425a565b604082019050919050565b600060208201905081810360008301526142e5816142a9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061435582612e97565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156143885761438761431b565b5b600182019050919050565b6000815190506143a281612e6b565b92915050565b6000815190506143b78161328b565b92915050565b6000815190506143cc816132c1565b92915050565b6000815190506143e181613323565b92915050565b6000815190506143f681612ea1565b92915050565b600061440f61440a84613348565b613257565b905080838252602082019050602084028301858111156144325761443161331e565b5b835b8181101561445b578061444788826143e7565b845260208401935050602081019050614434565b5050509392505050565b600082601f83011261447a576144796132ed565b5b815161448a8482602086016143fc565b91505092915050565b6000604082840312156144a9576144a86131e1565b5b6144b36040613257565b905060006144c3848285016143d2565b600083015250602082015167ffffffffffffffff8111156144e7576144e6613272565b5b6144f384828501614465565b60208301525092915050565b600061451261450d846132f2565b613257565b905080838252602082019050602084028301858111156145355761453461331e565b5b835b8181101561457c57805167ffffffffffffffff81111561455a576145596132ed565b5b8086016145678982614493565b85526020850194505050602081019050614537565b5050509392505050565b600082601f83011261459b5761459a6132ed565b5b81516145ab8482602086016144ff565b91505092915050565b600080600080608085870312156145ce576145cd612e2f565b5b60006145dc87828801614393565b94505060206145ed878288016143a8565b93505060406145fe878288016143bd565b925050606085015167ffffffffffffffff81111561461f5761461e612e34565b5b61462b87828801614586565b91505092959194509250565b600060608201905061464c6000830186613cad565b6146596020830185613a48565b6146666040830184613116565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006146ca602683613cd7565b91506146d58261466e565b604082019050919050565b600060208201905081810360008301526146f9816146bd565b9050919050565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b600061475c602b83613cd7565b915061476782614700565b604082019050919050565b6000602082019050818103600083015261478b8161474f565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b60006147c8601483613cd7565b91506147d382614792565b602082019050919050565b600060208201905081810360008301526147f7816147bb565b9050919050565b7f447374436861696e5061796d656e743a206e6f6e6578697374656e742070726f60008201527f7669646572000000000000000000000000000000000000000000000000000000602082015250565b600061485a602583613cd7565b9150614865826147fe565b604082019050919050565b600060208201905081810360008301526148898161484d565b9050919050565b61489981612f0d565b82525050565b6148a881613277565b82525050565b6148b7816132b7565b82525050565b600082825260208201905092915050565b60006148d9826136b8565b6148e381856148bd565b9350836020820285016148f5856136d4565b8060005b8581101561493157848403895281516149128582613856565b945061491d8361386a565b925060208a019950506001810190506148f9565b50829750879550505050505092915050565b600060808301600083015161495b6000860182614890565b50602083015161496e602086018261489f565b50604083015161498160408601826148ae565b506060830151848203606086015261499982826148ce565b9150508091505092915050565b60006060820190506149bb6000830186613a48565b6149c86020830185613cad565b81810360408301526149da8184614943565b9050949350505050565b60006149ef82612e97565b91506149fa83612e97565b925082821015614a0d57614a0c61431b565b5b828203905092915050565b6000604082019050614a2d6000830185613a48565b614a3a6020830184613116565b9392505050565b7f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f60008201527f6164206c656e6774680000000000000000000000000000000000000000000000602082015250565b6000614a9d602983613cd7565b9150614aa882614a41565b604082019050919050565b60006020820190508181036000830152614acc81614a90565b9050919050565b7f5265736f75725061796c6f6164546f6f6c3a207a65726f2076616c7565730000600082015250565b6000614b09601e83613cd7565b9150614b1482614ad3565b602082019050919050565b60006020820190508181036000830152614b3881614afc565b9050919050565b7f5265736f75725061796c6f6164546f6f6c3a20696e76616c69642076616c756560008201527f206c656e67746800000000000000000000000000000000000000000000000000602082015250565b6000614b9b602783613cd7565b9150614ba682614b3f565b604082019050919050565b60006020820190508181036000830152614bca81614b8e565b9050919050565b7f5061757365723a204163636f756e74206973206e6f7420706175736572000000600082015250565b6000614c07601d83613cd7565b9150614c1282614bd1565b602082019050919050565b60006020820190508181036000830152614c3681614bfa565b9050919050565b7f5061757365723a204163636f756e7420697320616c726561647920706175736560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000614c99602183613cd7565b9150614ca482614c3d565b604082019050919050565b60006020820190508181036000830152614cc881614c8c565b9050919050565b6000614cda82612e97565b9150614ce583612e97565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115614d1a57614d1961431b565b5b828201905092915050565b7f447374436861696e5061796d656e743a20696e76616c6964207061796c6f616460008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000614d81602183613cd7565b9150614d8c82614d25565b604082019050919050565b60006020820190508181036000830152614db081614d74565b9050919050565b7f447374436861696e5061796d656e743a20756e6b6e6f776e207265736f75726360008201527f6520747970650000000000000000000000000000000000000000000000000000602082015250565b6000614e13602683613cd7565b9150614e1e82614db7565b604082019050919050565b60006020820190508181036000830152614e4281614e06565b9050919050565b6000606082019050614e5e6000830186613a48565b614e6b6020830185613a48565b614e786040830184613116565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000614edc602a83613cd7565b9150614ee782614e80565b604082019050919050565b60006020820190508181036000830152614f0b81614ecf565b9050919050565b6000614f1d82612e97565b9150614f2883612e97565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615614f6157614f6061431b565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000614fa682612e97565b9150614fb183612e97565b925082614fc157614fc0614f6c565b5b828204905092915050565b7f447374436861696e5061796d656e743a20696e76616c696420746f6b656e207660008201527f616c7565206c656e677468000000000000000000000000000000000000000000602082015250565b6000615028602b83613cd7565b915061503382614fcc565b604082019050919050565b600060208201905081810360008301526150578161501b565b9050919050565b60006040820190506150736000830185613c04565b6150806020830184613116565b9392505050565b60006020828403121561509d5761509c612e2f565b5b60006150ab848285016143e7565b91505092915050565b7f447374436861696e5061796d656e743a20696e76616c696420746f6b656e207660008201527f616c756500000000000000000000000000000000000000000000000000000000602082015250565b6000615110602483613cd7565b915061511b826150b4565b604082019050919050565b6000602082019050818103600083015261513f81615103565b9050919050565b600060608201905061515b6000830186613c04565b6151686020830185613116565b6151756040830184613116565b949350505050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b60006151d9602683613cd7565b91506151e48261517d565b604082019050919050565b60006020820190508181036000830152615208816151cc565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000615245601d83613cd7565b91506152508261520f565b602082019050919050565b6000602082019050818103600083015261527481615238565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156152af578082015181840152602081019050615294565b838111156152be576000848401525b50505050565b60006152cf8261527b565b6152d98185615286565b93506152e9818560208601615291565b80840191505092915050565b600061530182846152c4565b915081905092915050565b600081519050919050565b60006153228261530c565b61532c8185613cd7565b935061533c818560208601615291565b615345816131e6565b840191505092915050565b6000602082019050818103600083015261536a8184615317565b90509291505056fea2646970667358221220127fbb65452f30b8e6bf7dbc64afee4c6acb722f7bb8da0a521854a3a0225e7a64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 133,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 136,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 956,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 122,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1642,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "messageReceiver",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 325,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_status",
        "offset": 0,
        "slot": "102",
        "type": "t_uint256"
      },
      {
        "astId": 369,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "__gap",
        "offset": 0,
        "slot": "103",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 221,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_paused",
        "offset": 0,
        "slot": "152",
        "type": "t_bool"
      },
      {
        "astId": 310,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "__gap",
        "offset": 0,
        "slot": "153",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1361,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "pausers",
        "offset": 0,
        "slot": "202",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2465,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "providers",
        "offset": 0,
        "slot": "203",
        "type": "t_contract(IProviders)1604"
      },
      {
        "astId": 2504,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "buildingTimeController",
        "offset": 0,
        "slot": "204",
        "type": "t_contract(INormalResourceController)2821"
      },
      {
        "astId": 2507,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "bandwidthController",
        "offset": 0,
        "slot": "205",
        "type": "t_contract(INormalResourceController)2821"
      },
      {
        "astId": 2510,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "arStorageController",
        "offset": 0,
        "slot": "206",
        "type": "t_contract(INormalResourceController)2821"
      },
      {
        "astId": 2513,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "ipfsStorageController",
        "offset": 0,
        "slot": "207",
        "type": "t_contract(IIPFSStorageController)2793"
      },
      {
        "astId": 1730,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "token",
        "offset": 0,
        "slot": "208",
        "type": "t_contract(IERC20Upgradeable)448"
      },
      {
        "astId": 1734,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "providerBalances",
        "offset": 0,
        "slot": "209",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20Upgradeable)448": {
        "encoding": "inplace",
        "label": "contract IERC20Upgradeable",
        "numberOfBytes": "20"
      },
      "t_contract(IIPFSStorageController)2793": {
        "encoding": "inplace",
        "label": "contract IIPFSStorageController",
        "numberOfBytes": "20"
      },
      "t_contract(INormalResourceController)2821": {
        "encoding": "inplace",
        "label": "contract INormalResourceController",
        "numberOfBytes": "20"
      },
      "t_contract(IProviders)1604": {
        "encoding": "inplace",
        "label": "contract IProviders",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}