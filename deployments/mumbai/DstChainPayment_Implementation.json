{
  "address": "0x17674BeDcc0EB2e71370D4DFD7B7d275b9A0E1f3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract INormalResourceController",
          "name": "_arStorageController",
          "type": "address"
        }
      ],
      "name": "ARStorageControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract INormalResourceController",
          "name": "_bandwidthController",
          "type": "address"
        }
      ],
      "name": "BandwidthControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract INormalResourceController",
          "name": "_buildingTimeController",
          "type": "address"
        }
      ],
      "name": "BuildingTimeControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IIPFSStorageController",
          "name": "_ipfsStorageController",
          "type": "address"
        }
      ],
      "name": "IPFSStorageControllerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "messageReceiver",
          "type": "address"
        }
      ],
      "name": "MessageReceiverUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "NativeWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "account",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "enum ResourceData.ResourceType",
                  "name": "resourceType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct ResourceData.Payload[]",
              "name": "payloads",
              "type": "tuple[]"
            }
          ],
          "indexed": false,
          "internalType": "struct IDstChainPayment.PaymentPayload",
          "name": "payload",
          "type": "tuple"
        }
      ],
      "name": "Paid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IProviders",
          "name": "providers",
          "type": "address"
        }
      ],
      "name": "ProvidersUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "arStorageController",
      "outputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bandwidthController",
      "outputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buildingTimeController",
      "outputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "enum ResourceData.ResourceType",
              "name": "resourceType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ResourceData.Payload[]",
          "name": "payloads",
          "type": "tuple[]"
        }
      ],
      "name": "convertSourceChainPayloads",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum ResourceData.ResourceType",
              "name": "resourceType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ResourceData.Payload[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "decodeSourceChainMessage",
      "outputs": [
        {
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "internalType": "uint64",
          "name": "nonce",
          "type": "uint64"
        },
        {
          "internalType": "bytes32",
          "name": "account",
          "type": "bytes32"
        },
        {
          "components": [
            {
              "internalType": "enum ResourceData.ResourceType",
              "name": "resourceType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ResourceData.Payload[]",
          "name": "payloads",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "pauser",
          "type": "address"
        },
        {
          "internalType": "contract IProviders",
          "name": "providers",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "messageReceiver",
          "type": "address"
        },
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ipfsStorageController",
      "outputs": [
        {
          "internalType": "contract IIPFSStorageController",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "matchResourceToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "matchTokenToResource",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ownerWithdrawERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "ownerWithdrawNative",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pausers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "provider",
              "type": "address"
            },
            {
              "internalType": "uint64",
              "name": "nonce",
              "type": "uint64"
            },
            {
              "internalType": "bytes32",
              "name": "account",
              "type": "bytes32"
            },
            {
              "components": [
                {
                  "internalType": "enum ResourceData.ResourceType",
                  "name": "resourceType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256[]",
                  "name": "values",
                  "type": "uint256[]"
                }
              ],
              "internalType": "struct ResourceData.Payload[]",
              "name": "payloads",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct IDstChainPayment.PaymentPayload",
          "name": "payload",
          "type": "tuple"
        }
      ],
      "name": "pay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "dstAmount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        }
      ],
      "name": "payFromSourceChain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "providers",
      "outputs": [
        {
          "internalType": "contract IProviders",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resourceDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "_arStorageController",
          "type": "address"
        }
      ],
      "name": "setARStorageController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "_bandwidthController",
          "type": "address"
        }
      ],
      "name": "setBandwidthController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract INormalResourceController",
          "name": "_buildingTimeController",
          "type": "address"
        }
      ],
      "name": "setBuildingTimeController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IIPFSStorageController",
          "name": "_ipfsStorageController",
          "type": "address"
        }
      ],
      "name": "setIPFSStorageController",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_messageReceiver",
          "type": "address"
        }
      ],
      "name": "setMessageReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenDecimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "enum ResourceData.ResourceType",
              "name": "resourceType",
              "type": "uint8"
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct ResourceData.Payload[]",
          "name": "payloads",
          "type": "tuple[]"
        }
      ],
      "name": "totalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x74fdfe196ac22ecd65bd7bedbf9bcbba40f919a6963463a0f52edc62b583446e",
  "receipt": {
    "to": null,
    "from": "0xF1658C608708172655A8e70a1624c29F956Ee63D",
    "contractAddress": "0x17674BeDcc0EB2e71370D4DFD7B7d275b9A0E1f3",
    "transactionIndex": 25,
    "gasUsed": "2932260",
    "logsBloom": "0x
    "blockHash": "0xd0c5fb42525f04b5a6ddacb9a56fa7db83488e98fe517f533030e1781a5ebf0b",
    "transactionHash": "0x74fdfe196ac22ecd65bd7bedbf9bcbba40f919a6963463a0f52edc62b583446e",
    "logs": [
      {
        "transactionIndex": 25,
        "blockNumber": 26430522,
        "transactionHash": "0x74fdfe196ac22ecd65bd7bedbf9bcbba40f919a6963463a0f52edc62b583446e",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000f1658c608708172655a8e70a1624c29f956ee63d",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000d0597fa83570bc00000000000000000000000000000000000000000000000029c2dea6c629289b000000000000000000000000000000000000000000000d652b3b1a04e2244d6500000000000000000000000000000000000000000000000028f285271df3b7df000000000000000000000000000000000000000000000d652c0b73848a59be21",
        "logIndex": 50,
        "blockHash": "0xd0c5fb42525f04b5a6ddacb9a56fa7db83488e98fe517f533030e1781a5ebf0b"
      }
    ],
    "blockNumber": 26430522,
    "cumulativeGasUsed": "3457260",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "36a92e36f2101c4292e0f35264c7fe51",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract INormalResourceController\",\"name\":\"_arStorageController\",\"type\":\"address\"}],\"name\":\"ARStorageControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract INormalResourceController\",\"name\":\"_bandwidthController\",\"type\":\"address\"}],\"name\":\"BandwidthControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract INormalResourceController\",\"name\":\"_buildingTimeController\",\"type\":\"address\"}],\"name\":\"BuildingTimeControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IIPFSStorageController\",\"name\":\"_ipfsStorageController\",\"type\":\"address\"}],\"name\":\"IPFSStorageControllerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"messageReceiver\",\"type\":\"address\"}],\"name\":\"MessageReceiverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"NativeWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct IDstChainPayment.PaymentPayload\",\"name\":\"payload\",\"type\":\"tuple\"}],\"name\":\"Paid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IProviders\",\"name\":\"providers\",\"type\":\"address\"}],\"name\":\"ProvidersUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arStorageController\",\"outputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bandwidthController\",\"outputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buildingTimeController\",\"outputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"name\":\"convertSourceChainPayloads\",\"outputs\":[{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"decodeSourceChainMessage\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"contract IProviders\",\"name\":\"providers\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"messageReceiver\",\"type\":\"address\"},{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsStorageController\",\"outputs\":[{\"internalType\":\"contract IIPFSStorageController\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"matchResourceToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"matchTokenToResource\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ownerWithdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"ownerWithdrawNative\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pausers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"internalType\":\"struct IDstChainPayment.PaymentPayload\",\"name\":\"payload\",\"type\":\"tuple\"}],\"name\":\"pay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dstAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"payFromSourceChain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"providers\",\"outputs\":[{\"internalType\":\"contract IProviders\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resourceDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"_arStorageController\",\"type\":\"address\"}],\"name\":\"setARStorageController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"_bandwidthController\",\"type\":\"address\"}],\"name\":\"setBandwidthController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract INormalResourceController\",\"name\":\"_buildingTimeController\",\"type\":\"address\"}],\"name\":\"setBuildingTimeController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IIPFSStorageController\",\"name\":\"_ipfsStorageController\",\"type\":\"address\"}],\"name\":\"setIPFSStorageController\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_messageReceiver\",\"type\":\"address\"}],\"name\":\"setMessageReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenDecimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ResourceData.Payload[]\",\"name\":\"payloads\",\"type\":\"tuple[]\"}],\"name\":\"totalValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Alexandas\",\"details\":\"Celer SGN source chain sender contract\",\"kind\":\"dev\",\"methods\":{\"addPauser(address)\":{\"details\":\"add a pauser for the contract\",\"params\":{\"account\":\"address\"}},\"convertSourceChainPayloads(uint256,(uint8,uint256[])[])\":{\"details\":\"convert source chain payloads\",\"params\":{\"amount\":\"amount tokens\",\"payloads\":\"payment payloads\"},\"returns\":{\"_0\":\"converted payment payloads\"}},\"decodeSourceChainMessage(bytes)\":{\"details\":\"decode source chain message\",\"params\":{\"message\":\"message bytes\"},\"returns\":{\"account\":\"user account\",\"nonce\":\"nonce\",\"payloads\":\"payment payloads\",\"provider\":\"provider address\"}},\"initialize(address,address,address,address,address)\":{\"details\":\"proxy initialize function\",\"params\":{\"messageReceiver\":\"message receiver contract address\",\"owner\":\"contract owner\",\"pauser\":\"contract pauser\",\"providers\":\"providers contract\",\"token\":\"token address\"}},\"isPauser(address)\":{\"details\":\"whether the account is the contract pauser\",\"params\":{\"account\":\"address\"},\"returns\":{\"_0\":\"whether account is a pauser\"}},\"matchResourceToToken(uint256)\":{\"details\":\"match value to token decimals\",\"params\":{\"value\":\"resource value\"},\"returns\":{\"_0\":\"token value\"}},\"matchTokenToResource(uint256)\":{\"details\":\"match token amount to resource decimals\",\"params\":{\"value\":\"token amount with resource decimals\"},\"returns\":{\"_0\":\"resource value\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerWithdrawERC20(address,address,uint256)\":{\"details\":\"withdraw token\",\"params\":{\"to\":\"receiver address\",\"token\":\"token address\",\"value\":\"token value\"}},\"ownerWithdrawNative(address,uint256)\":{\"details\":\"withdraw ETH\",\"params\":{\"to\":\"receiver address\",\"value\":\"token value\"}},\"pause()\":{\"details\":\"pause the contract\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"pay((address,uint64,bytes32,(uint8,uint256[])[]))\":{\"details\":\"pay on dst chain\",\"params\":{\"payload\":\"payment payload\"},\"returns\":{\"value\":\"payment value\"}},\"payFromSourceChain(address,uint256,bytes)\":{\"details\":\"pay from source chain only called by message receiver\",\"params\":{\"_token\":\"token address\",\"dstAmount\":\"token amount\",\"message\":\"payment payload message bytes\"}},\"removePauser(address)\":{\"details\":\"remove a pauser for the contract\",\"params\":{\"account\":\"address\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"renouncePauser()\":{\"details\":\"remove a pauser for the contract\"},\"resourceDecimals()\":{\"details\":\"return resource decimals\",\"returns\":{\"_0\":\"resource decimals\"}},\"setARStorageController(address)\":{\"details\":\"update AR storage controller contract\",\"params\":{\"_arStorageController\":\"AR storage controller contract\"}},\"setBandwidthController(address)\":{\"details\":\"update bandwidth controller contract\",\"params\":{\"_bandwidthController\":\"bandwidth controller contract\"}},\"setBuildingTimeController(address)\":{\"details\":\"update building time controller contract\",\"params\":{\"_buildingTimeController\":\"building time controller contract\"}},\"setIPFSStorageController(address)\":{\"details\":\"update ipfs storage controller contract\",\"params\":{\"_ipfsStorageController\":\"IPFS storage controller contract\"}},\"setMessageReceiver(address)\":{\"details\":\"set messageReceiver contract address\",\"params\":{\"_messageReceiver\":\"message receiver contract address\"}},\"setToken(address)\":{\"details\":\"set token address\",\"params\":{\"_token\":\"token address\"}},\"tokenDecimals()\":{\"details\":\"return token decimals\",\"returns\":{\"_0\":\"token decimals\"}},\"totalValue((uint8,uint256[])[])\":{\"details\":\"payment payload total value\",\"params\":{\"payloads\":\"payment payloads\"},\"returns\":{\"value\":\"total value\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"unpause the contract\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/payment/DstChainPayment.sol\":\"DstChainPayment\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC20/IERC20Upgradeable.sol\\\";\\n\",\"keccak256\":\"0xe73087c5001a37cf7186b3709377c7ceb01a0d38fb908723d1464cea66b4958c\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal onlyInitializing {\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal onlyInitializing {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x041af89e5e60b74e1203d5a34614c9de379726f52ecb8cf064cab78b9fdcdf9d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal onlyInitializing {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x6777f3fccb5dab95a9088ef62c41bee0198fd92e50d7c94f0e3733788af4079e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3e26a49d2fa5ef8338b8a9467c91e54f417cb07e849b1cc0f4ebc4d2a147938e\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMathUpgradeable {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\"},\"contracts/access/OwnerWithdrawable.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol';\\n\\n/// @author Alexandas\\n/// @dev Make the contract owner can withdraw token and eth\\nabstract contract OwnerWithdrawable is OwnableUpgradeable {\\n\\tusing SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n\\t/// @dev emit when token is withdrawn\\n\\t/// @param token token address\\n\\t/// @param to receiver address\\n\\t/// @param value token value\\n\\tevent Withdrawal(IERC20Upgradeable token, address to, uint256 value);\\n\\n\\t/// @dev emit when ETH is withdrawn\\n\\t/// @param to receiver address\\n\\t/// @param value token value\\n\\tevent NativeWithdrawal(address to, uint256 value);\\n\\n\\t/// @dev withdraw token\\n\\t/// @param token token address\\n\\t/// @param to receiver address\\n\\t/// @param value token value\\n\\tfunction ownerWithdrawERC20(\\n\\t\\tIERC20Upgradeable token,\\n\\t\\taddress to,\\n\\t\\tuint256 value\\n\\t) external onlyOwner {\\n\\t\\ttoken.safeTransfer(to, value);\\n\\t\\temit Withdrawal(token, to, value);\\n\\t}\\n\\n\\t/// @dev withdraw ETH\\n\\t/// @param to receiver address\\n\\t/// @param value token value\\n\\tfunction ownerWithdrawNative(address payable to, uint256 value) external onlyOwner {\\n\\t\\tbool success = to.send(value);\\n\\t\\trequire(success, 'Payment: withdraw native token failed');\\n\\t\\temit NativeWithdrawal(to, value);\\n\\t}\\n}\\n\",\"keccak256\":\"0x72fea5efb40ec63d685563e8bf1946794c47a8f96c161b437e85c34d5e508fa5\",\"license\":\"UNLICENSE\"},\"contracts/access/Pauser.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol';\\n\\n/// @author Alexandas\\n/// @dev make contract pausable\\nabstract contract Pauser is OwnableUpgradeable, PausableUpgradeable {\\n\\t/// @dev all pausers\\n\\tmapping(address => bool) public pausers;\\n\\n\\t/// @dev emit when pauser is added\\n\\t/// @param account pauser address\\n\\tevent PauserAdded(address account);\\n\\n\\t/// @dev emit when pauser is removed\\n\\t/// @param account pauser address\\n\\tevent PauserRemoved(address account);\\n\\n\\tfunction __Init_Pauser(address account) internal onlyInitializing {\\n\\t\\t_addPauser(account);\\n\\t}\\n\\n\\tmodifier onlyPauser() {\\n\\t\\trequire(isPauser(msg.sender), 'Pauser: caller is not the pauser');\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev pause the contract\\n\\tfunction pause() public onlyPauser {\\n\\t\\t_pause();\\n\\t}\\n\\n\\t/// @dev unpause the contract\\n\\tfunction unpause() public onlyPauser {\\n\\t\\t_unpause();\\n\\t}\\n\\n\\t/// @dev whether the account is the contract pauser\\n\\t/// @param account address\\n\\t/// @return whether account is a pauser\\n\\tfunction isPauser(address account) public view returns (bool) {\\n\\t\\treturn pausers[account];\\n\\t}\\n\\n\\t/// @dev add a pauser for the contract\\n\\t/// @param account address\\n\\tfunction addPauser(address account) public onlyOwner {\\n\\t\\t_addPauser(account);\\n\\t}\\n\\n\\t/// @dev remove a pauser for the contract\\n\\t/// @param account address\\n\\tfunction removePauser(address account) public onlyOwner {\\n\\t\\t_removePauser(account);\\n\\t}\\n\\n\\t/// @dev remove a pauser for the contract\\n\\tfunction renouncePauser() public {\\n\\t\\t_removePauser(msg.sender);\\n\\t}\\n\\n\\tfunction _addPauser(address account) private {\\n\\t\\trequire(!isPauser(account), 'Pauser: account is already pauser');\\n\\t\\tpausers[account] = true;\\n\\t\\temit PauserAdded(account);\\n\\t}\\n\\n\\tfunction _removePauser(address account) private {\\n\\t\\trequire(isPauser(account), 'Pauser: account is not pauser');\\n\\t\\tdelete pausers[account];\\n\\t\\temit PauserRemoved(account);\\n\\t}\\n}\\n\",\"keccak256\":\"0xf3e014f7643fa5d6b1106f7378bc0b5303de164aecb40f653631648b6606b8a0\",\"license\":\"GPL-3.0-only\"},\"contracts/interfaces/IDstChainPayment.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol';\\nimport '../libraries/ResourceData.sol';\\n\\n/// @author Alexandas\\n/// @dev DstChainPayment interface\\ninterface IDstChainPayment {\\n\\tstruct PaymentPayload {\\n\\t\\taddress provider;\\n\\t\\tuint64 nonce;\\n\\t\\tbytes32 account;\\n\\t\\tResourceData.Payload[] payloads;\\n\\t}\\n\\n\\t/// @dev emit when a user paid\\n\\t/// @param token token address\\n\\t/// @param payload payment payload\\n\\tevent Paid(IERC20Upgradeable token, PaymentPayload payload);\\n\\n\\t/// @dev pay from the source chain\\n\\t/// @param token token address\\n\\t/// @param amount token amount\\n\\t/// @param message payment payload message\\n\\tfunction payFromSourceChain(\\n\\t\\tIERC20Upgradeable token,\\n\\t\\tuint256 amount,\\n\\t\\tbytes calldata message\\n\\t) external;\\n\\n\\t/// @dev pay on the dst chain\\n\\t/// @param payload payment payload\\n\\t/// @return value token used\\n\\tfunction pay(PaymentPayload memory payload) external returns (uint256 value);\\n}\\n\",\"keccak256\":\"0xea127b5d29879f433a932a2f845ecbd827bacf81b2ee67e73eea437e9e13ec3b\",\"license\":\"UNLICENSE\"},\"contracts/interfaces/IProviders.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\n/// @author Alexandas\\n/// @dev providers interface\\ninterface IProviders {\\n\\t/// @dev emit when provider is added\\n\\t/// @param provider provider address\\n\\tevent AddProvider(address provider);\\n\\n\\t/// @dev emit when provider removed\\n\\t/// @param provider provider address\\n\\tevent RemoveProvider(address provider);\\n\\n\\t/// @dev return whether address is a provider\\n\\t/// @param provider address\\n\\tfunction isProvider(address provider) external view returns (bool);\\n\\n\\t/// @dev return whether a valid signature\\n\\t/// @param provider address\\n\\t/// @param hash message hash\\n\\t/// @param signature provider signature for message hash\\n\\t/// @return is valid signature\\n\\tfunction isValidSignature(\\n\\t\\taddress provider,\\n\\t\\tbytes32 hash,\\n\\t\\tbytes memory signature\\n\\t) external returns (bool);\\n}\\n\",\"keccak256\":\"0x41438f3e610374e6a6ac3653b14c8455cf7c3c9678b5e09cdf427d0743bdf687\",\"license\":\"UNLICENSE\"},\"contracts/interfaces/IProvidersWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '../interfaces/IProviders.sol';\\n\\n/// @author Alexandas\\n/// @dev providers wrapper interface\\ninterface IProvidersWrapper {\\n\\t/// @dev emit when providers contract updated\\n\\t/// @param providers providers contract\\n\\tevent ProvidersUpdated(IProviders providers);\\n\\n\\t/// @dev return providers contract address\\n\\tfunction providers() external view returns (IProviders);\\n}\\n\",\"keccak256\":\"0xd8f8806f95355c07323f77cf322865ca78fc7311fa1dab62c7ddb015fb34d44f\",\"license\":\"UNLICENSE\"},\"contracts/libraries/ResourceData.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\n/// @author Alexandas\\n/// @dev resource data library\\nlibrary ResourceData {\\n\\tenum ResourceType {\\n\\t\\tNull,\\n\\t\\tBuildingTime,\\n\\t\\tBandwidth,\\n\\t\\tARStorage,\\n\\t\\tIPFSStorage\\n\\t}\\n\\n\\tstruct Payload {\\n\\t\\tResourceData.ResourceType resourceType;\\n\\t\\tuint256[] values;\\n\\t}\\n}\\n\",\"keccak256\":\"0xd1ce9795c92610cd6d718894a8badc6f38aa4accdbcf716fcfe3422a945ff35b\",\"license\":\"UNLICENSE\"},\"contracts/messages/MessageReceiverWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\n\\n/// @author Alexandas\\n/// @dev dst chain message receiver wrapper\\nabstract contract MessageReceiverWrapper is OwnableUpgradeable {\\n\\t/// @dev message receiver contract address\\n\\taddress public messageReceiver;\\n\\n\\t/// @dev emit when message receiver updated\\n\\t/// @param messageReceiver message receiver contract address\\n\\tevent MessageReceiverUpdated(address messageReceiver);\\n\\n\\tmodifier onlyMessageReceiver() {\\n\\t\\trequire(msg.sender == messageReceiver, 'MessageReceiverWrapper: caller is not message receiver');\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev initialize messageReceiver contract address\\n\\t/// @param _messageReceiver message receiver contract address\\n\\tfunction __Init_Message_Receiver(address _messageReceiver) internal onlyInitializing {\\n\\t\\t_setMessageReceiver(_messageReceiver);\\n\\t}\\n\\n\\t/// @dev set messageReceiver contract address\\n\\t/// @param _messageReceiver message receiver contract address\\n\\tfunction setMessageReceiver(address _messageReceiver) external onlyOwner {\\n\\t\\t_setMessageReceiver(_messageReceiver);\\n\\t}\\n\\n\\tfunction _setMessageReceiver(address _messageReceiver) internal {\\n\\t\\tmessageReceiver = _messageReceiver;\\n\\t\\temit MessageReceiverUpdated(_messageReceiver);\\n\\t}\\n}\\n\",\"keccak256\":\"0x014839ee9ad86fcf27b789fa20b6226805798898368a793968e7bcd6603a16d3\",\"license\":\"GPL-3.0-only\"},\"contracts/payment/DstChainPayment.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol';\\nimport '../resources/ControllersWrapper.sol';\\nimport '../interfaces/IDstChainPayment.sol';\\nimport '../providers/ProvidersWrapper.sol';\\nimport '../messages/MessageReceiverWrapper.sol';\\nimport '../access/OwnerWithdrawable.sol';\\nimport '../access/Pauser.sol';\\nimport './ResourPayloadTool.sol';\\nimport './ResourcePayTokenWrapper.sol';\\n\\n/// @author Alexandas\\n/// @dev Celer SGN source chain sender contract\\ncontract DstChainPayment is\\n\\tIDstChainPayment,\\n\\tResourPayloadTool,\\n\\tResourcePayTokenWrapper,\\n\\tMessageReceiverWrapper,\\n\\tReentrancyGuardUpgradeable,\\n\\tProvidersWrapper,\\n\\tControllersWrapper,\\n\\tOwnerWithdrawable,\\n\\tPauser\\n{\\n\\tusing SafeMathUpgradeable for uint256;\\n\\tusing SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n\\tconstructor() initializer {}\\n\\n\\t/// @dev proxy initialize function\\n\\t/// @param owner contract owner\\n\\t/// @param pauser contract pauser\\n\\t/// @param providers providers contract\\n\\t/// @param messageReceiver message receiver contract address\\n\\t/// @param token token address\\n\\tfunction initialize(\\n\\t\\taddress owner,\\n\\t\\taddress pauser,\\n\\t\\tIProviders providers,\\n\\t\\taddress messageReceiver,\\n\\t\\tIERC20Upgradeable token\\n\\t) external initializer {\\n\\t\\t_transferOwnership(owner);\\n\\t\\t__Init_Pauser(pauser);\\n\\t\\t__Init_Providers(providers);\\n\\t\\t__Init_Message_Receiver(messageReceiver);\\n\\t\\t__Init_Token(token);\\n\\t}\\n\\n\\t/// @dev pay from source chain only called by message receiver\\n\\t/// @param _token token address\\n\\t/// @param dstAmount token amount\\n\\t/// @param message payment payload message bytes\\n\\tfunction payFromSourceChain(\\n\\t\\tIERC20Upgradeable _token,\\n\\t\\tuint256 dstAmount,\\n\\t\\tbytes calldata message\\n\\t) external override onlyMessageReceiver whenNotPaused nonReentrant {\\n\\t\\trequire(token == _token, 'DstChainPayment: invalid token');\\n\\t\\t(address provider, uint64 nonce, bytes32 account, ResourceData.Payload[] memory payloads) = decodeSourceChainMessage(message);\\n\\t\\tuint256 value = matchTokenToResource(dstAmount);\\n\\t\\tPaymentPayload memory payload = PaymentPayload(provider, nonce, account, _convertSourceChainPayloads(value, payloads));\\n\\t\\t_processPayloads(payload.account, payload.payloads, false);\\n\\t\\t_pay(payload.provider, dstAmount);\\n\\n\\t\\temit Paid(token, payload);\\n\\t}\\n\\n\\t/// @dev pay on dst chain\\n\\t/// @param payload payment payload\\n\\t/// @return value payment value\\n\\tfunction pay(PaymentPayload memory payload) public override whenNotPaused nonReentrant returns (uint256 value) {\\n\\t\\tvalue = _processPayloads(payload.account, payload.payloads, true);\\n\\t\\tvalue = matchResourceToToken(value);\\n\\t\\t_pay(payload.provider, value);\\n\\n\\t\\temit Paid(token, payload);\\n\\t}\\n\\n\\tfunction _pay(address provider, uint256 amount) internal returns (uint256 value) {\\n\\t\\trequire(providers.isProvider(provider), 'DstChainPayment: nonexistent provider');\\n\\t\\ttoken.safeTransferFrom(msg.sender, address(this), amount);\\n\\t}\\n\\n\\tfunction _processPayloads(\\n\\t\\tbytes32 account,\\n\\t\\tResourceData.Payload[] memory payloads,\\n\\t\\tbool withValue\\n\\t) internal returns (uint256 value) {\\n\\t\\trequire(payloads.length > 0, 'DstChainPayment: invalid payloads');\\n\\t\\tfor (uint256 i = 0; i < payloads.length; i++) {\\n\\t\\t\\tResourceData.Payload memory payload = payloads[i];\\n\\t\\t\\tif (payload.resourceType == ResourceData.ResourceType.BuildingTime) {\\n\\t\\t\\t\\trequire(payload.values.length == 1, 'DstChainPayment: invalid value length for BuildingTime');\\n\\t\\t\\t\\tbuildingTimeController.expand(account, payload.values[0]);\\n\\t\\t\\t} else if (payload.resourceType == ResourceData.ResourceType.ARStorage) {\\n\\t\\t\\t\\trequire(payload.values.length == 1, 'DstChainPayment: invalid value length for ARStorage');\\n\\t\\t\\t\\tarStorageController.expand(account, payload.values[0]);\\n\\t\\t\\t} else if (payload.resourceType == ResourceData.ResourceType.Bandwidth) {\\n\\t\\t\\t\\trequire(payload.values.length == 1, 'DstChainPayment: invalid value length for Bandwidth');\\n\\t\\t\\t\\tbandwidthController.expand(account, payload.values[0]);\\n\\t\\t\\t} else if (payload.resourceType == ResourceData.ResourceType.IPFSStorage) {\\n\\t\\t\\t\\trequire(payload.values.length == 2, 'DstChainPayment: invalid value length for IPFSStorage');\\n\\t\\t\\t\\tipfsStorageController.expand(account, payload.values[0], payload.values[1]);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\trevert('DstChainPayment: unknown resource type');\\n\\t\\t\\t}\\n\\t\\t\\tif (withValue) {\\n\\t\\t\\t\\tfor (uint256 j = 0; j < payload.values.length; j++) {\\n\\t\\t\\t\\t\\tvalue = value.add(payload.values[j]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t/// @dev set token address\\n\\t/// @param _token token address\\n\\tfunction setToken(IERC20Upgradeable _token) external onlyOwner {\\n\\t\\t_setToken(_token);\\n\\t}\\n\\n\\t/// @dev convert source chain payloads\\n\\t/// @param amount amount tokens\\n\\t/// @param payloads payment payloads\\n\\t/// @return converted payment payloads\\n\\tfunction convertSourceChainPayloads(uint256 amount, ResourceData.Payload[] memory payloads) public view returns (ResourceData.Payload[] memory) {\\n\\t\\treturn _convertSourceChainPayloads(amount, payloads);\\n\\t}\\n\\n\\t/// @dev decode source chain message\\n\\t/// @param message message bytes\\n\\t/// @return provider provider address\\n\\t/// @return nonce nonce\\n\\t/// @return account user account\\n\\t/// @return payloads payment payloads\\n\\tfunction decodeSourceChainMessage(bytes memory message)\\n\\t\\tpublic\\n\\t\\tview\\n\\t\\treturns (\\n\\t\\t\\taddress provider,\\n\\t\\t\\tuint64 nonce,\\n\\t\\t\\tbytes32 account,\\n\\t\\t\\tResourceData.Payload[] memory payloads\\n\\t\\t)\\n\\t{\\n\\t\\t(provider, nonce, account, payloads) = abi.decode(message, (address, uint64, bytes32, ResourceData.Payload[]));\\n\\t}\\n}\\n\",\"keccak256\":\"0x585646a11111fe15ae012d44f7c502644af9a2946abf43d0afe27ee9b0a62d30\",\"license\":\"GPL-3.0-only\"},\"contracts/payment/ResourPayloadTool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol';\\nimport '../libraries/ResourceData.sol';\\n\\n/// @author Alexandas\\n/// @dev resource payload tool contract\\nabstract contract ResourPayloadTool {\\n\\tusing SafeMathUpgradeable for uint256;\\n\\n\\t/// @dev convert source chain payment payload into dst chain payment payload\\n\\t/// @param dstAmount token amount\\n\\t/// @param payloads source chain payment payload\\n\\t/// @return newPayloads dst chain payment payload\\n\\tfunction _convertSourceChainPayloads(uint256 dstAmount, ResourceData.Payload[] memory payloads)\\n\\t\\tinternal\\n\\t\\tpure\\n\\t\\treturns (ResourceData.Payload[] memory newPayloads)\\n\\t{\\n\\t\\trequire(payloads.length > 0, 'ResourPayloadTool: invalid payload length');\\n\\t\\tuint256 total = totalValue(payloads);\\n\\t\\trequire(total > 0, 'ResourPayloadTool: zero total value');\\n\\t\\tfor (uint256 i = 0; i < payloads.length; i++) {\\n\\t\\t\\trequire(payloads[i].values.length > 0, 'ResourPayloadTool: invalid value length');\\n\\t\\t\\tfor (uint256 j = 0; j < payloads[i].values.length; j++) {\\n\\t\\t\\t\\tpayloads[i].values[j] = payloads[i].values[j].mul(dstAmount).div(total);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn payloads;\\n\\t}\\n\\n\\t/// @dev payment payload total value\\n\\t/// @param payloads payment payloads\\n\\t/// @return value total value\\n\\tfunction totalValue(ResourceData.Payload[] memory payloads) public pure returns (uint256 value) {\\n\\t\\trequire(payloads.length > 0, 'ResourPayloadTool: invalid payloads length');\\n\\t\\tfor (uint256 i = 0; i < payloads.length; i++) {\\n\\t\\t\\tfor (uint256 j = 0; j < payloads[i].values.length; j++) {\\n\\t\\t\\t\\tvalue = value.add(payloads[i].values[j]);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n\",\"keccak256\":\"0xe8a09253dd1dfc5004b8f35a1608469b0b8a76ae42210cdb767debdbfce75aa7\",\"license\":\"GPL-3.0-only\"},\"contracts/payment/ResourcePayTokenWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\nimport '@openzeppelin/contracts-upgradeable/interfaces/IERC20Upgradeable.sol';\\nimport '@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol';\\n\\n/// @author Alexandas\\n/// @dev token wrapper contract\\nabstract contract ResourcePayTokenWrapper is Initializable {\\n\\tusing SafeMathUpgradeable for uint256;\\n\\n\\t/// @dev token address\\n\\tIERC20Upgradeable public token;\\n\\n\\t/// @dev emit when token updated\\n\\t/// @param token token address\\n\\tevent TokenUpdated(IERC20Upgradeable token);\\n\\n\\t/// @dev initialize token\\n\\t/// @param _token token address\\n\\tfunction __Init_Token(IERC20Upgradeable _token) internal onlyInitializing {\\n\\t\\t_setToken(_token);\\n\\t}\\n\\n\\tfunction _setToken(IERC20Upgradeable _token) internal {\\n\\t\\trequire(address(_token) != address(0), 'ResourcePayTokenWrapper: zero address');\\n\\t\\ttoken = _token;\\n\\t\\temit TokenUpdated(token);\\n\\t}\\n\\n\\t/// @dev match token amount to resource decimals\\n\\t/// @param value token amount with resource decimals\\n\\t/// @return resource value\\n\\tfunction matchTokenToResource(uint256 value) public view returns (uint256) {\\n\\t\\tuint256 _tokenDecimals = tokenDecimals();\\n\\t\\tuint256 _resourceDecimals = resourceDecimals();\\n\\t\\tif (_tokenDecimals <= _resourceDecimals) {\\n\\t\\t\\treturn value.mul(10**(_resourceDecimals.sub(_tokenDecimals)));\\n\\t\\t}\\n\\t\\treturn value.div(10**(_tokenDecimals.sub(_resourceDecimals)));\\n\\t}\\n\\n\\t/// @dev match value to token decimals\\n\\t/// @param value resource value\\n\\t/// @return token value\\n\\tfunction matchResourceToToken(uint256 value) public view returns (uint256) {\\n\\t\\tuint256 _tokenDecimals = tokenDecimals();\\n\\t\\tuint256 _resourceDecimals = resourceDecimals();\\n\\t\\tif (_tokenDecimals <= _resourceDecimals) {\\n\\t\\t\\treturn value.div(10**(_resourceDecimals.sub(_tokenDecimals)));\\n\\t\\t}\\n\\t\\treturn value.mul(10**(_tokenDecimals.sub(_resourceDecimals)));\\n\\t}\\n\\n\\t/// @dev return resource decimals\\n\\t/// @return resource decimals\\n\\tfunction resourceDecimals() public view returns (uint256) {\\n\\t\\treturn 18;\\n\\t}\\n\\n\\t/// @dev return token decimals\\n\\t/// @return token decimals\\n\\tfunction tokenDecimals() public view returns (uint256) {\\n\\t\\t// keccak256(bytes4('decimals()'))\\n\\t\\t(bool success, bytes memory data) = address(token).staticcall(hex'313ce567');\\n\\t\\trequire(success, 'ResourcePayTokenWrapper: invalid token');\\n\\t\\treturn abi.decode(data, (uint256));\\n\\t}\\n}\\n\",\"keccak256\":\"0x5e32fd1668dea621e75c3cda6bc8c120dcc526fffe68ed2b2b2151ce7ac61a4a\",\"license\":\"UNLICENSE\"},\"contracts/providers/ProvidersWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\nimport '@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol';\\nimport '../interfaces/IProvidersWrapper.sol';\\n\\n/// @author Alexandas\\n/// @dev providers wrapper contract\\nabstract contract ProvidersWrapper is IProvidersWrapper, Initializable {\\n\\t/// @dev providers contract address\\n\\tIProviders public override providers;\\n\\n\\t/// @dev initialize providers contract\\n\\t/// @param _providers providers contract address\\n\\tfunction __Init_Providers(IProviders _providers) internal onlyInitializing {\\n\\t\\t_setProviders(_providers);\\n\\t}\\n\\n\\tfunction _setProviders(IProviders _providers) internal {\\n\\t\\tproviders = _providers;\\n\\t\\temit ProvidersUpdated(_providers);\\n\\t}\\n}\\n\",\"keccak256\":\"0xcb18f1276cfa2c7d9eaf9764fabacdc39df2823de77342acfec0aa8732062863\",\"license\":\"UNLICENSE\"},\"contracts/resources/ControllersWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\nimport '../resources/interfaces/INormalResourceController.sol';\\nimport '../resources/interfaces/IIPFSStorageController.sol';\\n\\n/// @author Alexandas\\n/// @dev all resource controller wrapper contract\\nabstract contract ControllersWrapper is OwnableUpgradeable {\\n\\t/// @dev return building time controller\\n\\tINormalResourceController public buildingTimeController;\\n\\n\\t/// @dev return bandwidth controller\\n\\tINormalResourceController public bandwidthController;\\n\\n\\t/// @dev return AR storage controller\\n\\tINormalResourceController public arStorageController;\\n\\n\\t/// @dev return ipfs storage controller\\n\\tIIPFSStorageController public ipfsStorageController;\\n\\n\\t/// @dev emit when building time controller updated\\n\\t/// @param _buildingTimeController building time controller contract\\n\\tevent BuildingTimeControllerUpdated(INormalResourceController _buildingTimeController);\\n\\n\\t/// @dev emit when bandwidth controller updated\\n\\t/// @param _bandwidthController bandwidth controller contract\\n\\tevent BandwidthControllerUpdated(INormalResourceController _bandwidthController);\\n\\n\\t/// @dev emit when AR storage controller updated\\n\\t/// @param _arStorageController AR storage controller contract\\n\\tevent ARStorageControllerUpdated(INormalResourceController _arStorageController);\\n\\n\\t/// @dev emit when ipfs storage controller updated\\n\\t/// @param _ipfsStorageController IPFS storage controller contract\\n\\tevent IPFSStorageControllerUpdated(IIPFSStorageController _ipfsStorageController);\\n\\n\\t/// @dev update building time controller contract\\n\\t/// @param _buildingTimeController building time controller contract\\n\\tfunction setBuildingTimeController(INormalResourceController _buildingTimeController) external onlyOwner {\\n\\t\\t_setBuildingTimeController(_buildingTimeController);\\n\\t}\\n\\n\\t/// @dev update bandwidth controller contract\\n\\t/// @param _bandwidthController bandwidth controller contract\\n\\tfunction setBandwidthController(INormalResourceController _bandwidthController) external onlyOwner {\\n\\t\\t_setBandwidthController(_bandwidthController);\\n\\t}\\n\\n\\t/// @dev update AR storage controller contract\\n\\t/// @param _arStorageController AR storage controller contract\\n\\tfunction setARStorageController(INormalResourceController _arStorageController) external onlyOwner {\\n\\t\\t_setARStorageController(_arStorageController);\\n\\t}\\n\\n\\t/// @dev update ipfs storage controller contract\\n\\t/// @param _ipfsStorageController IPFS storage controller contract\\n\\tfunction setIPFSStorageController(IIPFSStorageController _ipfsStorageController) external onlyOwner {\\n\\t\\t_setIPFSStorageController(_ipfsStorageController);\\n\\t}\\n\\n\\tfunction _setBuildingTimeController(INormalResourceController _buildingTimeController) internal {\\n\\t\\tbuildingTimeController = _buildingTimeController;\\n\\t\\temit BuildingTimeControllerUpdated(_buildingTimeController);\\n\\t}\\n\\n\\tfunction _setBandwidthController(INormalResourceController _bandwidthController) internal {\\n\\t\\tbandwidthController = _bandwidthController;\\n\\t\\temit BandwidthControllerUpdated(_bandwidthController);\\n\\t}\\n\\n\\tfunction _setARStorageController(INormalResourceController _arStorageController) internal {\\n\\t\\tarStorageController = _arStorageController;\\n\\t\\temit ARStorageControllerUpdated(_arStorageController);\\n\\t}\\n\\n\\tfunction _setIPFSStorageController(IIPFSStorageController _ipfsStorageController) internal {\\n\\t\\tipfsStorageController = _ipfsStorageController;\\n\\t\\temit IPFSStorageControllerUpdated(_ipfsStorageController);\\n\\t}\\n}\\n\",\"keccak256\":\"0x01a1f75a468b05b279da7b4e0f873de30062f9142f4dcec7ab0ca08b3fb4fb5c\",\"license\":\"GPL-3.0-only\"},\"contracts/resources/interfaces/IAdaptorWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '../interfaces/IResourceAdaptor.sol';\\nimport '../../libraries/ResourceData.sol';\\n\\n/// @author Alexandas\\n/// @dev resource adaptor interface\\ninterface IAdaptorWrapper {\\n\\t/// @dev emit when resource adaptor updated\\n\\t/// @param adaptor resource adaptor contract address\\n\\tevent ResourceAdaptorUpdated(IResourceAdaptor adaptor);\\n\\n\\t/// @dev emit when resource type updated\\n\\t/// @param resourceType resource type\\n\\tevent ResourceTypeUpdated(ResourceData.ResourceType resourceType);\\n\\n\\t/// @dev return resource adaptor contract address\\n\\tfunction adaptor() external view returns (IResourceAdaptor);\\n\\n\\t/// @dev return resource type\\n\\tfunction resourceType() external view returns (ResourceData.ResourceType);\\n\\n\\t/// @dev return resource price\\n\\tfunction price() external view returns (uint256);\\n\\n\\t/// @dev calculate resource value for amount\\n\\tfunction getValueOf(uint256 amount) external view returns (uint256);\\n\\n\\t/// @dev calculate resource amount for value\\n\\tfunction getAmountOf(uint256 value) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xca63e7b5b13af756b52c690e80a68cf983338550f0aa1b60fbbc6882bec69eb9\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/IIPFSStorageController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\nimport '@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol';\\nimport './IAdaptorWrapper.sol';\\n\\n/// @author Alexandas\\n/// @dev IPFS storage controller interface\\ninterface IIPFSStorageController is IAdaptorWrapper {\\n\\tstruct IPFSStorage {\\n\\t\\tuint256 startTime;\\n\\t\\tuint256 expiration;\\n\\t\\tuint256 amount;\\n\\t}\\n\\n\\t/// @dev emit when ipfs resource expanded\\n\\t/// @param account user account\\n\\t/// @param expandedStorageFee storage fee\\n\\t/// @param expandedExpirationFee expiration fee\\n\\tevent Expanded(bytes32 account, uint256 expandedStorageFee, uint256 expandedExpirationFee);\\n\\n\\t/// @dev expand ipfs resource\\n\\t/// @param account user account\\n\\t/// @param expandedStorageFee storage fee\\n\\t/// @param expandedExpirationFee expiration fee\\n\\tfunction expand(\\n\\t\\tbytes32 account,\\n\\t\\tuint256 expandedStorageFee,\\n\\t\\tuint256 expandedExpirationFee\\n\\t) external;\\n\\n\\t/// @dev return whether the account is expired\\n\\t/// @param account user account\\n\\t/// @return whether the account is expired\\n\\tfunction isExpired(bytes32 account) external view returns (bool);\\n\\n\\t/// @dev ipfs resource start time\\n\\t/// @param account user account\\n\\t/// @return start time for ipfs resource\\n\\tfunction startTime(bytes32 account) external view returns (uint256);\\n\\n\\t/// @dev return available expiration time for the account\\n\\t/// @param account user account\\n\\t/// @return available expiration time for the account\\n\\tfunction availableExpiration(bytes32 account) external view returns (uint256);\\n\\n\\t/// @dev return total expiration time for the account\\n\\t/// @param account user account\\n\\t/// @return total expiration time for the account\\n\\tfunction expiration(bytes32 account) external view returns (uint256);\\n\\n\\t/// @dev return when the account will expire\\n\\t/// @param account user account\\n\\t/// @return when the account will expire\\n\\tfunction expiredAt(bytes32 account) external view returns (uint256);\\n\\n\\t/// @dev return ipfs storage amount for the account\\n\\t/// @param account user account\\n\\t/// @return ipfs storage amount for the account\\n\\tfunction balanceOf(bytes32 account) external view returns (uint256);\\n\\n\\t/// @dev calculate fee for storage and expiration\\n\\t/// @param account user account\\n\\t/// @param expandedStorage storage amount\\n\\t/// @param expandedExpiration  expiration(in seconds)\\n\\t/// @return expandedStorageFee storage fee\\n\\t/// @return expandedExpirationFee expiration fee\\n\\tfunction expandedFee(\\n\\t\\tbytes32 account,\\n\\t\\tuint256 expandedStorage,\\n\\t\\tuint256 expandedExpiration\\n\\t) external view returns (uint256 expandedStorageFee, uint256 expandedExpirationFee);\\n\\n\\t/// @dev calculate fee for storage and expiration\\n\\t/// @param account user account\\n\\t/// @param expandedStorageFee storage fee\\n\\t/// @param expandedExpirationFee expiration fee\\n\\t/// @return expandedStorage storage amount\\n\\t/// @return expandedExpiration expiration(in seconds)\\n\\tfunction expansions(\\n\\t\\tbytes32 account,\\n\\t\\tuint256 expandedStorageFee,\\n\\t\\tuint256 expandedExpirationFee\\n\\t) external view returns (uint256 expandedStorage, uint256 expandedExpiration);\\n}\\n\",\"keccak256\":\"0xc55b6dc4952ce6cbd43029b6fe6a66eefb885ab0d168ba6049ed4f4a4b3e2678\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/INormalResourceController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport './IAdaptorWrapper.sol';\\n\\n/// @author Alexandas\\n/// @dev normal resource controller interface\\ninterface INormalResourceController is IAdaptorWrapper {\\n\\t/// @dev emit when resource expanded\\n\\t/// @param account user account\\n\\t/// @param value token value for resource decimals\\n\\tevent Expanded(bytes32 account, uint256 value);\\n\\n\\t/// @dev expand user's normal resource balance\\n\\t/// @param account user account\\n\\t/// @param value token value in resource decimals(18)\\n\\tfunction expand(bytes32 account, uint256 value) external;\\n\\n\\t/// @dev resource balance\\n\\t/// @param account user account\\n\\t/// @return balance of the account\\n\\tfunction balanceOf(bytes32 account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x69a82a53816f3b0862b6f982ea6ecb575ce7ba42216c2723bbe3792d8b745aff\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/IResourceAdaptor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '../../libraries/ResourceData.sol';\\n\\n/// @author Alexandas\\n/// @dev resource adpator interface\\ninterface IResourceAdaptor {\\n\\tstruct PriceAdaptor {\\n\\t\\tResourceData.ResourceType resourceType;\\n\\t\\tuint256 price;\\n\\t}\\n\\n\\t/// @dev emit when price updated\\n\\t/// @param adaptors price adaptors\\n\\tevent PriceAdaptorsUpdated(PriceAdaptor[] adaptors);\\n\\n\\t/// @dev get price for resource at a specific block\\n\\t/// @param resourceType resource type\\n\\t/// @param _indexBlock block number\\n\\t/// @return price for resource at a specific block\\n\\tfunction priceAt(ResourceData.ResourceType resourceType, uint256 _indexBlock) external view returns (uint256);\\n\\n\\t/// @dev get value for `amount` resource at a specific block\\n\\t/// @param resourceType resource type\\n\\t/// @param amount resource amount\\n\\t/// @param _indexBlock block number\\n\\t/// @return token value in resource decimals(18)\\n\\tfunction getValueAt(\\n\\t\\tResourceData.ResourceType resourceType,\\n\\t\\tuint256 amount,\\n\\t\\tuint256 _indexBlock\\n\\t) external view returns (uint256);\\n\\n\\t/// @dev get amount resource with value at a specific block\\n\\t/// @param resourceType resource type\\n\\t/// @param value token value\\n\\t/// @param _indexBlock block numer\\n\\t/// @return resource amount\\n\\tfunction getAmountAt(\\n\\t\\tResourceData.ResourceType resourceType,\\n\\t\\tuint256 value,\\n\\t\\tuint256 _indexBlock\\n\\t) external view returns (uint256);\\n\\n\\t/// @dev return resource price\\n\\t/// @param resourceType resource type\\n\\t/// @return resource price\\n\\tfunction priceOf(ResourceData.ResourceType resourceType) external view returns (uint256);\\n\\n\\t/// @dev return value of amount resource\\n\\t/// @param resourceType resource type\\n\\t/// @param amount resource amount\\n\\t/// @return token value in resource decimals(18)\\n\\tfunction getValueOf(ResourceData.ResourceType resourceType, uint256 amount) external view returns (uint256);\\n\\n\\t/// @dev return resource amount with value\\n\\t/// @param resourceType resource type\\n\\t/// @param value token value in resource decimals(18)\\n\\t/// @return resource amount\\n\\tfunction getAmountOf(ResourceData.ResourceType resourceType, uint256 value) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xe7ab80ce01c39a5e059cbfb689ace99d515f400d69236f6086893cd3d0cb0b94\",\"license\":\"UNLICENSE\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50600054610100900460ff166200002f5760005460ff161562000039565b620000396200009e565b620000615760405162461bcd60e51b81526004016200005890620000cb565b60405180910390fd5b600054610100900460ff1615801562000084576000805461ffff19166101011790555b801562000097576000805461ff00191690555b5062000124565b6000620000b630620000bc60201b62000e591760201c565b15905090565b6001600160a01b03163b151590565b602080825281016200011e81602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b92915050565b61339780620001346000396000f3fe608060405234801561001057600080fd5b506004361061021c5760003560e01c80637a7fa75311610125578063bd169975116100ad578063f2fde38b1161007c578063f2fde38b14610490578063f6745296146104a3578063f8401fe6146104b6578063f8f071fa146104c9578063fc0c546a146104dc57600080fd5b8063bd16997514610434578063e2cae9f514610457578063e84372491461046a578063f12973d31461047d57600080fd5b80638da5cb5b116100f45780638da5cb5b146103ce578063914fd2c3146103e857806393563a95146103fb578063b05f87a81461040e578063bb3711111461042157600080fd5b80637a7fa7531461037d57806380f51c121461039057806382dc1ec4146103b35780638456cb59146103c657600080fd5b8063490e4fa2116101a8578063699256f411610177578063699256f4146103345780636b2c0f55146103475780636ef8d66d1461035a578063715018a61461036257806377ef533c1461036a57600080fd5b8063490e4fa2146102e85780635618ce2d146102fb5780635c975abb1461031b57806368b869541461032d57600080fd5b80633b8ccfb1116101ef5780633b8ccfb1146102855780633b97e856146102985780633f4ba83a146102ad5780634540a85b146102b557806346fbf68e146102c857600080fd5b8063144fa6d7146102215780631459457a1461023657806315e077691461024957806329dbfc7514610272575b600080fd5b61023461022f366004611b7d565b6104f5565b005b610234610244366004611bb2565b610534565b609b5461025c906001600160a01b031681565b6040516102699190611c44565b60405180910390f35b60995461025c906001600160a01b031681565b610234610293366004611c52565b6105d8565b6102a061060b565b6040516102699190611c79565b6102346106b7565b6102346102c3366004611b7d565b6106e6565b6102db6102d6366004611c52565b610719565b6040516102699190611c8f565b6102a06102f6366004611f66565b610737565b61030e610309366004611fa0565b610816565b604051610269919061213f565b609c54600160a01b900460ff166102db565b60126102a0565b610234610342366004612150565b61082b565b610234610355366004611c52565b6108d9565b61023461090c565b610234610915565b6102346103783660046121d4565b610949565b61023461038b366004611b7d565b610b13565b6102db61039e366004611c52565b60ce6020526000908152604090205460ff1681565b6102346103c1366004611c52565b610b46565b610234610b79565b6033546001600160a01b03165b604051610269919061224a565b6102346103f6366004611b7d565b610ba6565b610234610409366004612258565b610bd9565b609c5461025c906001600160a01b031681565b6102a061042f3660046122a8565b610c4a565b610447610442366004612370565b610d17565b60405161026994939291906123b9565b6065546103db906001600160a01b031681565b610234610478366004611b7d565b610d41565b6102a061048b3660046123fd565b610d74565b61023461049e366004611c52565b610dd0565b6102a06104b13660046123fd565b610e29565b60985461025c906001600160a01b031681565b609a5461025c906001600160a01b031681565b60005461025c906201000090046001600160a01b031681565b6033546001600160a01b031633146105285760405162461bcd60e51b815260040161051f90612453565b60405180910390fd5b61053181610e68565b50565b600054610100900460ff1661054f5760005460ff1615610553565b303b155b61056f5760405162461bcd60e51b815260040161051f906124b1565b600054610100900460ff16158015610591576000805461ffff19166101011790555b61059a86610ef7565b6105a385610f49565b6105ac84610f70565b6105b583610fa0565b6105be82610fc7565b80156105d0576000805461ff00191690555b505050505050565b6033546001600160a01b031633146106025760405162461bcd60e51b815260040161051f90612453565b61053181610fee565b60008060008060029054906101000a90046001600160a01b03166001600160a01b031660405161063a906124c1565b600060405180830381855afa9150503d8060008114610675576040519150601f19603f3d011682016040523d82523d6000602084013e61067a565b606091505b50915091508161069c5760405162461bcd60e51b815260040161051f90612519565b808060200190518101906106b09190612534565b9250505090565b6106c033610719565b6106dc5760405162461bcd60e51b815260040161051f90612587565b6106e4611039565b565b6033546001600160a01b031633146107105760405162461bcd60e51b815260040161051f90612453565b610531816110a9565b6001600160a01b0316600090815260ce602052604090205460ff1690565b609c54600090600160a01b900460ff16156107645760405162461bcd60e51b815260040161051f906125be565b600260665414156107875760405162461bcd60e51b815260040161051f90612602565b6002606655604082015160608301516107a2919060016110f4565b90506107ad81610d74565b90506107bd826000015182611435565b507fc5f1085d8db8470034ca0b57c2029a07440e82632d8b6d34119bcc93fed80648600060029054906101000a90046001600160a01b0316836040516108049291906126bd565b60405180910390a16001606655919050565b606061082283836114f0565b90505b92915050565b6033546001600160a01b031633146108555760405162461bcd60e51b815260040161051f90612453565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f1935050505090508061089b5760405162461bcd60e51b815260040161051f9061271f565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e482783836040516108cc92919061272f565b60405180910390a1505050565b6033546001600160a01b031633146109035760405162461bcd60e51b815260040161051f90612453565b6105318161166e565b6106e43361166e565b6033546001600160a01b0316331461093f5760405162461bcd60e51b815260040161051f90612453565b6106e46000610ef7565b6065546001600160a01b031633146109735760405162461bcd60e51b815260040161051f9061279d565b609c54600160a01b900460ff161561099d5760405162461bcd60e51b815260040161051f906125be565b600260665414156109c05760405162461bcd60e51b815260040161051f90612602565b60026066556000546001600160a01b038581166201000090920416146109f85760405162461bcd60e51b815260040161051f906127e1565b600080600080610a3d86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d1792505050565b93509350935093506000610a5088610e29565b905060006040518060800160405280876001600160a01b03168152602001866001600160401b03168152602001858152602001610a8d84866114f0565b8152509050610aa68160400151826060015160006110f4565b508051610ab3908a611435565b507fc5f1085d8db8470034ca0b57c2029a07440e82632d8b6d34119bcc93fed80648600060029054906101000a90046001600160a01b031682604051610afa9291906126bd565b60405180910390a1505060016066555050505050505050565b6033546001600160a01b03163314610b3d5760405162461bcd60e51b815260040161051f90612453565b610531816116e3565b6033546001600160a01b03163314610b705760405162461bcd60e51b815260040161051f90612453565b6105318161172e565b610b8233610719565b610b9e5760405162461bcd60e51b815260040161051f90612587565b6106e46117a7565b6033546001600160a01b03163314610bd05760405162461bcd60e51b815260040161051f90612453565b6105318161180c565b6033546001600160a01b03163314610c035760405162461bcd60e51b815260040161051f90612453565b610c176001600160a01b0384168383611857565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988383836040516108cc939291906127f1565b600080825111610c6c5760405162461bcd60e51b815260040161051f90612860565b60005b8251811015610d115760005b838281518110610c8d57610c8d612870565b60200260200101516020015151811015610cfe57610cea848381518110610cb657610cb6612870565b6020026020010151602001518281518110610cd357610cd3612870565b6020026020010151846118b290919063ffffffff16565b925080610cf68161289c565b915050610c7b565b5080610d098161289c565b915050610c6f565b50919050565b6000806000606084806020019051810190610d329190612a36565b92989197509550909350915050565b6033546001600160a01b03163314610d6b5760405162461bcd60e51b815260040161051f90612453565b610531816118be565b600080610d7f61060b565b90506012808211610db157610da9610d978284611909565b610da290600a612bc2565b8590611915565b949350505050565b610da9610dbe8383611909565b610dc990600a612bc2565b8590611921565b6033546001600160a01b03163314610dfa5760405162461bcd60e51b815260040161051f90612453565b6001600160a01b038116610e205760405162461bcd60e51b815260040161051f90612c14565b61053181610ef7565b600080610e3461060b565b90506012808211610e4c57610da9610dbe8284611909565b610da9610d978383611909565b6001600160a01b03163b151590565b6001600160a01b038116610e8e5760405162461bcd60e51b815260040161051f90612c66565b6000805462010000600160b01b031916620100006001600160a01b03848116820292909217928390556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3093610eec9392900490911690611c44565b60405180910390a150565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610b705760405162461bcd60e51b815260040161051f90612cbe565b600054610100900460ff16610f975760405162461bcd60e51b815260040161051f90612cbe565b6105318161192d565b600054610100900460ff166106025760405162461bcd60e51b815260040161051f90612cbe565b600054610100900460ff166105285760405162461bcd60e51b815260040161051f90612cbe565b606580546001600160a01b0319166001600160a01b0383161790556040517fafe9b28ca24a54df8c44769c685f7b92824aae021cdfcaa4719d493571a23c4c90610eec90839061224a565b609c54600160a01b900460ff166110625760405162461bcd60e51b815260040161051f90612cf9565b609c805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405161109f919061224a565b60405180910390a1565b609c80546001600160a01b0319166001600160a01b0383161790556040517f7b091d9397a2f75213edeec1728b27a9d863f0f8aafb62fce0f1154f48f110f890610eec908390611c44565b6000808351116111165760405162461bcd60e51b815260040161051f90612d47565b60005b835181101561142d57600084828151811061113657611136612870565b602002602001015190506001600481111561115357611153611ff7565b8151600481111561116657611166611ff7565b141561121a578060200151516001146111915760405162461bcd60e51b815260040161051f90612d98565b609954602082015180516001600160a01b039092169163467aa8de9189916000906111be576111be612870565b60200260200101516040518363ffffffff1660e01b81526004016111e3929190612da8565b600060405180830381600087803b1580156111fd57600080fd5b505af1158015611211573d6000803e3d6000fd5b505050506113be565b60038151600481111561122f5761122f611ff7565b14156112875780602001515160011461125a5760405162461bcd60e51b815260040161051f90612df4565b609b54602082015180516001600160a01b039092169163467aa8de9189916000906111be576111be612870565b60028151600481111561129c5761129c611ff7565b14156112f4578060200151516001146112c75760405162461bcd60e51b815260040161051f90612e42565b609a54602082015180516001600160a01b039092169163467aa8de9189916000906111be576111be612870565b60048151600481111561130957611309611ff7565b14156113a6578060200151516002146113345760405162461bcd60e51b815260040161051f90612e92565b609c54602082015180516001600160a01b0390921691634235fec091899160009061136157611361612870565b6020026020010151846020015160018151811061138057611380612870565b60200260200101516040518463ffffffff1660e01b81526004016111e393929190612ea2565b60405162461bcd60e51b815260040161051f90612f00565b831561141a5760005b81602001515181101561141857611404826020015182815181106113ed576113ed612870565b6020026020010151856118b290919063ffffffff16565b9350806114108161289c565b9150506113c7565b505b50806114258161289c565b915050611119565b509392505050565b609854604051636b074a0760e01b81526000916001600160a01b031690636b074a079061146690869060040161224a565b60206040518083038186803b15801561147e57600080fd5b505afa158015611492573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b69190612f23565b6114d25760405162461bcd60e51b815260040161051f90612f86565b600054610825906201000090046001600160a01b0316333085611978565b606060008251116115135760405162461bcd60e51b815260040161051f90612fdc565b600061151e83610c4a565b9050600081116115405760405162461bcd60e51b815260040161051f9061302c565b60005b835181101561166557600084828151811061156057611560612870565b602002602001015160200151511161158a5760405162461bcd60e51b815260040161051f90613080565b60005b84828151811061159f5761159f612870565b602002602001015160200151518110156116525761160683611600888886815181106115cd576115cd612870565b60200260200101516020015185815181106115ea576115ea612870565b602002602001015161192190919063ffffffff16565b90611915565b85838151811061161857611618612870565b602002602001015160200151828151811061163557611635612870565b60209081029190910101528061164a8161289c565b91505061158d565b508061165d8161289c565b915050611543565b50919392505050565b61167781610719565b6116935760405162461bcd60e51b815260040161051f906130c4565b6001600160a01b038116600090815260ce602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90610eec90839061224a565b609a80546001600160a01b0319166001600160a01b0383161790556040517f100702071f8eb4f459f5f9dcf12bba9b3aeafa0eca6a018364f645558d792c3790610eec908390611c44565b61173781610719565b156117545760405162461bcd60e51b815260040161051f90613112565b6001600160a01b038116600090815260ce602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890610eec90839061224a565b609c54600160a01b900460ff16156117d15760405162461bcd60e51b815260040161051f906125be565b609c805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110923390565b609b80546001600160a01b0319166001600160a01b0383161790556040517f6a7e09ebc58179cd1c17c89209474e58d29e43b1bf78dd57f896e7be983220eb90610eec908390611c44565b6118ad8363a9059cbb60e01b8484604051602401611876929190613122565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261199f565b505050565b60006108228284613130565b609980546001600160a01b0319166001600160a01b0383161790556040517feb1b948f6c63784a1d91e42dd967c49aae87b1db36d3107e9b913963ae7cd03990610eec908390611c44565b60006108228284613148565b60006108228284613175565b60006108228284613189565b609880546001600160a01b0319166001600160a01b0383161790556040517fe63288198842f0dacdcbdc3f22dcd4e473d1f3cee7e10603ae6ddc3e667c528490610eec908390611c44565b611999846323b872dd60e01b858585604051602401611876939291906131a8565b50505050565b60006119f4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a2e9092919063ffffffff16565b8051909150156118ad5780806020019051810190611a129190612f23565b6118ad5760405162461bcd60e51b815260040161051f906131fd565b6060611a3d8484600085611a47565b90505b9392505050565b606082471015611a695760405162461bcd60e51b815260040161051f90613250565b6001600160a01b0385163b611a905760405162461bcd60e51b815260040161051f90613294565b600080866001600160a01b03168587604051611aac91906132f2565b60006040518083038185875af1925050503d8060008114611ae9576040519150601f19603f3d011682016040523d82523d6000602084013e611aee565b606091505b5091509150611afe828286611b09565b979650505050505050565b60608315611b18575081611a40565b825115611b285782518084602001fd5b8160405162461bcd60e51b815260040161051f9190613330565b60006001600160a01b038216610825565b600061082582611b42565b611b6781611b53565b811461053157600080fd5b803561082581611b5e565b600060208284031215611b9257611b92600080fd5b6000610da98484611b72565b611b6781611b42565b803561082581611b9e565b600080600080600060a08688031215611bcd57611bcd600080fd5b6000611bd98888611ba7565b9550506020611bea88828901611ba7565b9450506040611bfb88828901611b72565b9350506060611c0c88828901611ba7565b9250506080611c1d88828901611b72565b9150509295509295909350565b600061082582611b53565b611c3e81611c2a565b82525050565b602081016108258284611c35565b600060208284031215611c6757611c67600080fd5b6000610da98484611ba7565b80611c3e565b602081016108258284611c73565b801515611c3e565b602081016108258284611c87565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715611cd857611cd8611c9d565b6040525050565b6000611cea60405190565b9050611cf68282611cb3565b919050565b6001600160401b038116611b67565b803561082581611cfb565b80611b67565b803561082581611d15565b60006001600160401b03821115611d3f57611d3f611c9d565b5060209081020190565b6005811061053157600080fd5b803561082581611d49565b6000611d74611d6f84611d26565b611cdf565b83815290506020808201908402830185811115611d9357611d93600080fd5b835b81811015611db75780611da88882611d1b565b84525060209283019201611d95565b5050509392505050565b600082601f830112611dd557611dd5600080fd5b8135610da9848260208601611d61565b600060408284031215611dfa57611dfa600080fd5b611e046040611cdf565b90506000611e128484611d56565b82525060208201356001600160401b03811115611e3157611e31600080fd5b611e3d84828501611dc1565b60208301525092915050565b6000611e57611d6f84611d26565b83815290506020808201908402830185811115611e7657611e76600080fd5b835b81811015611db75780356001600160401b03811115611e9957611e99600080fd5b808601611ea68982611de5565b8552505060209283019201611e78565b600082601f830112611eca57611eca600080fd5b8135610da9848260208601611e49565b600060808284031215611eef57611eef600080fd5b611ef96080611cdf565b90506000611f078484611ba7565b8252506020611f1884848301611d0a565b6020830152506040611f2c84828501611d1b565b60408301525060608201356001600160401b03811115611f4e57611f4e600080fd5b611f5a84828501611eb6565b60608301525092915050565b600060208284031215611f7b57611f7b600080fd5b81356001600160401b03811115611f9457611f94600080fd5b610da984828501611eda565b60008060408385031215611fb657611fb6600080fd5b6000611fc28585611d1b565b92505060208301356001600160401b03811115611fe157611fe1600080fd5b611fed85828601611eb6565b9150509250929050565b634e487b7160e01b600052602160045260246000fd5b6005811061053157610531611ff7565b80611cf68161200d565b60006108258261201d565b611c3e81612027565b60006120478383611c73565b505060200190565b6000612059825190565b80845260209384019383018060005b8381101561208d57815161207c888261203b565b975060208301925050600101612068565b509495945050505050565b805160009060408401906120ac8582612032565b50602083015184820360208601526120c4828261204f565b95945050505050565b60006108228383612098565b60006120e3825190565b808452602084019350836020820285016120fd8560200190565b8060005b85811015612132578484038952815161211a85826120cd565b94506020830160209a909a0199925050600101612101565b5091979650505050505050565b6020808252810161082281846120d9565b6000806040838503121561216657612166600080fd5b60006121728585611ba7565b9250506020611fed85828601611d1b565b60008083601f84011261219857612198600080fd5b5081356001600160401b038111156121b2576121b2600080fd5b6020830191508360018202830111156121cd576121cd600080fd5b9250929050565b600080600080606085870312156121ed576121ed600080fd5b60006121f98787611b72565b945050602061220a87828801611d1b565b93505060408501356001600160401b0381111561222957612229600080fd5b61223587828801612183565b95989497509550505050565b611c3e81611b42565b602081016108258284612241565b60008060006060848603121561227057612270600080fd5b600061227c8686611b72565b935050602061228d86828701611ba7565b925050604061229e86828701611d1b565b9150509250925092565b6000602082840312156122bd576122bd600080fd5b81356001600160401b038111156122d6576122d6600080fd5b610da984828501611eb6565b60006001600160401b038211156122fb576122fb611c9d565b601f19601f83011660200192915050565b82818337506000910152565b6000612326611d6f846122e2565b90508281526020810184848401111561234157612341600080fd5b61142d84828561230c565b600082601f83011261236057612360600080fd5b8135610da9848260208601612318565b60006020828403121561238557612385600080fd5b81356001600160401b0381111561239e5761239e600080fd5b610da98482850161234c565b6001600160401b038116611c3e565b608081016123c78287612241565b6123d460208301866123aa565b6123e16040830185611c73565b81810360608301526123f381846120d9565b9695505050505050565b60006020828403121561241257612412600080fd5b6000610da98484611d1b565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b602080825281016108258161241e565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291505b5060400190565b6020808252810161082581612463565b63313ce56760e01b8152600060048201610825565b602681526000602082017f5265736f75726365506179546f6b656e577261707065723a20696e76616c6964815265103a37b5b2b760d11b602082015291506124aa565b60208082528101610825816124d6565b805161082581611d15565b60006020828403121561254957612549600080fd5b6000610da98484612529565b60208082527f5061757365723a2063616c6c6572206973206e6f7420746865207061757365729101908152600061244c565b6020808252810161082581612555565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b8152915061244c565b6020808252810161082581612597565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c008152915061244c565b60208082528101610825816125ce565b600061261c825190565b808452602084019350836020820285016126368560200190565b8060005b85811015612132578484038952815161265385826120cd565b94506020830160209a909a019992505060010161263a565b8051600090608084019061267f8582612241565b50602083015161269260208601826123aa565b5060408301516126a56040860182611c73565b50606083015184820360608601526120c48282612612565b604081016126cb8285611c35565b8181036020830152611a3d818461266b565b602581526000602082017f5061796d656e743a207769746864726177206e617469766520746f6b656e2066815264185a5b195960da1b602082015291506124aa565b60208082528101610825816126dd565b6040810161273d8285611c35565b611a406020830184611c73565b603681526000602082017f4d6573736167655265636569766572577261707065723a2063616c6c6572206981527539903737ba1036b2b9b9b0b3b2903932b1b2b4bb32b960511b602082015291506124aa565b602080825281016108258161274a565b601e81526000602082017f447374436861696e5061796d656e743a20696e76616c696420746f6b656e00008152915061244c565b60208082528101610825816127ad565b606081016127ff8286611c35565b61280c6020830185612241565b610da96040830184611c73565b602a81526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152690c2c8e640d8cadccee8d60b31b602082015291506124aa565b6020808252810161082581612819565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156128b0576128b0612886565b5060010190565b805161082581611b9e565b805161082581611cfb565b805161082581611d49565b60006128e6611d6f84611d26565b8381529050602080820190840283018581111561290557612905600080fd5b835b81811015611db7578061291a8882612529565b84525060209283019201612907565b600082601f83011261293d5761293d600080fd5b8151610da98482602086016128d8565b60006040828403121561296257612962600080fd5b61296c6040611cdf565b9050600061297a84846128cd565b82525060208201516001600160401b0381111561299957612999600080fd5b611e3d84828501612929565b60006129b3611d6f84611d26565b838152905060208082019084028301858111156129d2576129d2600080fd5b835b81811015611db75780516001600160401b038111156129f5576129f5600080fd5b808601612a02898261294d565b85525050602092830192016129d4565b600082601f830112612a2657612a26600080fd5b8151610da98482602086016129a5565b60008060008060808587031215612a4f57612a4f600080fd5b6000612a5b87876128b7565b9450506020612a6c878288016128c2565b9350506040612a7d87828801612529565b92505060608501516001600160401b03811115612a9c57612a9c600080fd5b612aa887828801612a12565b91505092959194509250565b80825b6001851115612af357808604811115612ad257612ad2612886565b6001851615612ae057908102905b8002612aec8560011c90565b9450612ab7565b94509492505050565b600082612b0b57506001611a40565b81612b1857506000611a40565b8160018114612b2e5760028114612b3857612b65565b6001915050611a40565b60ff841115612b4957612b49612886565b8360020a915084821115612b5f57612b5f612886565b50611a40565b5060208310610133831016604e8410600b8410161715612b98575081810a83811115612b9357612b93612886565b611a40565b612ba58484846001612ab4565b92509050818404811115612bbb57612bbb612886565b0292915050565b60006108226000198484612afc565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015291506124aa565b6020808252810161082581612bd1565b602581526000602082017f5265736f75726365506179546f6b656e577261707065723a207a65726f206164815264647265737360d81b602082015291506124aa565b6020808252810161082581612c24565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b602082015291506124aa565b6020808252810161082581612c76565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b8152915061244c565b6020808252810161082581612cce565b602181526000602082017f447374436861696e5061796d656e743a20696e76616c6964207061796c6f61648152607360f81b602082015291506124aa565b6020808252810161082581612d09565b60368152600060208201600080516020613342833981519152815275656e67746820666f72204275696c64696e6754696d6560501b602082015291506124aa565b6020808252810161082581612d57565b6040810161273d8285611c73565b60338152600060208201600080516020613342833981519152815272656e67746820666f7220415253746f7261676560681b602082015291506124aa565b6020808252810161082581612db6565b603381526000602082016000805160206133428339815191528152720cadccee8d040ccdee44084c2dcc8eed2c8e8d606b1b602082015291506124aa565b6020808252810161082581612e04565b60358152600060208201600080516020613342833981519152815274656e67746820666f72204950465353746f7261676560581b602082015291506124aa565b6020808252810161082581612e52565b60608101612eb08286611c73565b61280c6020830185611c73565b602681526000602082017f447374436861696e5061796d656e743a20756e6b6e6f776e207265736f75726381526565207479706560d01b602082015291506124aa565b6020808252810161082581612ebd565b801515611b67565b805161082581612f10565b600060208284031215612f3857612f38600080fd5b6000610da98484612f18565b602581526000602082017f447374436861696e5061796d656e743a206e6f6e6578697374656e742070726f8152643b34b232b960d91b602082015291506124aa565b6020808252810161082581612f44565b602981526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152680c2c840d8cadccee8d60bb1b602082015291506124aa565b6020808252810161082581612f96565b602381526000602082017f5265736f75725061796c6f6164546f6f6c3a207a65726f20746f74616c2076618152626c756560e81b602082015291506124aa565b6020808252810161082581612fec565b602781526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c69642076616c7565815266040d8cadccee8d60cb1b602082015291506124aa565b602080825281016108258161303c565b601d81526000602082017f5061757365723a206163636f756e74206973206e6f74207061757365720000008152915061244c565b6020808252810161082581613090565b602181526000602082017f5061757365723a206163636f756e7420697320616c72656164792070617573658152603960f91b602082015291506124aa565b60208082528101610825816130d4565b6040810161273d8285612241565b6000821982111561314357613143612886565b500190565b60008282101561315a5761315a612886565b500390565b634e487b7160e01b600052601260045260246000fd5b6000826131845761318461315f565b500490565b60008160001904831182151516156131a3576131a3612886565b500290565b606081016127ff8286612241565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015291506124aa565b60208082528101610825816131b6565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b602082015291506124aa565b602080825281016108258161320d565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000008152915061244c565b6020808252810161082581613260565b60005b838110156132bf5781810151838201526020016132a7565b838111156119995750506000910152565b60006132da825190565b6132e88185602086016132a4565b9290920192915050565b6000611a4082846132d0565b6000613308825190565b80845260208401935061331f8185602086016132a4565b601f01601f19169290920192915050565b6020808252810161082281846132fe56fe447374436861696e5061796d656e743a20696e76616c69642076616c7565206ca2646970667358221220e3bd922bdfb6119f5b6467a425d465092c0d4a24f67dc0f8a1ae318a86a38c2964736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061021c5760003560e01c80637a7fa75311610125578063bd169975116100ad578063f2fde38b1161007c578063f2fde38b14610490578063f6745296146104a3578063f8401fe6146104b6578063f8f071fa146104c9578063fc0c546a146104dc57600080fd5b8063bd16997514610434578063e2cae9f514610457578063e84372491461046a578063f12973d31461047d57600080fd5b80638da5cb5b116100f45780638da5cb5b146103ce578063914fd2c3146103e857806393563a95146103fb578063b05f87a81461040e578063bb3711111461042157600080fd5b80637a7fa7531461037d57806380f51c121461039057806382dc1ec4146103b35780638456cb59146103c657600080fd5b8063490e4fa2116101a8578063699256f411610177578063699256f4146103345780636b2c0f55146103475780636ef8d66d1461035a578063715018a61461036257806377ef533c1461036a57600080fd5b8063490e4fa2146102e85780635618ce2d146102fb5780635c975abb1461031b57806368b869541461032d57600080fd5b80633b8ccfb1116101ef5780633b8ccfb1146102855780633b97e856146102985780633f4ba83a146102ad5780634540a85b146102b557806346fbf68e146102c857600080fd5b8063144fa6d7146102215780631459457a1461023657806315e077691461024957806329dbfc7514610272575b600080fd5b61023461022f366004611b7d565b6104f5565b005b610234610244366004611bb2565b610534565b609b5461025c906001600160a01b031681565b6040516102699190611c44565b60405180910390f35b60995461025c906001600160a01b031681565b610234610293366004611c52565b6105d8565b6102a061060b565b6040516102699190611c79565b6102346106b7565b6102346102c3366004611b7d565b6106e6565b6102db6102d6366004611c52565b610719565b6040516102699190611c8f565b6102a06102f6366004611f66565b610737565b61030e610309366004611fa0565b610816565b604051610269919061213f565b609c54600160a01b900460ff166102db565b60126102a0565b610234610342366004612150565b61082b565b610234610355366004611c52565b6108d9565b61023461090c565b610234610915565b6102346103783660046121d4565b610949565b61023461038b366004611b7d565b610b13565b6102db61039e366004611c52565b60ce6020526000908152604090205460ff1681565b6102346103c1366004611c52565b610b46565b610234610b79565b6033546001600160a01b03165b604051610269919061224a565b6102346103f6366004611b7d565b610ba6565b610234610409366004612258565b610bd9565b609c5461025c906001600160a01b031681565b6102a061042f3660046122a8565b610c4a565b610447610442366004612370565b610d17565b60405161026994939291906123b9565b6065546103db906001600160a01b031681565b610234610478366004611b7d565b610d41565b6102a061048b3660046123fd565b610d74565b61023461049e366004611c52565b610dd0565b6102a06104b13660046123fd565b610e29565b60985461025c906001600160a01b031681565b609a5461025c906001600160a01b031681565b60005461025c906201000090046001600160a01b031681565b6033546001600160a01b031633146105285760405162461bcd60e51b815260040161051f90612453565b60405180910390fd5b61053181610e68565b50565b600054610100900460ff1661054f5760005460ff1615610553565b303b155b61056f5760405162461bcd60e51b815260040161051f906124b1565b600054610100900460ff16158015610591576000805461ffff19166101011790555b61059a86610ef7565b6105a385610f49565b6105ac84610f70565b6105b583610fa0565b6105be82610fc7565b80156105d0576000805461ff00191690555b505050505050565b6033546001600160a01b031633146106025760405162461bcd60e51b815260040161051f90612453565b61053181610fee565b60008060008060029054906101000a90046001600160a01b03166001600160a01b031660405161063a906124c1565b600060405180830381855afa9150503d8060008114610675576040519150601f19603f3d011682016040523d82523d6000602084013e61067a565b606091505b50915091508161069c5760405162461bcd60e51b815260040161051f90612519565b808060200190518101906106b09190612534565b9250505090565b6106c033610719565b6106dc5760405162461bcd60e51b815260040161051f90612587565b6106e4611039565b565b6033546001600160a01b031633146107105760405162461bcd60e51b815260040161051f90612453565b610531816110a9565b6001600160a01b0316600090815260ce602052604090205460ff1690565b609c54600090600160a01b900460ff16156107645760405162461bcd60e51b815260040161051f906125be565b600260665414156107875760405162461bcd60e51b815260040161051f90612602565b6002606655604082015160608301516107a2919060016110f4565b90506107ad81610d74565b90506107bd826000015182611435565b507fc5f1085d8db8470034ca0b57c2029a07440e82632d8b6d34119bcc93fed80648600060029054906101000a90046001600160a01b0316836040516108049291906126bd565b60405180910390a16001606655919050565b606061082283836114f0565b90505b92915050565b6033546001600160a01b031633146108555760405162461bcd60e51b815260040161051f90612453565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f1935050505090508061089b5760405162461bcd60e51b815260040161051f9061271f565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e482783836040516108cc92919061272f565b60405180910390a1505050565b6033546001600160a01b031633146109035760405162461bcd60e51b815260040161051f90612453565b6105318161166e565b6106e43361166e565b6033546001600160a01b0316331461093f5760405162461bcd60e51b815260040161051f90612453565b6106e46000610ef7565b6065546001600160a01b031633146109735760405162461bcd60e51b815260040161051f9061279d565b609c54600160a01b900460ff161561099d5760405162461bcd60e51b815260040161051f906125be565b600260665414156109c05760405162461bcd60e51b815260040161051f90612602565b60026066556000546001600160a01b038581166201000090920416146109f85760405162461bcd60e51b815260040161051f906127e1565b600080600080610a3d86868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d1792505050565b93509350935093506000610a5088610e29565b905060006040518060800160405280876001600160a01b03168152602001866001600160401b03168152602001858152602001610a8d84866114f0565b8152509050610aa68160400151826060015160006110f4565b508051610ab3908a611435565b507fc5f1085d8db8470034ca0b57c2029a07440e82632d8b6d34119bcc93fed80648600060029054906101000a90046001600160a01b031682604051610afa9291906126bd565b60405180910390a1505060016066555050505050505050565b6033546001600160a01b03163314610b3d5760405162461bcd60e51b815260040161051f90612453565b610531816116e3565b6033546001600160a01b03163314610b705760405162461bcd60e51b815260040161051f90612453565b6105318161172e565b610b8233610719565b610b9e5760405162461bcd60e51b815260040161051f90612587565b6106e46117a7565b6033546001600160a01b03163314610bd05760405162461bcd60e51b815260040161051f90612453565b6105318161180c565b6033546001600160a01b03163314610c035760405162461bcd60e51b815260040161051f90612453565b610c176001600160a01b0384168383611857565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988383836040516108cc939291906127f1565b600080825111610c6c5760405162461bcd60e51b815260040161051f90612860565b60005b8251811015610d115760005b838281518110610c8d57610c8d612870565b60200260200101516020015151811015610cfe57610cea848381518110610cb657610cb6612870565b6020026020010151602001518281518110610cd357610cd3612870565b6020026020010151846118b290919063ffffffff16565b925080610cf68161289c565b915050610c7b565b5080610d098161289c565b915050610c6f565b50919050565b6000806000606084806020019051810190610d329190612a36565b92989197509550909350915050565b6033546001600160a01b03163314610d6b5760405162461bcd60e51b815260040161051f90612453565b610531816118be565b600080610d7f61060b565b90506012808211610db157610da9610d978284611909565b610da290600a612bc2565b8590611915565b949350505050565b610da9610dbe8383611909565b610dc990600a612bc2565b8590611921565b6033546001600160a01b03163314610dfa5760405162461bcd60e51b815260040161051f90612453565b6001600160a01b038116610e205760405162461bcd60e51b815260040161051f90612c14565b61053181610ef7565b600080610e3461060b565b90506012808211610e4c57610da9610dbe8284611909565b610da9610d978383611909565b6001600160a01b03163b151590565b6001600160a01b038116610e8e5760405162461bcd60e51b815260040161051f90612c66565b6000805462010000600160b01b031916620100006001600160a01b03848116820292909217928390556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3093610eec9392900490911690611c44565b60405180910390a150565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610b705760405162461bcd60e51b815260040161051f90612cbe565b600054610100900460ff16610f975760405162461bcd60e51b815260040161051f90612cbe565b6105318161192d565b600054610100900460ff166106025760405162461bcd60e51b815260040161051f90612cbe565b600054610100900460ff166105285760405162461bcd60e51b815260040161051f90612cbe565b606580546001600160a01b0319166001600160a01b0383161790556040517fafe9b28ca24a54df8c44769c685f7b92824aae021cdfcaa4719d493571a23c4c90610eec90839061224a565b609c54600160a01b900460ff166110625760405162461bcd60e51b815260040161051f90612cf9565b609c805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405161109f919061224a565b60405180910390a1565b609c80546001600160a01b0319166001600160a01b0383161790556040517f7b091d9397a2f75213edeec1728b27a9d863f0f8aafb62fce0f1154f48f110f890610eec908390611c44565b6000808351116111165760405162461bcd60e51b815260040161051f90612d47565b60005b835181101561142d57600084828151811061113657611136612870565b602002602001015190506001600481111561115357611153611ff7565b8151600481111561116657611166611ff7565b141561121a578060200151516001146111915760405162461bcd60e51b815260040161051f90612d98565b609954602082015180516001600160a01b039092169163467aa8de9189916000906111be576111be612870565b60200260200101516040518363ffffffff1660e01b81526004016111e3929190612da8565b600060405180830381600087803b1580156111fd57600080fd5b505af1158015611211573d6000803e3d6000fd5b505050506113be565b60038151600481111561122f5761122f611ff7565b14156112875780602001515160011461125a5760405162461bcd60e51b815260040161051f90612df4565b609b54602082015180516001600160a01b039092169163467aa8de9189916000906111be576111be612870565b60028151600481111561129c5761129c611ff7565b14156112f4578060200151516001146112c75760405162461bcd60e51b815260040161051f90612e42565b609a54602082015180516001600160a01b039092169163467aa8de9189916000906111be576111be612870565b60048151600481111561130957611309611ff7565b14156113a6578060200151516002146113345760405162461bcd60e51b815260040161051f90612e92565b609c54602082015180516001600160a01b0390921691634235fec091899160009061136157611361612870565b6020026020010151846020015160018151811061138057611380612870565b60200260200101516040518463ffffffff1660e01b81526004016111e393929190612ea2565b60405162461bcd60e51b815260040161051f90612f00565b831561141a5760005b81602001515181101561141857611404826020015182815181106113ed576113ed612870565b6020026020010151856118b290919063ffffffff16565b9350806114108161289c565b9150506113c7565b505b50806114258161289c565b915050611119565b509392505050565b609854604051636b074a0760e01b81526000916001600160a01b031690636b074a079061146690869060040161224a565b60206040518083038186803b15801561147e57600080fd5b505afa158015611492573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b69190612f23565b6114d25760405162461bcd60e51b815260040161051f90612f86565b600054610825906201000090046001600160a01b0316333085611978565b606060008251116115135760405162461bcd60e51b815260040161051f90612fdc565b600061151e83610c4a565b9050600081116115405760405162461bcd60e51b815260040161051f9061302c565b60005b835181101561166557600084828151811061156057611560612870565b602002602001015160200151511161158a5760405162461bcd60e51b815260040161051f90613080565b60005b84828151811061159f5761159f612870565b602002602001015160200151518110156116525761160683611600888886815181106115cd576115cd612870565b60200260200101516020015185815181106115ea576115ea612870565b602002602001015161192190919063ffffffff16565b90611915565b85838151811061161857611618612870565b602002602001015160200151828151811061163557611635612870565b60209081029190910101528061164a8161289c565b91505061158d565b508061165d8161289c565b915050611543565b50919392505050565b61167781610719565b6116935760405162461bcd60e51b815260040161051f906130c4565b6001600160a01b038116600090815260ce602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90610eec90839061224a565b609a80546001600160a01b0319166001600160a01b0383161790556040517f100702071f8eb4f459f5f9dcf12bba9b3aeafa0eca6a018364f645558d792c3790610eec908390611c44565b61173781610719565b156117545760405162461bcd60e51b815260040161051f90613112565b6001600160a01b038116600090815260ce602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890610eec90839061224a565b609c54600160a01b900460ff16156117d15760405162461bcd60e51b815260040161051f906125be565b609c805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110923390565b609b80546001600160a01b0319166001600160a01b0383161790556040517f6a7e09ebc58179cd1c17c89209474e58d29e43b1bf78dd57f896e7be983220eb90610eec908390611c44565b6118ad8363a9059cbb60e01b8484604051602401611876929190613122565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261199f565b505050565b60006108228284613130565b609980546001600160a01b0319166001600160a01b0383161790556040517feb1b948f6c63784a1d91e42dd967c49aae87b1db36d3107e9b913963ae7cd03990610eec908390611c44565b60006108228284613148565b60006108228284613175565b60006108228284613189565b609880546001600160a01b0319166001600160a01b0383161790556040517fe63288198842f0dacdcbdc3f22dcd4e473d1f3cee7e10603ae6ddc3e667c528490610eec908390611c44565b611999846323b872dd60e01b858585604051602401611876939291906131a8565b50505050565b60006119f4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a2e9092919063ffffffff16565b8051909150156118ad5780806020019051810190611a129190612f23565b6118ad5760405162461bcd60e51b815260040161051f906131fd565b6060611a3d8484600085611a47565b90505b9392505050565b606082471015611a695760405162461bcd60e51b815260040161051f90613250565b6001600160a01b0385163b611a905760405162461bcd60e51b815260040161051f90613294565b600080866001600160a01b03168587604051611aac91906132f2565b60006040518083038185875af1925050503d8060008114611ae9576040519150601f19603f3d011682016040523d82523d6000602084013e611aee565b606091505b5091509150611afe828286611b09565b979650505050505050565b60608315611b18575081611a40565b825115611b285782518084602001fd5b8160405162461bcd60e51b815260040161051f9190613330565b60006001600160a01b038216610825565b600061082582611b42565b611b6781611b53565b811461053157600080fd5b803561082581611b5e565b600060208284031215611b9257611b92600080fd5b6000610da98484611b72565b611b6781611b42565b803561082581611b9e565b600080600080600060a08688031215611bcd57611bcd600080fd5b6000611bd98888611ba7565b9550506020611bea88828901611ba7565b9450506040611bfb88828901611b72565b9350506060611c0c88828901611ba7565b9250506080611c1d88828901611b72565b9150509295509295909350565b600061082582611b53565b611c3e81611c2a565b82525050565b602081016108258284611c35565b600060208284031215611c6757611c67600080fd5b6000610da98484611ba7565b80611c3e565b602081016108258284611c73565b801515611c3e565b602081016108258284611c87565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715611cd857611cd8611c9d565b6040525050565b6000611cea60405190565b9050611cf68282611cb3565b919050565b6001600160401b038116611b67565b803561082581611cfb565b80611b67565b803561082581611d15565b60006001600160401b03821115611d3f57611d3f611c9d565b5060209081020190565b6005811061053157600080fd5b803561082581611d49565b6000611d74611d6f84611d26565b611cdf565b83815290506020808201908402830185811115611d9357611d93600080fd5b835b81811015611db75780611da88882611d1b565b84525060209283019201611d95565b5050509392505050565b600082601f830112611dd557611dd5600080fd5b8135610da9848260208601611d61565b600060408284031215611dfa57611dfa600080fd5b611e046040611cdf565b90506000611e128484611d56565b82525060208201356001600160401b03811115611e3157611e31600080fd5b611e3d84828501611dc1565b60208301525092915050565b6000611e57611d6f84611d26565b83815290506020808201908402830185811115611e7657611e76600080fd5b835b81811015611db75780356001600160401b03811115611e9957611e99600080fd5b808601611ea68982611de5565b8552505060209283019201611e78565b600082601f830112611eca57611eca600080fd5b8135610da9848260208601611e49565b600060808284031215611eef57611eef600080fd5b611ef96080611cdf565b90506000611f078484611ba7565b8252506020611f1884848301611d0a565b6020830152506040611f2c84828501611d1b565b60408301525060608201356001600160401b03811115611f4e57611f4e600080fd5b611f5a84828501611eb6565b60608301525092915050565b600060208284031215611f7b57611f7b600080fd5b81356001600160401b03811115611f9457611f94600080fd5b610da984828501611eda565b60008060408385031215611fb657611fb6600080fd5b6000611fc28585611d1b565b92505060208301356001600160401b03811115611fe157611fe1600080fd5b611fed85828601611eb6565b9150509250929050565b634e487b7160e01b600052602160045260246000fd5b6005811061053157610531611ff7565b80611cf68161200d565b60006108258261201d565b611c3e81612027565b60006120478383611c73565b505060200190565b6000612059825190565b80845260209384019383018060005b8381101561208d57815161207c888261203b565b975060208301925050600101612068565b509495945050505050565b805160009060408401906120ac8582612032565b50602083015184820360208601526120c4828261204f565b95945050505050565b60006108228383612098565b60006120e3825190565b808452602084019350836020820285016120fd8560200190565b8060005b85811015612132578484038952815161211a85826120cd565b94506020830160209a909a0199925050600101612101565b5091979650505050505050565b6020808252810161082281846120d9565b6000806040838503121561216657612166600080fd5b60006121728585611ba7565b9250506020611fed85828601611d1b565b60008083601f84011261219857612198600080fd5b5081356001600160401b038111156121b2576121b2600080fd5b6020830191508360018202830111156121cd576121cd600080fd5b9250929050565b600080600080606085870312156121ed576121ed600080fd5b60006121f98787611b72565b945050602061220a87828801611d1b565b93505060408501356001600160401b0381111561222957612229600080fd5b61223587828801612183565b95989497509550505050565b611c3e81611b42565b602081016108258284612241565b60008060006060848603121561227057612270600080fd5b600061227c8686611b72565b935050602061228d86828701611ba7565b925050604061229e86828701611d1b565b9150509250925092565b6000602082840312156122bd576122bd600080fd5b81356001600160401b038111156122d6576122d6600080fd5b610da984828501611eb6565b60006001600160401b038211156122fb576122fb611c9d565b601f19601f83011660200192915050565b82818337506000910152565b6000612326611d6f846122e2565b90508281526020810184848401111561234157612341600080fd5b61142d84828561230c565b600082601f83011261236057612360600080fd5b8135610da9848260208601612318565b60006020828403121561238557612385600080fd5b81356001600160401b0381111561239e5761239e600080fd5b610da98482850161234c565b6001600160401b038116611c3e565b608081016123c78287612241565b6123d460208301866123aa565b6123e16040830185611c73565b81810360608301526123f381846120d9565b9695505050505050565b60006020828403121561241257612412600080fd5b6000610da98484611d1b565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b602080825281016108258161241e565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291505b5060400190565b6020808252810161082581612463565b63313ce56760e01b8152600060048201610825565b602681526000602082017f5265736f75726365506179546f6b656e577261707065723a20696e76616c6964815265103a37b5b2b760d11b602082015291506124aa565b60208082528101610825816124d6565b805161082581611d15565b60006020828403121561254957612549600080fd5b6000610da98484612529565b60208082527f5061757365723a2063616c6c6572206973206e6f7420746865207061757365729101908152600061244c565b6020808252810161082581612555565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b8152915061244c565b6020808252810161082581612597565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c008152915061244c565b60208082528101610825816125ce565b600061261c825190565b808452602084019350836020820285016126368560200190565b8060005b85811015612132578484038952815161265385826120cd565b94506020830160209a909a019992505060010161263a565b8051600090608084019061267f8582612241565b50602083015161269260208601826123aa565b5060408301516126a56040860182611c73565b50606083015184820360608601526120c48282612612565b604081016126cb8285611c35565b8181036020830152611a3d818461266b565b602581526000602082017f5061796d656e743a207769746864726177206e617469766520746f6b656e2066815264185a5b195960da1b602082015291506124aa565b60208082528101610825816126dd565b6040810161273d8285611c35565b611a406020830184611c73565b603681526000602082017f4d6573736167655265636569766572577261707065723a2063616c6c6572206981527539903737ba1036b2b9b9b0b3b2903932b1b2b4bb32b960511b602082015291506124aa565b602080825281016108258161274a565b601e81526000602082017f447374436861696e5061796d656e743a20696e76616c696420746f6b656e00008152915061244c565b60208082528101610825816127ad565b606081016127ff8286611c35565b61280c6020830185612241565b610da96040830184611c73565b602a81526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152690c2c8e640d8cadccee8d60b31b602082015291506124aa565b6020808252810161082581612819565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156128b0576128b0612886565b5060010190565b805161082581611b9e565b805161082581611cfb565b805161082581611d49565b60006128e6611d6f84611d26565b8381529050602080820190840283018581111561290557612905600080fd5b835b81811015611db7578061291a8882612529565b84525060209283019201612907565b600082601f83011261293d5761293d600080fd5b8151610da98482602086016128d8565b60006040828403121561296257612962600080fd5b61296c6040611cdf565b9050600061297a84846128cd565b82525060208201516001600160401b0381111561299957612999600080fd5b611e3d84828501612929565b60006129b3611d6f84611d26565b838152905060208082019084028301858111156129d2576129d2600080fd5b835b81811015611db75780516001600160401b038111156129f5576129f5600080fd5b808601612a02898261294d565b85525050602092830192016129d4565b600082601f830112612a2657612a26600080fd5b8151610da98482602086016129a5565b60008060008060808587031215612a4f57612a4f600080fd5b6000612a5b87876128b7565b9450506020612a6c878288016128c2565b9350506040612a7d87828801612529565b92505060608501516001600160401b03811115612a9c57612a9c600080fd5b612aa887828801612a12565b91505092959194509250565b80825b6001851115612af357808604811115612ad257612ad2612886565b6001851615612ae057908102905b8002612aec8560011c90565b9450612ab7565b94509492505050565b600082612b0b57506001611a40565b81612b1857506000611a40565b8160018114612b2e5760028114612b3857612b65565b6001915050611a40565b60ff841115612b4957612b49612886565b8360020a915084821115612b5f57612b5f612886565b50611a40565b5060208310610133831016604e8410600b8410161715612b98575081810a83811115612b9357612b93612886565b611a40565b612ba58484846001612ab4565b92509050818404811115612bbb57612bbb612886565b0292915050565b60006108226000198484612afc565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015291506124aa565b6020808252810161082581612bd1565b602581526000602082017f5265736f75726365506179546f6b656e577261707065723a207a65726f206164815264647265737360d81b602082015291506124aa565b6020808252810161082581612c24565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b602082015291506124aa565b6020808252810161082581612c76565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b8152915061244c565b6020808252810161082581612cce565b602181526000602082017f447374436861696e5061796d656e743a20696e76616c6964207061796c6f61648152607360f81b602082015291506124aa565b6020808252810161082581612d09565b60368152600060208201600080516020613342833981519152815275656e67746820666f72204275696c64696e6754696d6560501b602082015291506124aa565b6020808252810161082581612d57565b6040810161273d8285611c73565b60338152600060208201600080516020613342833981519152815272656e67746820666f7220415253746f7261676560681b602082015291506124aa565b6020808252810161082581612db6565b603381526000602082016000805160206133428339815191528152720cadccee8d040ccdee44084c2dcc8eed2c8e8d606b1b602082015291506124aa565b6020808252810161082581612e04565b60358152600060208201600080516020613342833981519152815274656e67746820666f72204950465353746f7261676560581b602082015291506124aa565b6020808252810161082581612e52565b60608101612eb08286611c73565b61280c6020830185611c73565b602681526000602082017f447374436861696e5061796d656e743a20756e6b6e6f776e207265736f75726381526565207479706560d01b602082015291506124aa565b6020808252810161082581612ebd565b801515611b67565b805161082581612f10565b600060208284031215612f3857612f38600080fd5b6000610da98484612f18565b602581526000602082017f447374436861696e5061796d656e743a206e6f6e6578697374656e742070726f8152643b34b232b960d91b602082015291506124aa565b6020808252810161082581612f44565b602981526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152680c2c840d8cadccee8d60bb1b602082015291506124aa565b6020808252810161082581612f96565b602381526000602082017f5265736f75725061796c6f6164546f6f6c3a207a65726f20746f74616c2076618152626c756560e81b602082015291506124aa565b6020808252810161082581612fec565b602781526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c69642076616c7565815266040d8cadccee8d60cb1b602082015291506124aa565b602080825281016108258161303c565b601d81526000602082017f5061757365723a206163636f756e74206973206e6f74207061757365720000008152915061244c565b6020808252810161082581613090565b602181526000602082017f5061757365723a206163636f756e7420697320616c72656164792070617573658152603960f91b602082015291506124aa565b60208082528101610825816130d4565b6040810161273d8285612241565b6000821982111561314357613143612886565b500190565b60008282101561315a5761315a612886565b500390565b634e487b7160e01b600052601260045260246000fd5b6000826131845761318461315f565b500490565b60008160001904831182151516156131a3576131a3612886565b500290565b606081016127ff8286612241565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b602082015291506124aa565b60208082528101610825816131b6565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b602082015291506124aa565b602080825281016108258161320d565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000008152915061244c565b6020808252810161082581613260565b60005b838110156132bf5781810151838201526020016132a7565b838111156119995750506000910152565b60006132da825190565b6132e88185602086016132a4565b9290920192915050565b6000611a4082846132d0565b6000613308825190565b80845260208401935061331f8185602086016132a4565b601f01601f19169290920192915050565b6020808252810161082281846132fe56fe447374436861696e5061796d656e743a20696e76616c69642076616c7565206ca2646970667358221220e3bd922bdfb6119f5b6467a425d465092c0d4a24f67dc0f8a1ae318a86a38c2964736f6c63430008090033",
  "devdoc": {
    "author": "Alexandas",
    "details": "Celer SGN source chain sender contract",
    "kind": "dev",
    "methods": {
      "addPauser(address)": {
        "details": "add a pauser for the contract",
        "params": {
          "account": "address"
        }
      },
      "convertSourceChainPayloads(uint256,(uint8,uint256[])[])": {
        "details": "convert source chain payloads",
        "params": {
          "amount": "amount tokens",
          "payloads": "payment payloads"
        },
        "returns": {
          "_0": "converted payment payloads"
        }
      },
      "decodeSourceChainMessage(bytes)": {
        "details": "decode source chain message",
        "params": {
          "message": "message bytes"
        },
        "returns": {
          "account": "user account",
          "nonce": "nonce",
          "payloads": "payment payloads",
          "provider": "provider address"
        }
      },
      "initialize(address,address,address,address,address)": {
        "details": "proxy initialize function",
        "params": {
          "messageReceiver": "message receiver contract address",
          "owner": "contract owner",
          "pauser": "contract pauser",
          "providers": "providers contract",
          "token": "token address"
        }
      },
      "isPauser(address)": {
        "details": "whether the account is the contract pauser",
        "params": {
          "account": "address"
        },
        "returns": {
          "_0": "whether account is a pauser"
        }
      },
      "matchResourceToToken(uint256)": {
        "details": "match value to token decimals",
        "params": {
          "value": "resource value"
        },
        "returns": {
          "_0": "token value"
        }
      },
      "matchTokenToResource(uint256)": {
        "details": "match token amount to resource decimals",
        "params": {
          "value": "token amount with resource decimals"
        },
        "returns": {
          "_0": "resource value"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerWithdrawERC20(address,address,uint256)": {
        "details": "withdraw token",
        "params": {
          "to": "receiver address",
          "token": "token address",
          "value": "token value"
        }
      },
      "ownerWithdrawNative(address,uint256)": {
        "details": "withdraw ETH",
        "params": {
          "to": "receiver address",
          "value": "token value"
        }
      },
      "pause()": {
        "details": "pause the contract"
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "pay((address,uint64,bytes32,(uint8,uint256[])[]))": {
        "details": "pay on dst chain",
        "params": {
          "payload": "payment payload"
        },
        "returns": {
          "value": "payment value"
        }
      },
      "payFromSourceChain(address,uint256,bytes)": {
        "details": "pay from source chain only called by message receiver",
        "params": {
          "_token": "token address",
          "dstAmount": "token amount",
          "message": "payment payload message bytes"
        }
      },
      "removePauser(address)": {
        "details": "remove a pauser for the contract",
        "params": {
          "account": "address"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "renouncePauser()": {
        "details": "remove a pauser for the contract"
      },
      "resourceDecimals()": {
        "details": "return resource decimals",
        "returns": {
          "_0": "resource decimals"
        }
      },
      "setARStorageController(address)": {
        "details": "update AR storage controller contract",
        "params": {
          "_arStorageController": "AR storage controller contract"
        }
      },
      "setBandwidthController(address)": {
        "details": "update bandwidth controller contract",
        "params": {
          "_bandwidthController": "bandwidth controller contract"
        }
      },
      "setBuildingTimeController(address)": {
        "details": "update building time controller contract",
        "params": {
          "_buildingTimeController": "building time controller contract"
        }
      },
      "setIPFSStorageController(address)": {
        "details": "update ipfs storage controller contract",
        "params": {
          "_ipfsStorageController": "IPFS storage controller contract"
        }
      },
      "setMessageReceiver(address)": {
        "details": "set messageReceiver contract address",
        "params": {
          "_messageReceiver": "message receiver contract address"
        }
      },
      "setToken(address)": {
        "details": "set token address",
        "params": {
          "_token": "token address"
        }
      },
      "tokenDecimals()": {
        "details": "return token decimals",
        "returns": {
          "_0": "token decimals"
        }
      },
      "totalValue((uint8,uint256[])[])": {
        "details": "payment payload total value",
        "params": {
          "payloads": "payment payloads"
        },
        "returns": {
          "value": "total value"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "unpause the contract"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 147,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 150,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 6330,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "token",
        "offset": 2,
        "slot": "0",
        "type": "t_contract(IERC20Upgradeable)462"
      },
      {
        "astId": 970,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 122,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 5195,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "messageReceiver",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 339,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_status",
        "offset": 0,
        "slot": "102",
        "type": "t_uint256"
      },
      {
        "astId": 383,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "__gap",
        "offset": 0,
        "slot": "103",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 7033,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "providers",
        "offset": 0,
        "slot": "152",
        "type": "t_contract(IProviders)4277"
      },
      {
        "astId": 7298,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "buildingTimeController",
        "offset": 0,
        "slot": "153",
        "type": "t_contract(INormalResourceController)8548"
      },
      {
        "astId": 7302,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "bandwidthController",
        "offset": 0,
        "slot": "154",
        "type": "t_contract(INormalResourceController)8548"
      },
      {
        "astId": 7306,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "arStorageController",
        "offset": 0,
        "slot": "155",
        "type": "t_contract(INormalResourceController)8548"
      },
      {
        "astId": 7310,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "ipfsStorageController",
        "offset": 0,
        "slot": "156",
        "type": "t_contract(IIPFSStorageController)8518"
      },
      {
        "astId": 235,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "_paused",
        "offset": 20,
        "slot": "156",
        "type": "t_bool"
      },
      {
        "astId": 324,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "__gap",
        "offset": 0,
        "slot": "157",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 3749,
        "contract": "contracts/payment/DstChainPayment.sol:DstChainPayment",
        "label": "pausers",
        "offset": 0,
        "slot": "206",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20Upgradeable)462": {
        "encoding": "inplace",
        "label": "contract IERC20Upgradeable",
        "numberOfBytes": "20"
      },
      "t_contract(IIPFSStorageController)8518": {
        "encoding": "inplace",
        "label": "contract IIPFSStorageController",
        "numberOfBytes": "20"
      },
      "t_contract(INormalResourceController)8548": {
        "encoding": "inplace",
        "label": "contract INormalResourceController",
        "numberOfBytes": "20"
      },
      "t_contract(IProviders)4277": {
        "encoding": "inplace",
        "label": "contract IProviders",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}