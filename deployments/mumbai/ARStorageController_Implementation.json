{
  "address": "0x969D1327319753cdF16BB7e80Dcb58E0ed725A58",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "dstChainPayment",
          "type": "address"
        }
      ],
      "name": "DstChainPaymentUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "account",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Expanded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IResourceAdaptor",
          "name": "adaptor",
          "type": "address"
        }
      ],
      "name": "ResourceAdaptorUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "enum ResourceData.ResourceType",
          "name": "resourceType",
          "type": "uint8"
        }
      ],
      "name": "ResourceTypeUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "adaptor",
      "outputs": [
        {
          "internalType": "contract IResourceAdaptor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "account",
          "type": "bytes32"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "dstChainPayment",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "account",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "expand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "getAmountOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getValueOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dstChainPayment",
          "type": "address"
        },
        {
          "internalType": "contract IResourceAdaptor",
          "name": "adaptor",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "resourceType",
      "outputs": [
        {
          "internalType": "enum ResourceData.ResourceType",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dstChainPayment",
          "type": "address"
        }
      ],
      "name": "setDstChainPayment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IResourceAdaptor",
          "name": "_adaptor",
          "type": "address"
        }
      ],
      "name": "setResourceAdaptor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum ResourceData.ResourceType",
          "name": "_resourceType",
          "type": "uint8"
        }
      ],
      "name": "setResourceType",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x0feecfa49596a85e3ce8f19ba89361c2849af41a7f69c4fa7f914d8a8c3a5b71",
  "receipt": {
    "to": null,
    "from": "0xF1658C608708172655A8e70a1624c29F956Ee63D",
    "contractAddress": "0x969D1327319753cdF16BB7e80Dcb58E0ed725A58",
    "transactionIndex": 59,
    "gasUsed": "786919",
    "logsBloom": "0x
    "blockHash": "0x49287085fa4c2f4a6a351992585c194f2ed6d83d2260ef80fde03d173c02b35a",
    "transactionHash": "0x0feecfa49596a85e3ce8f19ba89361c2849af41a7f69c4fa7f914d8a8c3a5b71",
    "logs": [
      {
        "transactionIndex": 59,
        "blockNumber": 26331331,
        "transactionHash": "0x0feecfa49596a85e3ce8f19ba89361c2849af41a7f69c4fa7f914d8a8c3a5b71",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000f1658c608708172655a8e70a1624c29f956ee63d",
          "0x000000000000000000000000f903ba9e006193c1527bfbe65fe2123704ea3f99"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000017c37ef153bd610000000000000000000000000000000000000000000000003801c31686e49b3100000000000000000000000000000000000000000000021b87a17c91878a0e7b00000000000000000000000000000000000000000000000037e9ff979590ddd000000000000000000000000000000000000000000000021b87b9401078ddcbdc",
        "logIndex": 128,
        "blockHash": "0x49287085fa4c2f4a6a351992585c194f2ed6d83d2260ef80fde03d173c02b35a"
      }
    ],
    "blockNumber": 26331331,
    "cumulativeGasUsed": "5145102",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "da9c392996f5bb5463935f1dd409f50d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dstChainPayment\",\"type\":\"address\"}],\"name\":\"DstChainPaymentUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Expanded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IResourceAdaptor\",\"name\":\"adaptor\",\"type\":\"address\"}],\"name\":\"ResourceAdaptorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"resourceType\",\"type\":\"uint8\"}],\"name\":\"ResourceTypeUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adaptor\",\"outputs\":[{\"internalType\":\"contract IResourceAdaptor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dstChainPayment\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"account\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"expand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"getAmountOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getValueOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dstChainPayment\",\"type\":\"address\"},{\"internalType\":\"contract IResourceAdaptor\",\"name\":\"adaptor\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resourceType\",\"outputs\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dstChainPayment\",\"type\":\"address\"}],\"name\":\"setDstChainPayment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IResourceAdaptor\",\"name\":\"_adaptor\",\"type\":\"address\"}],\"name\":\"setResourceAdaptor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ResourceData.ResourceType\",\"name\":\"_resourceType\",\"type\":\"uint8\"}],\"name\":\"setResourceType\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Alexandas\",\"details\":\"AR storage controller controller\",\"kind\":\"dev\",\"methods\":{\"balanceOf(bytes32)\":{\"details\":\"resource balance\",\"params\":{\"account\":\"user account\"},\"returns\":{\"_0\":\"balance of the account\"}},\"expand(bytes32,uint256)\":{\"details\":\"expand user's normal resource balance\",\"params\":{\"account\":\"user account\",\"value\":\"token value in resource decimals(18)\"}},\"getAmountOf(uint256)\":{\"details\":\"calculate resource amount for value\"},\"getValueOf(uint256)\":{\"details\":\"calculate resource value for amount\"},\"initialize(address,address,address)\":{\"details\":\"proxy initialize function\",\"params\":{\"adaptor\":\"resource adaptor contract address\",\"dstChainPayment\":\"dst chain payment contract address\",\"owner\":\"contract owner\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"price()\":{\"details\":\"return resource price\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setDstChainPayment(address)\":{\"details\":\"update dst chain payment contract address\",\"params\":{\"_dstChainPayment\":\"dst chain payment contract address\"}},\"setResourceAdaptor(address)\":{\"details\":\"update resource adaptor contract\",\"params\":{\"_adaptor\":\"resource adaptor contract\"}},\"setResourceType(uint8)\":{\"details\":\"update resource type\",\"params\":{\"_resourceType\":\"resource type\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/resources/controllers/normal/ARStorageController.sol\":\"ARStorageController\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal onlyInitializing {\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal onlyInitializing {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x652fee292f698d8dba81bf287cb71f1682f6483b67ebe601a5f7387dcfc30b34\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !AddressUpgradeable.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x372b0bc04e3b4c074559bbbfb1317afddb56de5504158ca25a7f9cd403980445\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x55cf2bd9fc76704ddcdc19834cd288b7de00fc0f298a40ea16a954ae8991db2d\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal onlyInitializing {\\n    }\\n\\n    function __Context_init_unchained() internal onlyInitializing {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    /**\\n     * @dev This empty reserved space is put in place to allow future versions to add new\\n     * variables without shifting down storage in the inheritance chain.\\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\\n     */\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMathUpgradeable {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x0ac286be11c2345f71d938119e638483fc1ddb9f56b7da00dd470adcd977f439\",\"license\":\"MIT\"},\"contracts/libraries/ResourceData.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n//// @title A title that should describe the contract/interface\\n/// @author Alexandas\\n/// @dev resource data library\\nlibrary ResourceData {\\n\\n\\tenum ResourceType {\\n\\t\\tNull,\\n\\t\\tBuildingTime,\\n\\t\\tBandwidth,\\n\\t\\tARStorage,\\n\\t\\tIPFSStorage\\n\\t}\\n\\n\\tstruct Payload {\\n\\t\\tResourceData.ResourceType resourceType;\\n\\t\\tuint256[] values;\\n\\t}\\n\\n}\",\"keccak256\":\"0x5b86dc0b7ea5977bce51cc42289f2dfef3d63ba3f9ea538d82e0c2d1e6e31a16\",\"license\":\"UNLICENSE\"},\"contracts/payment/DstChainPaymentWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0-only\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\n\\n/// @author Alexandas\\n/// @dev dst chain payment wrapper\\nabstract contract DstChainPaymentWrapper is OwnableUpgradeable {\\n\\t/// @dev dst chain payment contract address\\n\\taddress public dstChainPayment;\\n\\n\\t/// @dev emit when dst chain payment contract address updated\\n\\t/// @param dstChainPayment dst chain payment contract address\\n\\tevent DstChainPaymentUpdated(address dstChainPayment);\\n\\n\\tmodifier onlyDstChainPayment() {\\n\\t\\trequire(msg.sender == dstChainPayment, 'DstChainPaymentWrapper: caller is not dst chain payment');\\n\\t\\t_;\\n\\t}\\n\\n\\t/// @dev initialize dst chain payment contract address\\n\\t/// @param _dstChainPayment dst chain payment contract address\\n\\tfunction __Init_Dst_Chain_Payment(address _dstChainPayment) internal onlyInitializing {\\n\\t\\t_setDstChainPayment(_dstChainPayment);\\n\\t}\\n\\n\\t/// @dev update dst chain payment contract address\\n\\t/// @param _dstChainPayment dst chain payment contract address\\n\\tfunction setDstChainPayment(address _dstChainPayment) external onlyOwner {\\n\\t\\t_setDstChainPayment(_dstChainPayment);\\n\\t}\\n\\n\\tfunction _setDstChainPayment(address _dstChainPayment) internal {\\n\\t\\tdstChainPayment = _dstChainPayment;\\n\\t\\temit DstChainPaymentUpdated(_dstChainPayment);\\n\\t}\\n}\\n\",\"keccak256\":\"0x19ccbc2304b35f97545feba80141a78db8b4065d7ab35f8315449160181ad816\",\"license\":\"GPL-3.0-only\"},\"contracts/resources/AdaptorWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\nimport '@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol';\\n\\nimport './interfaces/IAdaptorWrapper.sol';\\nimport '../libraries/ResourceData.sol';\\n\\n/// @author Alexandas\\n/// @dev Resource adaptor wrapper contract\\nabstract contract AdaptorWrapper is IAdaptorWrapper, OwnableUpgradeable {\\n\\t/// @dev resource adaptor contract address\\n\\tIResourceAdaptor public override adaptor;\\n\\n\\t/// @dev resource type\\n\\tResourceData.ResourceType public override resourceType;\\n\\n\\t/// @dev initialize resource adaptor contract\\n\\t/// @param _adaptor resource adaptor contract address\\n\\tfunction __Init_Resource_Adaptor(IResourceAdaptor _adaptor) internal onlyInitializing {\\n\\t\\t_setResourceAdaptor(_adaptor);\\n\\t}\\n\\n\\t/// @dev initialize resource type\\n\\t/// @param _resourceType resource type\\n\\tfunction __Init_Resource_Type(ResourceData.ResourceType _resourceType) internal onlyInitializing {\\n\\t\\t_setResourceType(_resourceType);\\n\\t}\\n\\n\\t/// @dev update resource adaptor contract\\n\\t/// @param _adaptor resource adaptor contract\\n\\tfunction setResourceAdaptor(IResourceAdaptor _adaptor) external onlyOwner {\\n\\t\\t_setResourceAdaptor(_adaptor);\\n\\t}\\n\\n\\t/// @dev update resource type\\n\\t/// @param _resourceType resource type\\n\\tfunction setResourceType(ResourceData.ResourceType _resourceType) external onlyOwner {\\n\\t\\t_setResourceType(_resourceType);\\n\\t}\\n\\n\\t/// @dev return resource price\\n\\tfunction price() public view returns (uint256) {\\n\\t\\treturn adaptor.priceOf(resourceType);\\n\\t}\\n\\n\\t/// @dev calculate resource value for amount\\n\\tfunction getValueOf(uint256 amount) public view returns (uint256) {\\n\\t\\treturn adaptor.getValueOf(resourceType, amount);\\n\\t}\\n\\n\\t/// @dev calculate resource amount for value\\n\\tfunction getAmountOf(uint256 value) public view returns (uint256) {\\n\\t\\treturn adaptor.getAmountOf(resourceType, value);\\n\\t}\\n\\n\\tfunction _setResourceAdaptor(IResourceAdaptor _adaptor) internal {\\n\\t\\tadaptor = _adaptor;\\n\\t\\temit ResourceAdaptorUpdated(_adaptor);\\n\\t}\\n\\n\\tfunction _setResourceType(ResourceData.ResourceType _resourceType) internal {\\n\\t\\tresourceType = _resourceType;\\n\\t\\temit ResourceTypeUpdated(_resourceType);\\n\\t}\\n}\\n\",\"keccak256\":\"0x39ceac63ed72aa83da6342ef9c5e74fcd9d779ad37377c0006c4c43346040f01\",\"license\":\"UNLICENSE\"},\"contracts/resources/controllers/normal/ARStorageController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport './NormalResourceController.sol';\\n\\n/// @author Alexandas\\n/// @dev AR storage controller controller\\ncontract ARStorageController is NormalResourceController {\\n\\n\\t/// @dev proxy initialize function\\n\\t/// @param owner contract owner\\n\\t/// @param dstChainPayment dst chain payment contract address\\n\\t/// @param adaptor resource adaptor contract address\\n\\tfunction initialize(\\n\\t\\taddress owner, \\t\\t\\n\\t\\taddress dstChainPayment,\\n\\t\\tIResourceAdaptor adaptor\\n\\t) external initializer {\\n\\t\\t__Init_Normal_Resource_Controller(owner, dstChainPayment, adaptor, ResourceData.ResourceType.ARStorage);\\n\\t}\\n}\\n\",\"keccak256\":\"0x57ee227a0d49f1ef321bd9b855b9ae6fb648d169554ef3a064532e45e96816ac\",\"license\":\"UNLICENSE\"},\"contracts/resources/controllers/normal/NormalResourceController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '@openzeppelin/contracts-upgradeable/utils/math/SafeMathUpgradeable.sol';\\nimport '../../AdaptorWrapper.sol';\\nimport '../../interfaces/INormalResourceController.sol';\\nimport '../../../payment/DstChainPaymentWrapper.sol';\\n\\n/// @author Alexandas\\n/// @dev Normal resource controller\\nabstract contract NormalResourceController is INormalResourceController, DstChainPaymentWrapper, AdaptorWrapper {\\n\\tusing SafeMathUpgradeable for uint256;\\n\\n\\t/// @dev resource balances for account \\n\\tmapping(bytes32 => uint256) internal balances;\\n\\n\\tconstructor() initializer {}\\n\\n\\t/// @dev proxy initialize function\\n\\t/// @param owner contract owner\\n\\t/// @param dstChainPayment dst chain payment contract address\\n\\t/// @param adaptor resource adaptor contract address\\n\\tfunction __Init_Normal_Resource_Controller(\\n\\t\\taddress owner,\\n\\t\\taddress dstChainPayment,\\n\\t\\tIResourceAdaptor adaptor,\\n\\t\\tResourceData.ResourceType resourceType\\n\\t) internal onlyInitializing {\\n\\t\\t_transferOwnership(owner);\\n\\t\\t__Init_Dst_Chain_Payment(dstChainPayment);\\n\\t\\t__Init_Resource_Adaptor(adaptor);\\n\\t\\t__Init_Resource_Type(resourceType);\\n\\t}\\n\\n\\t/// @dev expand user's normal resource balance\\n\\t/// @param account user account\\n\\t/// @param value token value in resource decimals(18)\\n\\tfunction expand(bytes32 account, uint256 value) external override onlyDstChainPayment {\\n\\t\\tuint256 amount = getAmountOf(value);\\n\\t\\tbalances[account] = balances[account].add(amount);\\n\\t\\temit Expanded(account, value);\\n\\t}\\n\\n\\t/// @dev resource balance\\n\\t/// @param account user account\\n\\t/// @return balance of the account\\n\\tfunction balanceOf(bytes32 account) public view override returns(uint256) {\\n\\t\\treturn balances[account];\\n\\t}\\n}\\n\",\"keccak256\":\"0x619a4c5429c032db11a4f20e665679a9dd0bd1a7efd7281d21852fc3a014e2b1\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/IAdaptorWrapper.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '../interfaces/IResourceAdaptor.sol';\\nimport '../../libraries/ResourceData.sol';\\n\\n/// @author Alexandas\\n/// @dev resource adaptor interface\\ninterface IAdaptorWrapper {\\n\\n\\t/// @dev emit when resource adaptor updated\\n\\t/// @param adaptor resource adaptor contract address\\n\\tevent ResourceAdaptorUpdated(IResourceAdaptor adaptor);\\n\\n\\t/// @dev emit when resource type updated\\n\\t/// @param resourceType resource type\\n\\tevent ResourceTypeUpdated(ResourceData.ResourceType resourceType);\\n\\n\\t/// @dev return resource adaptor contract address\\n\\tfunction adaptor() external view returns (IResourceAdaptor);\\n\\n\\t/// @dev return resource type\\n\\tfunction resourceType() external view returns (ResourceData.ResourceType);\\n\\n\\t/// @dev return resource price\\n\\tfunction price() external view returns (uint256);\\n\\n\\t/// @dev calculate resource value for amount\\n\\tfunction getValueOf(uint256 amount) external view returns (uint256);\\n\\n\\t/// @dev calculate resource amount for value\\n\\tfunction getAmountOf(uint256 value) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xe88ffa3b628ea9920d0c375aeb12a0cd315254213e23e438987a016b1e13f407\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/INormalResourceController.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport './IAdaptorWrapper.sol';\\n\\n/// @author Alexandas\\n/// @dev normal resource controller interface\\ninterface INormalResourceController is IAdaptorWrapper {\\n\\n\\t/// @dev emit when resource expanded\\n\\t/// @param account user account\\n\\t/// @param value token value for resource decimals\\n\\tevent Expanded(bytes32 account, uint256 value);\\n\\n\\t/// @dev expand user's normal resource balance\\n\\t/// @param account user account\\n\\t/// @param value token value in resource decimals(18)\\n\\tfunction expand(bytes32 account, uint256 value) external;\\n\\n\\t/// @dev resource balance\\n\\t/// @param account user account\\n\\t/// @return balance of the account\\n\\tfunction balanceOf(bytes32 account) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xb9021a6843274a08d016413166c8b9b83f2f60833cfb5b6400c719ab3d9299e3\",\"license\":\"UNLICENSE\"},\"contracts/resources/interfaces/IResourceAdaptor.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSE\\n\\npragma solidity >=0.8.0;\\n\\nimport '../../libraries/ResourceData.sol';\\n\\n/// @author Alexandas\\n/// @dev resource adpator interface\\ninterface IResourceAdaptor {\\n\\n\\tstruct PriceAdaptor {\\n\\t\\tResourceData.ResourceType resourceType;\\n\\t\\tuint256 price;\\n\\t}\\n\\n\\t/// @dev emit when price updated\\n\\t/// @param adaptors price adaptors\\n\\tevent PriceAdaptorsUpdated(PriceAdaptor[] adaptors);\\n\\n\\t/// @dev get price for resource at a specific block\\n\\t/// @param resourceType resource type\\n\\t/// @param _indexBlock block number\\n\\t/// @return price for resource at a specific block\\n\\tfunction priceAt(ResourceData.ResourceType resourceType, uint256 _indexBlock) external view returns (uint256);\\n\\n\\t/// @dev get value for `amount` resource at a specific block\\n\\t/// @param resourceType resource type\\n\\t/// @param amount resource amount\\n\\t/// @param _indexBlock block number\\n\\t/// @return token value in resource decimals(18)\\n\\tfunction getValueAt(\\n\\t\\tResourceData.ResourceType resourceType,\\n\\t\\tuint256 amount,\\n\\t\\tuint256 _indexBlock\\n\\t) external view returns (uint256);\\n\\n\\t/// @dev get amount resource with value at a specific block \\n\\t/// @param resourceType resource type\\n\\t/// @param value token value\\n\\t/// @param _indexBlock block numer\\n\\t/// @return resource amount\\n\\tfunction getAmountAt(\\n\\t\\tResourceData.ResourceType resourceType,\\n\\t\\tuint256 value,\\n\\t\\tuint256 _indexBlock\\n\\t) external view returns (uint256);\\n\\n\\t/// @dev return resource price\\n\\t/// @param resourceType resource type\\n\\t/// @return resource price\\n\\tfunction priceOf(ResourceData.ResourceType resourceType) external view returns (uint256);\\n\\n\\t/// @dev return value of amount resource\\n\\t/// @param resourceType resource type\\n\\t/// @param amount resource amount\\n\\t/// @return token value in resource decimals(18)\\n\\tfunction getValueOf(ResourceData.ResourceType resourceType, uint256 amount) external view returns (uint256);\\n\\n\\t/// @dev return resource amount with value \\n\\t/// @param resourceType resource type\\n\\t/// @param value token value in resource decimals(18)\\n\\t/// @return resource amount\\n\\tfunction getAmountOf(ResourceData.ResourceType resourceType, uint256 value) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xd75f211a1619376bec9c9cf94113b9b22e083734d6ddf85346b13bedc7528666\",\"license\":\"UNLICENSE\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600054610100900460ff1661002c5760005460ff1615610034565b610034610093565b6100595760405162461bcd60e51b8152600401610050906100bd565b60405180910390fd5b600054610100900460ff1615801561007b576000805461ffff19166101011790555b801561008d576000805461ff00191690555b50610115565b60006100a8306100ae60201b6106031760201c565b15905090565b6001600160a01b03163b151590565b6020808252810161010f81602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b92915050565b610cca806101246000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063c2cd9b2b11610066578063c2cd9b2b146101e1578063f2fde38b14610201578063f60cfa5914610214578063f7d221901461022757600080fd5b8063715018a6146101a45780638da5cb5b146101ac578063a035b1fe146101c6578063c0c53b8b146101ce57600080fd5b80634513f23d116100d35780634513f23d1461014b578063467aa8de1461015e578063691b2a6d146101715780636c7f15421461018457600080fd5b806306570749146100fa5780630ab2b6b914610123578063429aafd914610136575b600080fd5b61010d610108366004610849565b610248565b60405161011a919061087a565b60405180910390f35b61010d610131366004610849565b6102dc565b6101496101443660046108ad565b61031a565b005b6101496101593660046108ed565b610359565b61014961016c36600461090e565b61038c565b61014961017f366004610963565b61042e565b61010d610192366004610849565b60009081526067602052604090205490565b610149610461565b6033546001600160a01b03165b60405161011a919061098d565b61010d610497565b6101496101dc36600461099b565b610528565b6066546101f4906001600160a01b031681565b60405161011a91906109ff565b61014961020f3660046108ad565b6105aa565b6065546101b9906001600160a01b031681565b60665461023b90600160a01b900460ff1681565b60405161011a9190610a56565b60665460405163a6170b5160e01b81526000916001600160a01b0381169163a6170b519161028691600160a01b90910460ff16908690600401610a64565b60206040518083038186803b15801561029e57600080fd5b505afa1580156102b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d69190610a8a565b92915050565b606654604051630d1f7d6360e31b81526000916001600160a01b038116916368fbeb189161028691600160a01b90910460ff16908690600401610a64565b6033546001600160a01b0316331461034d5760405162461bcd60e51b815260040161034490610aab565b60405180910390fd5b61035681610612565b50565b6033546001600160a01b031633146103835760405162461bcd60e51b815260040161034490610aab565b61035681610668565b6065546001600160a01b031633146103b65760405162461bcd60e51b815260040161034490610b42565b60006103c182610248565b6000848152606760205260409020549091506103dd90826106b3565b6000848152606760205260409081902091909155517fc94dc324f0c4f025f229aaac825915c9524860787daeb3d08728a9818b393915906104219085908590610b52565b60405180910390a1505050565b6033546001600160a01b031633146104585760405162461bcd60e51b815260040161034490610aab565b610356816106c6565b6033546001600160a01b0316331461048b5760405162461bcd60e51b815260040161034490610aab565b610495600061071f565b565b60665460405163912397c360e01b81526000916001600160a01b0381169163912397c3916104d391600160a01b90910460ff1690600401610a56565b60206040518083038186803b1580156104eb57600080fd5b505afa1580156104ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105239190610a8a565b905090565b600054610100900460ff166105435760005460ff1615610547565b303b155b6105635760405162461bcd60e51b815260040161034490610bab565b600054610100900460ff16158015610585576000805461ffff19166101011790555b6105928484846003610771565b80156105a4576000805461ff00191690555b50505050565b6033546001600160a01b031633146105d45760405162461bcd60e51b815260040161034490610aab565b6001600160a01b0381166105fa5760405162461bcd60e51b815260040161034490610bfe565b6103568161071f565b6001600160a01b03163b151590565b606580546001600160a01b0319166001600160a01b0383161790556040517ff2071e1b38ab3c561fb5d090a912ad00d911946da5f417b4eac46024a2f6ed609061065d90839061098d565b60405180910390a150565b606680546001600160a01b0319166001600160a01b0383161790556040517fcb398744d70dd9f7eb9e1e65c9c74f4d3276143240e25316135eb6585db6c1c19061065d9083906109ff565b60006106bf8284610c24565b9392505050565b6066805482919060ff60a01b1916600160a01b8360048111156106eb576106eb610a0d565b02179055507ffd8efb560fb934faf6ee365a559c93f9a480bad1f14c5041d2cb8468296f87f08160405161065d9190610a56565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166107985760405162461bcd60e51b815260040161034490610c84565b6107a18461071f565b6107aa836107bc565b6107b3826107e3565b6105a48161080a565b600054610100900460ff1661034d5760405162461bcd60e51b815260040161034490610c84565b600054610100900460ff166103835760405162461bcd60e51b815260040161034490610c84565b600054610100900460ff166104585760405162461bcd60e51b815260040161034490610c84565b805b811461035657600080fd5b80356102d681610831565b60006020828403121561085e5761085e600080fd5b600061086a848461083e565b949350505050565b805b82525050565b602081016102d68284610872565b60006001600160a01b0382166102d6565b61083381610888565b80356102d681610899565b6000602082840312156108c2576108c2600080fd5b600061086a84846108a2565b60006102d682610888565b610833816108ce565b80356102d6816108d9565b60006020828403121561090257610902600080fd5b600061086a84846108e2565b6000806040838503121561092457610924600080fd5b6000610930858561083e565b92505060206109418582860161083e565b9150509250929050565b6005811061035657600080fd5b80356102d68161094b565b60006020828403121561097857610978600080fd5b600061086a8484610958565b61087481610888565b602081016102d68284610984565b6000806000606084860312156109b3576109b3600080fd5b60006109bf86866108a2565b93505060206109d0868287016108a2565b92505060406109e1868287016108e2565b9150509250925092565b60006102d6826108ce565b610874816109eb565b602081016102d682846109f6565b634e487b7160e01b600052602160045260246000fd5b6005811061035657610356610a0d565b80610a3d81610a23565b919050565b60006102d682610a33565b61087481610a42565b602081016102d68284610a4d565b60408101610a728285610a4d565b6106bf6020830184610872565b80516102d681610831565b600060208284031215610a9f57610a9f600080fd5b600061086a8484610a7f565b60208082528181019081527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726040830152606082016102d6565b603781526000602082017f447374436861696e5061796d656e74577261707065723a2063616c6c6572206981527f73206e6f742064737420636861696e207061796d656e74000000000000000000602082015291505b5060400190565b602080825281016102d681610ae5565b60408101610a728285610872565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b60208201529150610b3b565b602080825281016102d681610b60565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150610b3b565b602080825281016102d681610bbb565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c3757610c37610c0e565b500190565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150610b3b565b602080825281016102d681610c3c56fea2646970667358221220863425f005b57d32a1faaa1c4f582894826678a4cdc4493f1cf4d278b82bdf6764736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063c2cd9b2b11610066578063c2cd9b2b146101e1578063f2fde38b14610201578063f60cfa5914610214578063f7d221901461022757600080fd5b8063715018a6146101a45780638da5cb5b146101ac578063a035b1fe146101c6578063c0c53b8b146101ce57600080fd5b80634513f23d116100d35780634513f23d1461014b578063467aa8de1461015e578063691b2a6d146101715780636c7f15421461018457600080fd5b806306570749146100fa5780630ab2b6b914610123578063429aafd914610136575b600080fd5b61010d610108366004610849565b610248565b60405161011a919061087a565b60405180910390f35b61010d610131366004610849565b6102dc565b6101496101443660046108ad565b61031a565b005b6101496101593660046108ed565b610359565b61014961016c36600461090e565b61038c565b61014961017f366004610963565b61042e565b61010d610192366004610849565b60009081526067602052604090205490565b610149610461565b6033546001600160a01b03165b60405161011a919061098d565b61010d610497565b6101496101dc36600461099b565b610528565b6066546101f4906001600160a01b031681565b60405161011a91906109ff565b61014961020f3660046108ad565b6105aa565b6065546101b9906001600160a01b031681565b60665461023b90600160a01b900460ff1681565b60405161011a9190610a56565b60665460405163a6170b5160e01b81526000916001600160a01b0381169163a6170b519161028691600160a01b90910460ff16908690600401610a64565b60206040518083038186803b15801561029e57600080fd5b505afa1580156102b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d69190610a8a565b92915050565b606654604051630d1f7d6360e31b81526000916001600160a01b038116916368fbeb189161028691600160a01b90910460ff16908690600401610a64565b6033546001600160a01b0316331461034d5760405162461bcd60e51b815260040161034490610aab565b60405180910390fd5b61035681610612565b50565b6033546001600160a01b031633146103835760405162461bcd60e51b815260040161034490610aab565b61035681610668565b6065546001600160a01b031633146103b65760405162461bcd60e51b815260040161034490610b42565b60006103c182610248565b6000848152606760205260409020549091506103dd90826106b3565b6000848152606760205260409081902091909155517fc94dc324f0c4f025f229aaac825915c9524860787daeb3d08728a9818b393915906104219085908590610b52565b60405180910390a1505050565b6033546001600160a01b031633146104585760405162461bcd60e51b815260040161034490610aab565b610356816106c6565b6033546001600160a01b0316331461048b5760405162461bcd60e51b815260040161034490610aab565b610495600061071f565b565b60665460405163912397c360e01b81526000916001600160a01b0381169163912397c3916104d391600160a01b90910460ff1690600401610a56565b60206040518083038186803b1580156104eb57600080fd5b505afa1580156104ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105239190610a8a565b905090565b600054610100900460ff166105435760005460ff1615610547565b303b155b6105635760405162461bcd60e51b815260040161034490610bab565b600054610100900460ff16158015610585576000805461ffff19166101011790555b6105928484846003610771565b80156105a4576000805461ff00191690555b50505050565b6033546001600160a01b031633146105d45760405162461bcd60e51b815260040161034490610aab565b6001600160a01b0381166105fa5760405162461bcd60e51b815260040161034490610bfe565b6103568161071f565b6001600160a01b03163b151590565b606580546001600160a01b0319166001600160a01b0383161790556040517ff2071e1b38ab3c561fb5d090a912ad00d911946da5f417b4eac46024a2f6ed609061065d90839061098d565b60405180910390a150565b606680546001600160a01b0319166001600160a01b0383161790556040517fcb398744d70dd9f7eb9e1e65c9c74f4d3276143240e25316135eb6585db6c1c19061065d9083906109ff565b60006106bf8284610c24565b9392505050565b6066805482919060ff60a01b1916600160a01b8360048111156106eb576106eb610a0d565b02179055507ffd8efb560fb934faf6ee365a559c93f9a480bad1f14c5041d2cb8468296f87f08160405161065d9190610a56565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166107985760405162461bcd60e51b815260040161034490610c84565b6107a18461071f565b6107aa836107bc565b6107b3826107e3565b6105a48161080a565b600054610100900460ff1661034d5760405162461bcd60e51b815260040161034490610c84565b600054610100900460ff166103835760405162461bcd60e51b815260040161034490610c84565b600054610100900460ff166104585760405162461bcd60e51b815260040161034490610c84565b805b811461035657600080fd5b80356102d681610831565b60006020828403121561085e5761085e600080fd5b600061086a848461083e565b949350505050565b805b82525050565b602081016102d68284610872565b60006001600160a01b0382166102d6565b61083381610888565b80356102d681610899565b6000602082840312156108c2576108c2600080fd5b600061086a84846108a2565b60006102d682610888565b610833816108ce565b80356102d6816108d9565b60006020828403121561090257610902600080fd5b600061086a84846108e2565b6000806040838503121561092457610924600080fd5b6000610930858561083e565b92505060206109418582860161083e565b9150509250929050565b6005811061035657600080fd5b80356102d68161094b565b60006020828403121561097857610978600080fd5b600061086a8484610958565b61087481610888565b602081016102d68284610984565b6000806000606084860312156109b3576109b3600080fd5b60006109bf86866108a2565b93505060206109d0868287016108a2565b92505060406109e1868287016108e2565b9150509250925092565b60006102d6826108ce565b610874816109eb565b602081016102d682846109f6565b634e487b7160e01b600052602160045260246000fd5b6005811061035657610356610a0d565b80610a3d81610a23565b919050565b60006102d682610a33565b61087481610a42565b602081016102d68284610a4d565b60408101610a728285610a4d565b6106bf6020830184610872565b80516102d681610831565b600060208284031215610a9f57610a9f600080fd5b600061086a8484610a7f565b60208082528181019081527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726040830152606082016102d6565b603781526000602082017f447374436861696e5061796d656e74577261707065723a2063616c6c6572206981527f73206e6f742064737420636861696e207061796d656e74000000000000000000602082015291505b5060400190565b602080825281016102d681610ae5565b60408101610a728285610872565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b60208201529150610b3b565b602080825281016102d681610b60565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150610b3b565b602080825281016102d681610bbb565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c3757610c37610c0e565b500190565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150610b3b565b602080825281016102d681610c3c56fea2646970667358221220863425f005b57d32a1faaa1c4f582894826678a4cdc4493f1cf4d278b82bdf6764736f6c63430008090033",
  "devdoc": {
    "author": "Alexandas",
    "details": "AR storage controller controller",
    "kind": "dev",
    "methods": {
      "balanceOf(bytes32)": {
        "details": "resource balance",
        "params": {
          "account": "user account"
        },
        "returns": {
          "_0": "balance of the account"
        }
      },
      "expand(bytes32,uint256)": {
        "details": "expand user's normal resource balance",
        "params": {
          "account": "user account",
          "value": "token value in resource decimals(18)"
        }
      },
      "getAmountOf(uint256)": {
        "details": "calculate resource amount for value"
      },
      "getValueOf(uint256)": {
        "details": "calculate resource value for amount"
      },
      "initialize(address,address,address)": {
        "details": "proxy initialize function",
        "params": {
          "adaptor": "resource adaptor contract address",
          "dstChainPayment": "dst chain payment contract address",
          "owner": "contract owner"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "price()": {
        "details": "return resource price"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setDstChainPayment(address)": {
        "details": "update dst chain payment contract address",
        "params": {
          "_dstChainPayment": "dst chain payment contract address"
        }
      },
      "setResourceAdaptor(address)": {
        "details": "update resource adaptor contract",
        "params": {
          "_adaptor": "resource adaptor contract"
        }
      },
      "setResourceType(uint8)": {
        "details": "update resource type",
        "params": {
          "_resourceType": "resource type"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 147,
        "contract": "contracts/resources/controllers/normal/ARStorageController.sol:ARStorageController",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 150,
        "contract": "contracts/resources/controllers/normal/ARStorageController.sol:ARStorageController",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 970,
        "contract": "contracts/resources/controllers/normal/ARStorageController.sol:ARStorageController",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/resources/controllers/normal/ARStorageController.sol:ARStorageController",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 122,
        "contract": "contracts/resources/controllers/normal/ARStorageController.sol:ARStorageController",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 6185,
        "contract": "contracts/resources/controllers/normal/ARStorageController.sol:ARStorageController",
        "label": "dstChainPayment",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 7102,
        "contract": "contracts/resources/controllers/normal/ARStorageController.sol:ARStorageController",
        "label": "adaptor",
        "offset": 0,
        "slot": "102",
        "type": "t_contract(IResourceAdaptor)8589"
      },
      {
        "astId": 7107,
        "contract": "contracts/resources/controllers/normal/ARStorageController.sol:ARStorageController",
        "label": "resourceType",
        "offset": 20,
        "slot": "102",
        "type": "t_enum(ResourceType)4825"
      },
      {
        "astId": 8221,
        "contract": "contracts/resources/controllers/normal/ARStorageController.sol:ARStorageController",
        "label": "balances",
        "offset": 0,
        "slot": "103",
        "type": "t_mapping(t_bytes32,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IResourceAdaptor)8589": {
        "encoding": "inplace",
        "label": "contract IResourceAdaptor",
        "numberOfBytes": "20"
      },
      "t_enum(ResourceType)4825": {
        "encoding": "inplace",
        "label": "enum ResourceData.ResourceType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}