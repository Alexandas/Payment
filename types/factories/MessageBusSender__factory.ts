/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MessageBusSender,
  MessageBusSenderInterface,
} from "../MessageBusSender";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISigsVerifier",
        name: "_sigsVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeBase",
        type: "uint256",
      },
    ],
    name: "FeeBaseUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feePerByte",
        type: "uint256",
      },
    ],
    name: "FeePerByteUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dstChainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Message",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dstChainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bridge",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "srcTransferId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "MessageWithTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "calcFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePerByte",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dstChainId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dstChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_srcBridge",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_srcTransferId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "sendMessageWithTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFeeBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFeePerByte",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sigsVerifier",
    outputs: [
      {
        internalType: "contract ISigsVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_cumulativeFee",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "_sigs",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "withdrawnFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610f22380380610f2283398101604081905261002f91610099565b61003833610049565b6001600160a01b03166080526100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b608051610e376100eb600039600081816101ce01526103670152610e376000f3fe6080604052600436106100a75760003560e01c806395e911a81161006457806395e911a8146101935780639f3ce55a146101a9578063ccf2683b146101bc578063e2c1ed25146101f0578063f2fde38b14610210578063f60bbe2a1461023057600080fd5b806306c28bd6146100ac5780632ff4c411146100ce5780634289fbb3146100ee5780635335dca2146101015780635b3e5f50146101345780638da5cb5b14610161575b600080fd5b3480156100b857600080fd5b506100cc6100c7366004610866565b610246565b005b3480156100da57600080fd5b506100cc6100e93660046108e7565b6102c4565b6100cc6100fc3660046109dd565b61050e565b34801561010d57600080fd5b5061012161011c366004610a55565b6105f7565b6040519081526020015b60405180910390f35b34801561014057600080fd5b5061012161014f366004610a97565b60036020526000908152604090205481565b34801561016d57600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161012b565b34801561019f57600080fd5b5061012160015481565b6100cc6101b7366004610ab2565b61061b565b3480156101c857600080fd5b5061017b7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101fc57600080fd5b506100cc61020b366004610866565b6106fe565b34801561021c57600080fd5b506100cc61022b366004610a97565b61076c565b34801561023c57600080fd5b5061012160025481565b336102596000546001600160a01b031690565b6001600160a01b0316146102885760405162461bcd60e51b815260040161027f90610b0c565b60405180910390fd5b60018190556040518181527f892dfdc99ecd3bb4f2f2cb118dca02f0bd16640ff156d3c6459d4282e336a5f2906020015b60405180910390a150565b6000463060405160200161030892919091825260601b6bffffffffffffffffffffffff191660208201526a776974686472617746656560a81b6034820152603f0190565b60408051808303601f19018152828252805160209182012090830181905260608c901b6bffffffffffffffffffffffff19168383015260548084018c9052825180850390910181526074840192839052633416de1160e11b90925292507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163682dbc22916103ae918b908b908b908b908b908b90607801610c78565b60006040518083038186803b1580156103c657600080fd5b505afa1580156103da573d6000803e3d6000fd5b505050506001600160a01b038916600090815260036020526040812054610401908a610d2a565b9050600081116104535760405162461bcd60e51b815260206004820152601960248201527f4e6f206e657720616d6f756e7420746f20776974686472617700000000000000604482015260640161027f565b6001600160a01b038a166000818152600360205260408082208c90555190919061c35090849084818181858888f193505050503d80600081146104b2576040519150601f19603f3d011682016040523d82523d6000602084013e6104b7565b606091505b50509050806105015760405162461bcd60e51b81526020600482015260166024820152756661696c656420746f2077697468647261772066656560501b604482015260640161027f565b5050505050505050505050565b468514156105505760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590818da185a5b9259608a1b604482015260640161027f565b600061055c83836105f7565b9050803410156105a15760405162461bcd60e51b815260206004820152601060248201526f496e73756666696369656e742066656560801b604482015260640161027f565b336001600160a01b03167f172762498a59a3bc4fed3f2b63f94f17ea0193cffdc304fe7d3eaf4d342d2f66888888888888346040516105e69796959493929190610d41565b60405180910390a250505050505050565b6002546000906106079083610d90565b6001546106149190610daf565b9392505050565b4683141561065d5760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590818da185a5b9259608a1b604482015260640161027f565b600061066983836105f7565b9050803410156106ae5760405162461bcd60e51b815260206004820152601060248201526f496e73756666696369656e742066656560801b604482015260640161027f565b336001600160a01b03167fce3972bfffe49d317e1d128047a97a3d86b25c94f6f04409f988ef854d25e0e486868686346040516106ef959493929190610dc7565b60405180910390a25050505050565b336107116000546001600160a01b031690565b6001600160a01b0316146107375760405162461bcd60e51b815260040161027f90610b0c565b60028190556040518181527f210d4d5d2d36d571207dac98e383e2441c684684c885fb2d7c54f8d24422074c906020016102b9565b3361077f6000546001600160a01b031690565b6001600160a01b0316146107a55760405162461bcd60e51b815260040161027f90610b0c565b6001600160a01b03811661080a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161027f565b61081381610816565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561087857600080fd5b5035919050565b80356001600160a01b038116811461089657600080fd5b919050565b60008083601f8401126108ad57600080fd5b50813567ffffffffffffffff8111156108c557600080fd5b6020830191508360208260051b85010111156108e057600080fd5b9250929050565b60008060008060008060008060a0898b03121561090357600080fd5b61090c8961087f565b975060208901359650604089013567ffffffffffffffff8082111561093057600080fd5b61093c8c838d0161089b565b909850965060608b013591508082111561095557600080fd5b6109618c838d0161089b565b909650945060808b013591508082111561097a57600080fd5b506109878b828c0161089b565b999c989b5096995094979396929594505050565b60008083601f8401126109ad57600080fd5b50813567ffffffffffffffff8111156109c557600080fd5b6020830191508360208285010111156108e057600080fd5b60008060008060008060a087890312156109f657600080fd5b6109ff8761087f565b955060208701359450610a146040880161087f565b935060608701359250608087013567ffffffffffffffff811115610a3757600080fd5b610a4389828a0161099b565b979a9699509497509295939492505050565b60008060208385031215610a6857600080fd5b823567ffffffffffffffff811115610a7f57600080fd5b610a8b8582860161099b565b90969095509350505050565b600060208284031215610aa957600080fd5b6106148261087f565b60008060008060608587031215610ac857600080fd5b610ad18561087f565b935060208501359250604085013567ffffffffffffffff811115610af457600080fd5b610b008782880161099b565b95989497509550505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b81835260006020808501808196508560051b810191508460005b87811015610bee5782840389528135601e19883603018112610ba557600080fd5b8701803567ffffffffffffffff811115610bbe57600080fd5b803603891315610bcd57600080fd5b610bda8682898501610b41565b9a87019a9550505090840190600101610b84565b5091979650505050505050565b8183526000602080850194508260005b85811015610c37576001600160a01b03610c248361087f565b1687529582019590820190600101610c0b565b509495945050505050565b81835260006001600160fb1b03831115610c5b57600080fd5b8260051b8083602087013760009401602001938452509192915050565b608081526000885180608084015260005b81811015610ca6576020818c0181015160a0868401015201610c89565b81811115610cb857600060a083860101525b50601f01601f1916820182810360a09081016020850152610cdc908201898b610b6a565b90508281036040840152610cf1818789610bfb565b90508281036060840152610d06818587610c42565b9a9950505050505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610d3c57610d3c610d14565b500390565b6001600160a01b03888116825260208201889052861660408201526060810185905260c060808201819052600090610d7c9083018587610b41565b90508260a083015298975050505050505050565b6000816000190483118215151615610daa57610daa610d14565b500290565b60008219821115610dc257610dc2610d14565b500190565b60018060a01b0386168152846020820152608060408201526000610def608083018587610b41565b9050826060830152969550505050505056fea264697066735822122065c3a147666d7b6ba2b8b34547b8d67e88b9fbaac32e118c6ef5e751de8a633064736f6c63430008090033";

export class MessageBusSender__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _sigsVerifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MessageBusSender> {
    return super.deploy(
      _sigsVerifier,
      overrides || {}
    ) as Promise<MessageBusSender>;
  }
  getDeployTransaction(
    _sigsVerifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_sigsVerifier, overrides || {});
  }
  attach(address: string): MessageBusSender {
    return super.attach(address) as MessageBusSender;
  }
  connect(signer: Signer): MessageBusSender__factory {
    return super.connect(signer) as MessageBusSender__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MessageBusSenderInterface {
    return new utils.Interface(_abi) as MessageBusSenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MessageBusSender {
    return new Contract(address, _abi, signerOrProvider) as MessageBusSender;
  }
}
