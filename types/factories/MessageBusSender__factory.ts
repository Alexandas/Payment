/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MessageBusSender,
  MessageBusSenderInterface,
} from "../MessageBusSender";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISigsVerifier",
        name: "_sigsVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeBase",
        type: "uint256",
      },
    ],
    name: "FeeBaseUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feePerByte",
        type: "uint256",
      },
    ],
    name: "FeePerByteUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dstChainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Message",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dstChainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bridge",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "srcTransferId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "MessageWithTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "calcFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePerByte",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dstChainId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dstChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_srcBridge",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_srcTransferId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "sendMessageWithTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFeeBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFeePerByte",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sigsVerifier",
    outputs: [
      {
        internalType: "contract ISigsVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_cumulativeFee",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "_sigs",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "withdrawnFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620011b5380380620011b58339810160408190526200003491620000e8565b6200003f3362000051565b6001600160a01b031660805262000115565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160a01b0382165b92915050565b6000620000ae82620000a1565b620000cc81620000b4565b8114620000d857600080fd5b50565b8051620000ae81620000c1565b600060208284031215620000ff57620000ff600080fd5b60006200010d8484620000db565b949350505050565b60805161107d62000138600039600081816101c501526102fb015261107d6000f3fe6080604052600436106100a75760003560e01c806395e911a81161006457806395e911a81461018a5780639f3ce55a146101a0578063ccf2683b146101b3578063e2c1ed25146101f4578063f2fde38b14610214578063f60bbe2a1461023457600080fd5b806306c28bd6146100ac5780632ff4c411146100ce5780634289fbb3146100ee5780635335dca2146101015780635b3e5f50146101375780638da5cb5b14610164575b600080fd5b3480156100b857600080fd5b506100cc6100c7366004610732565b61024a565b005b3480156100da57600080fd5b506100cc6100e93660046107d2565b6102cc565b6100cc6100fc3660046108f3565b610489565b34801561010d57600080fd5b5061012161011c366004610989565b61052d565b60405161012e91906109d9565b60405180910390f35b34801561014357600080fd5b506101216101523660046109e7565b60036020526000908152604090205481565b34801561017057600080fd5b506000546001600160a01b031660405161012e9190610a11565b34801561019657600080fd5b5061012160015481565b6100cc6101ae366004610a1f565b610553565b3480156101bf57600080fd5b506101e77f000000000000000000000000000000000000000000000000000000000000000081565b60405161012e9190610aac565b34801561020057600080fd5b506100cc61020f366004610732565b6105f1565b34801561022057600080fd5b506100cc61022f3660046109e7565b61065f565b34801561024057600080fd5b5061012160025481565b3361025d6000546001600160a01b031690565b6001600160a01b03161461028c5760405162461bcd60e51b815260040161028390610aef565b60405180910390fd5b60018190556040517f892dfdc99ecd3bb4f2f2cb118dca02f0bd16640ff156d3c6459d4282e336a5f2906102c19083906109d9565b60405180910390a150565b600046306040516020016102e1929190610b2d565b6040516020818303038152906040528051906020012090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663682dbc22828b8b60405160200161033d93929190610b68565b6040516020818303038152906040528989898989896040518863ffffffff1660e01b81526004016103749796959493929190610d9c565b60006040518083038186803b15801561038c57600080fd5b505afa1580156103a0573d6000803e3d6000fd5b505050506001600160a01b0389166000908152600360205260408120546103c7908a610e0f565b9050600081116103e95760405162461bcd60e51b815260040161028390610e5a565b6001600160a01b038a166000818152600360205260408082208c90555190919061c35090849061041890610e6a565b600060405180830381858888f193505050503d8060008114610456576040519150601f19603f3d011682016040523d82523d6000602084013e61045b565b606091505b505090508061047c5760405162461bcd60e51b815260040161028390610e9f565b5050505050505050505050565b468514156104a95760405162461bcd60e51b815260040161028390610ed5565b60006104b5838361052d565b9050803410156104d75760405162461bcd60e51b815260040161028390610f0c565b336001600160a01b03167f172762498a59a3bc4fed3f2b63f94f17ea0193cffdc304fe7d3eaf4d342d2f668888888888883460405161051c9796959493929190610f1c565b60405180910390a250505050505050565b60025460009061053d9083610f7f565b60015461054a9190610f9e565b90505b92915050565b468314156105735760405162461bcd60e51b815260040161028390610ed5565b600061057f838361052d565b9050803410156105a15760405162461bcd60e51b815260040161028390610f0c565b336001600160a01b03167fce3972bfffe49d317e1d128047a97a3d86b25c94f6f04409f988ef854d25e0e486868686346040516105e2959493929190610fb6565b60405180910390a25050505050565b336106046000546001600160a01b031690565b6001600160a01b03161461062a5760405162461bcd60e51b815260040161028390610aef565b60028190556040517f210d4d5d2d36d571207dac98e383e2441c684684c885fb2d7c54f8d24422074c906102c19083906109d9565b336106726000546001600160a01b031690565b6001600160a01b0316146106985760405162461bcd60e51b815260040161028390610aef565b6001600160a01b0381166106be5760405162461bcd60e51b815260040161028390610ffd565b6106c7816106ca565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b805b81146106c757600080fd5b803561054d8161071a565b60006020828403121561074757610747600080fd5b60006107538484610727565b949350505050565b60006001600160a01b03821661054d565b61071c8161075b565b803561054d8161076c565b60008083601f84011261079557610795600080fd5b50813567ffffffffffffffff8111156107b0576107b0600080fd5b6020830191508360208202830111156107cb576107cb600080fd5b9250929050565b60008060008060008060008060a0898b0312156107f1576107f1600080fd5b60006107fd8b8b610775565b985050602061080e8b828c01610727565b975050604089013567ffffffffffffffff81111561082e5761082e600080fd5b61083a8b828c01610780565b9650965050606089013567ffffffffffffffff81111561085c5761085c600080fd5b6108688b828c01610780565b9450945050608089013567ffffffffffffffff81111561088a5761088a600080fd5b6108968b828c01610780565b92509250509295985092959890939650565b60008083601f8401126108bd576108bd600080fd5b50813567ffffffffffffffff8111156108d8576108d8600080fd5b6020830191508360018202830111156107cb576107cb600080fd5b60008060008060008060a0878903121561090f5761090f600080fd5b600061091b8989610775565b965050602061092c89828a01610727565b955050604061093d89828a01610775565b945050606061094e89828a01610727565b935050608087013567ffffffffffffffff81111561096e5761096e600080fd5b61097a89828a016108a8565b92509250509295509295509295565b6000806020838503121561099f5761099f600080fd5b823567ffffffffffffffff8111156109b9576109b9600080fd5b6109c5858286016108a8565b92509250509250929050565b805b82525050565b6020810161054d82846109d1565b6000602082840312156109fc576109fc600080fd5b60006107538484610775565b6109d38161075b565b6020810161054d8284610a08565b60008060008060608587031215610a3857610a38600080fd5b6000610a448787610775565b9450506020610a5587828801610727565b935050604085013567ffffffffffffffff811115610a7557610a75600080fd5b610a81878288016108a8565b95989497509550505050565b600061054d8261075b565b600061054d82610a8d565b6109d381610a98565b6020810161054d8284610aa3565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b6020808252810161054d81610aba565b806109d3565b600061054d8260601b90565b600061054d82610b05565b6109d3610b288261075b565b610b11565b6000610b398285610aff565b602082019150610b498284610b1c565b6a776974686472617746656560a81b6014830190815291601f01610753565b6000610b748286610aff565b602082019150610b848285610b1c565b601482019150610b948284610aff565b506020019392505050565b60005b83811015610bba578181015183820152602001610ba2565b83811115610bc9576000848401525b50505050565b6000610bd9825190565b808452602084019350610bf0818560208601610b9f565b601f19601f8201165b9093019392505050565b82818337506000910152565b8183526000602084019350610c25838584610c03565b601f19601f840116610bf9565b6000610753848484610c0f565b6000808335601e1936859003018112610c5a57610c5a600080fd5b83810160208101935035915067ffffffffffffffff821115610c7e57610c7e600080fd5b36829003841315610c9157610c91600080fd5b509250929050565b818352600060208401935083602084028101838060005b87811015610ceb578484038952610cc78284610c3f565b610cd2868284610c32565b95506020840160209b909b019a93505050600101610cb0565b5091979650505050505050565b6000610d048383610a08565b505060200190565b600061054a6020840184610775565b8183526000602084019350818060005b85811015610d5857610d3d8284610d0c565b610d478882610cf8565b975060208301925050600101610d2b565b509495945050505050565b81835260006020840193506001600160fb1b03831115610d8557610d85600080fd5b602083029250610d96838584610c03565b50500190565b60808082528101610dad818a610bcf565b90508181036020830152610dc281888a610c99565b90508181036040830152610dd7818688610d1b565b90508181036060830152610dec818486610d63565b9998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015610e2157610e21610df9565b500390565b601981526000602082017f4e6f206e657720616d6f756e7420746f2077697468647261770000000000000081529150610ae8565b6020808252810161054d81610e26565b60008161054d565b60168152600060208201756661696c656420746f2077697468647261772066656560501b81529150610ae8565b6020808252810161054d81610e72565b600f81526000602082016e125b9d985b1a590818da185a5b9259608a1b81529150610ae8565b6020808252810161054d81610eaf565b601081526000602082016f496e73756666696369656e742066656560801b81529150610ae8565b6020808252810161054d81610ee5565b60c08101610f2a828a610a08565b610f3760208301896109d1565b610f446040830188610a08565b610f5160608301876109d1565b8181036080830152610f64818587610c0f565b9050610f7360a08301846109d1565b98975050505050505050565b6000816000190483118215151615610f9957610f99610df9565b500290565b60008219821115610fb157610fb1610df9565b500190565b60808101610fc48288610a08565b610fd160208301876109d1565b8181036040830152610fe4818587610c0f565b9050610ff360608301846109d1565b9695505050505050565b6020808252810161054d81602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201526564647265737360d01b60408201526060019056fea2646970667358221220ab778647d396b3c511095a9fb5fb794f1ac1b9b8f16336972ca7c17eecc2011464736f6c63430008090033";

export class MessageBusSender__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _sigsVerifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MessageBusSender> {
    return super.deploy(
      _sigsVerifier,
      overrides || {}
    ) as Promise<MessageBusSender>;
  }
  getDeployTransaction(
    _sigsVerifier: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_sigsVerifier, overrides || {});
  }
  attach(address: string): MessageBusSender {
    return super.attach(address) as MessageBusSender;
  }
  connect(signer: Signer): MessageBusSender__factory {
    return super.connect(signer) as MessageBusSender__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MessageBusSenderInterface {
    return new utils.Interface(_abi) as MessageBusSenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MessageBusSender {
    return new Contract(address, _abi, signerOrProvider) as MessageBusSender;
  }
}
