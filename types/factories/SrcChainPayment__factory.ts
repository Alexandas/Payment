/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SrcChainPayment,
  SrcChainPaymentInterface,
} from "../SrcChainPayment";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "contract IMessageSender",
        name: "_messageSender",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IMessageSender",
        name: "messageSender",
        type: "address",
      },
    ],
    name: "MessageSenderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "NativeWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxSlippage",
        type: "uint32",
      },
    ],
    name: "Paid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "contract IMessageSender",
        name: "_messageSender",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "Init_Payment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addPauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "calcFee",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "encodeMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isPauser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageSender",
    outputs: [
      {
        internalType: "contract IMessageSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pausers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        internalType: "uint32",
        name: "maxSlippage",
        type: "uint32",
      },
    ],
    name: "pay",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renouncePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMessageSender",
        name: "_messageSender",
        type: "address",
      },
    ],
    name: "setMessageSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "totalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "withdrawNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200253f3803806200253f8339810160408190526200003491620003a4565b600054610100900460ff16620000515760005460ff16156200005b565b6200005b620000f0565b620000835760405162461bcd60e51b81526004016200007a9062000460565b60405180910390fd5b600054610100900460ff16158015620000a6576000805461ffff19166101011790555b620000b1856200010e565b620000bc8462000160565b620000c78362000198565b620000d282620001cd565b8015620000e5576000805461ff00191690555b505050505062000586565b600062000108306200020260201b62000af31760201c565b15905090565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166200018a5760405162461bcd60e51b81526004016200007a90620004bb565b620001958162000211565b50565b600054610100900460ff16620001c25760405162461bcd60e51b81526004016200007a90620004bb565b6200019581620002ad565b600054610100900460ff16620001f75760405162461bcd60e51b81526004016200007a90620004bb565b6200019581620002fa565b6001600160a01b03163b151590565b6001600160a01b03811660009081526097602052604090205460ff16156200024d5760405162461bcd60e51b81526004016200007a906200050c565b6001600160a01b03811660009081526097602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890620002a29083906200052f565b60405180910390a150565b60ca80546001600160a01b0319166001600160a01b0383161790556040517fd3a626089875a97be3c9702fd526ab6e28bd30904def789b36b301f03afadcaf90620002a290839062000576565b60cb80546001600160a01b0319166001600160a01b0383169081179091556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3091620002a29162000576565b60006001600160a01b0382165b92915050565b620003668162000348565b81146200019557600080fd5b805162000355816200035b565b6000620003558262000348565b62000366816200037f565b805162000355816200038c565b60008060008060808587031215620003bf57620003bf600080fd5b6000620003cd878762000372565b9450506020620003e08782880162000372565b9350506040620003f38782880162000397565b9250506060620004068782880162000397565b91505092959194509250565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291505b5060400190565b60208082528101620003558162000412565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b6020820152915062000459565b60208082528101620003558162000472565b602181526000602082017f5061757365723a204163636f756e7420697320616c72656164792070617573658152603960f91b6020820152915062000459565b602080825281016200035581620004cd565b620005298162000348565b82525050565b602081016200035582846200051e565b60006001600160a01b03821662000355565b600062000355826200053f565b6000620003558262000551565b62000529816200055e565b602081016200035582846200056b565b611fa980620005966000396000f3fe6080604052600436106101355760003560e01c806380f51c12116100ab578063bb3711111161006f578063bb37111114610341578063bc67f83214610361578063d67bdd2514610381578063d9caed12146103ae578063f2fde38b146103ce578063fc0c546a146103ee57600080fd5b806380f51c121461029657806382dc1ec4146102c65780638456cb59146102e65780638c22ea5d146102fb5780638da5cb5b1461031b57600080fd5b80635b45197d116100fd5780635b45197d146101e75780635c975abb1461021457806363d804611461022c5780636b2c0f551461024c5780636ef8d66d1461026c578063715018a61461028157600080fd5b806307b18bde1461013a578063144fa6d71461015c578063201ce97c1461017c5780633f4ba83a146101a557806346fbf68e146101ba575b600080fd5b34801561014657600080fd5b5061015a610155366004611146565b61040e565b005b34801561016857600080fd5b5061015a6101773660046111a2565b6104c5565b61018f61018a36600461140b565b6104fb565b60405161019c91906114a6565b60405180910390f35b3480156101b157600080fd5b5061015a6106aa565b3480156101c657600080fd5b506101da6101d53660046114b4565b6106d9565b60405161019c91906114dd565b3480156101f357600080fd5b506102076102023660046114eb565b6106f7565b60405161019c91906115c8565b34801561022057600080fd5b5060655460ff166101da565b34801561023857600080fd5b5061015a6102473660046115d9565b61072a565b34801561025857600080fd5b5061015a6102673660046114b4565b6107c4565b34801561027857600080fd5b5061015a6107f7565b34801561028d57600080fd5b5061015a610800565b3480156102a257600080fd5b506101da6102b13660046114b4565b60976020526000908152604090205460ff1681565b3480156102d257600080fd5b5061015a6102e13660046114b4565b610834565b3480156102f257600080fd5b5061015a610867565b34801561030757600080fd5b5061018f6103163660046114eb565b610894565b34801561032757600080fd5b506033546001600160a01b031660405161019c919061163a565b34801561034d57600080fd5b5061018f61035c366004611648565b610929565b34801561036d57600080fd5b5061015a61037c3660046111a2565b6109f6565b34801561038d57600080fd5b5060ca546103a1906001600160a01b031681565b60405161019c9190611697565b3480156103ba57600080fd5b5061015a6103c93660046116a5565b610a29565b3480156103da57600080fd5b5061015a6103e93660046114b4565b610a9a565b3480156103fa57600080fd5b5060cb546103a1906001600160a01b031681565b6033546001600160a01b031633146104415760405162461bcd60e51b81526004016104389061172a565b60405180910390fd5b6040516000906001600160a01b0384169083156108fc0290849084818181858888f193505050509050806104875760405162461bcd60e51b81526004016104389061177f565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e482783836040516104b892919061178f565b60405180910390a1505050565b6033546001600160a01b031633146104ef5760405162461bcd60e51b81526004016104389061172a565b6104f881610b02565b50565b600061050960655460ff1690565b156105265760405162461bcd60e51b8152600401610438906117d1565b600260985414156105495760405162461bcd60e51b815260040161043890611815565b6002609855600061055984610929565b905061056481610b59565b60cb5490915061057f906001600160a01b0316333084610b70565b60ca5460cb5461059c916001600160a01b03918216911683610bce565b60ca5460cb546001600160a01b039182169163f718845391349116848a886105c68e838e8e6106f7565b60016040518863ffffffff1660e01b81526004016105e996959493929190611885565b6020604051808303818588803b15801561060257600080fd5b505af1158015610616573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061063b91906118e6565b60ca5460cb5491935061065c916001600160a01b0390811691166000610bce565b7fc223cf6bda1a6d43dd56cef5d4b95b1a593f38f295323e7e59a30522bf49c1cf8787878787604051610693959493929190611a30565b60405180910390a150600160985595945050505050565b6106b3336106d9565b6106cf5760405162461bcd60e51b815260040161043890611ab7565b6106d7610c96565b565b6001600160a01b031660009081526097602052604090205460ff1690565b6060848484846040516020016107109493929190611ac7565b60405160208183030381529060405290505b949350505050565b600054610100900460ff166107455760005460ff1615610749565b303b155b6107655760405162461bcd60e51b815260040161043890611b4c565b600054610100900460ff16158015610787576000805461ffff19166101011790555b61079085610cfc565b61079984610d4e565b6107a283610d75565b6107ab82610d9c565b80156107bd576000805461ff00191690555b5050505050565b6033546001600160a01b031633146107ee5760405162461bcd60e51b81526004016104389061172a565b6104f881610dc3565b6106d733610dc3565b6033546001600160a01b0316331461082a5760405162461bcd60e51b81526004016104389061172a565b6106d76000610cfc565b6033546001600160a01b0316331461085e5760405162461bcd60e51b81526004016104389061172a565b6104f881610e38565b610870336106d9565b61088c5760405162461bcd60e51b815260040161043890611ab7565b6106d7610eb1565b60ca546000906001600160a01b0316635335dca26108b4878787876106f7565b6040518263ffffffff1660e01b81526004016108d091906115c8565b60206040518083038186803b1580156108e857600080fd5b505afa1580156108fc573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092091906118e6565b95945050505050565b60008082511161094b5760405162461bcd60e51b815260040161043890611ba3565b60005b82518110156109f05760005b83828151811061096c5761096c611bb3565b602002602001015160200151518110156109dd576109c984838151811061099557610995611bb3565b60200260200101516020015182815181106109b2576109b2611bb3565b602002602001015184610f0990919063ffffffff16565b9250806109d581611bdf565b91505061095a565b50806109e881611bdf565b91505061094e565b50919050565b6033546001600160a01b03163314610a205760405162461bcd60e51b81526004016104389061172a565b6104f881610f1c565b6033546001600160a01b03163314610a535760405162461bcd60e51b81526004016104389061172a565b610a676001600160a01b0384168383610f67565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988383836040516104b893929190611bfa565b6033546001600160a01b03163314610ac45760405162461bcd60e51b81526004016104389061172a565b6001600160a01b038116610aea5760405162461bcd60e51b815260040161043890611c65565b6104f881610cfc565b6001600160a01b03163b151590565b60cb80546001600160a01b0319166001600160a01b0383169081179091556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3091610b4e91611697565b60405180910390a150565b6000610b6a8264e8d4a51000610f86565b92915050565b610bc8846323b872dd60e01b858585604051602401610b9193929190611c75565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f92565b50505050565b801580610c565750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90610c049030908690600401611c83565b60206040518083038186803b158015610c1c57600080fd5b505afa158015610c30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5491906118e6565b155b610c725760405162461bcd60e51b815260040161043890611cf1565b610c918363095ea7b360e01b8484604051602401610b91929190611d01565b505050565b60655460ff16610cb85760405162461bcd60e51b815260040161043890611d3a565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610cf2919061163a565b60405180910390a1565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661085e5760405162461bcd60e51b815260040161043890611d92565b600054610100900460ff16610a205760405162461bcd60e51b815260040161043890611d92565b600054610100900460ff166104ef5760405162461bcd60e51b815260040161043890611d92565b610dcc816106d9565b610de85760405162461bcd60e51b815260040161043890611dd6565b6001600160a01b03811660009081526097602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90610b4e90839061163a565b610e41816106d9565b15610e5e5760405162461bcd60e51b815260040161043890611e24565b6001600160a01b03811660009081526097602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890610b4e90839061163a565b60655460ff1615610ed45760405162461bcd60e51b8152600401610438906117d1565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ce53390565b6000610f158284611e34565b9392505050565b60ca80546001600160a01b0319166001600160a01b0383161790556040517fd3a626089875a97be3c9702fd526ab6e28bd30904def789b36b301f03afadcaf90610b4e908390611697565b610c918363a9059cbb60e01b8484604051602401610b91929190611d01565b6000610f158284611e62565b6000610fe7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110219092919063ffffffff16565b805190915015610c9157808060200190518101906110059190611e89565b610c915760405162461bcd60e51b815260040161043890611ef1565b60606107228484600085856001600160a01b0385163b6110535760405162461bcd60e51b815260040161043890611f35565b600080866001600160a01b0316858760405161106f9190611f67565b60006040518083038185875af1925050503d80600081146110ac576040519150601f19603f3d011682016040523d82523d6000602084013e6110b1565b606091505b50915091506110c18282866110cc565b979650505050505050565b606083156110db575081610f15565b8251156110eb5782518084602001fd5b8160405162461bcd60e51b815260040161043891906115c8565b60006001600160a01b038216610b6a565b61111f81611105565b81146104f857600080fd5b8035610b6a81611116565b8061111f565b8035610b6a81611135565b6000806040838503121561115c5761115c600080fd5b6000611168858561112a565b92505060206111798582860161113b565b9150509250929050565b6000610b6a82611105565b61111f81611183565b8035610b6a8161118e565b6000602082840312156111b7576111b7600080fd5b60006107228484611197565b67ffffffffffffffff811661111f565b8035610b6a816111c3565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561121a5761121a6111de565b6040525050565b600061122c60405190565b905061123882826111f4565b919050565b600067ffffffffffffffff821115611257576112576111de565b5060209081020190565b600581106104f857600080fd5b8035610b6a81611261565b600061128c6112878461123d565b611221565b838152905060208082019084028301858111156112ab576112ab600080fd5b835b818110156112cf57806112c0888261113b565b845250602092830192016112ad565b5050509392505050565b600082601f8301126112ed576112ed600080fd5b8135610722848260208601611279565b60006040828403121561131257611312600080fd5b61131c6040611221565b9050600061132a848461126e565b825250602082013567ffffffffffffffff81111561134a5761134a600080fd5b611356848285016112d9565b60208301525092915050565b60006113706112878461123d565b8381529050602080820190840283018581111561138f5761138f600080fd5b835b818110156112cf57803567ffffffffffffffff8111156113b3576113b3600080fd5b8086016113c089826112fd565b8552505060209283019201611391565b600082601f8301126113e4576113e4600080fd5b8135610722848260208601611362565b63ffffffff811661111f565b8035610b6a816113f4565b600080600080600060a0868803121561142657611426600080fd5b6000611432888861112a565b9550506020611443888289016111d3565b94505060406114548882890161113b565b935050606086013567ffffffffffffffff81111561147457611474600080fd5b611480888289016113d0565b925050608061149188828901611400565b9150509295509295909350565b805b82525050565b60208101610b6a828461149e565b6000602082840312156114c9576114c9600080fd5b6000610722848461112a565b8015156114a0565b60208101610b6a82846114d5565b6000806000806080858703121561150457611504600080fd5b6000611510878761112a565b9450506020611521878288016111d3565b93505060406115328782880161113b565b925050606085013567ffffffffffffffff81111561155257611552600080fd5b61155e878288016113d0565b91505092959194509250565b60005b8381101561158557818101518382015260200161156d565b83811115610bc85750506000910152565b60006115a0825190565b8084526020840193506115b781856020860161156a565b601f01601f19169290920192915050565b60208082528101610f158184611596565b600080600080608085870312156115f2576115f2600080fd5b60006115fe878761112a565b945050602061160f8782880161112a565b935050604061162087828801611197565b925050606061155e87828801611197565b6114a081611105565b60208101610b6a8284611631565b60006020828403121561165d5761165d600080fd5b813567ffffffffffffffff81111561167757611677600080fd5b610722848285016113d0565b6000610b6a82611183565b6114a081611683565b60208101610b6a828461168e565b6000806000606084860312156116bd576116bd600080fd5b60006116c98686611197565b93505060206116da8682870161112a565b92505060406116eb8682870161113b565b9150509250925092565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b60208082528101610b6a816116f5565b602581526000602082017f5061796d656e743a207769746864726177206e617469766520746f6b656e2066815264185a5b195960da1b602082015291505b5060400190565b60208082528101610b6a8161173a565b6040810161179d828561168e565b610f15602083018461149e565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b81529150611723565b60208082528101610b6a816117aa565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081529150611723565b60208082528101610b6a816117e1565b67ffffffffffffffff81166114a0565b63ffffffff81166114a0565b634e487b7160e01b600052602160045260246000fd5b600781106104f8576104f8611841565b8061123881611857565b6000610b6a82611867565b6114a081611871565b60c081016118938289611631565b6118a0602083018861149e565b6118ad6040830187611825565b6118ba6060830186611835565b81810360808301526118cc8185611596565b90506110c160a083018461187c565b8051610b6a81611135565b6000602082840312156118fb576118fb600080fd5b600061072284846118db565b600581106104f8576104f8611841565b8061123881611907565b6000610b6a82611917565b6114a081611921565b6000611941838361149e565b505060200190565b6000611953825190565b80845260209384019383018060005b838110156119875781516119768882611935565b975060208301925050600101611962565b509495945050505050565b805160009060408401906119a6858261192c565b50602083015184820360208601526109208282611949565b6000610f158383611992565b60006119d4825190565b808452602084019350836020820285016119ee8560200190565b8060005b85811015611a235784840389528151611a0b85826119be565b94506020830160209a909a01999250506001016119f2565b5091979650505050505050565b60a08101611a3e8288611631565b611a4b6020830187611825565b611a58604083018661149e565b8181036060830152611a6a81856119ca565b9050611a796080830184611835565b9695505050505050565b601c81526000602082017f5061757365723a2043616c6c6572206973206e6f74207061757365720000000081529150611723565b60208082528101610b6a81611a83565b60808101611ad58287611631565b611ae26020830186611825565b611aef604083018561149e565b8181036060830152611a7981846119ca565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b60208201529150611778565b60208082528101610b6a81611b01565b602a81526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152690c2c8e640d8cadccee8d60b31b60208201529150611778565b60208082528101610b6a81611b5c565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611bf357611bf3611bc9565b5060010190565b60608101611c08828661168e565b611c156020830185611631565b610722604083018461149e565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150611778565b60208082528101610b6a81611c22565b60608101611c088286611631565b60408101611c918285611631565b610f156020830184611631565b603681526000602082017f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60208201529150611778565b60208082528101610b6a81611c9e565b6040810161179d8285611631565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b81529150611723565b60208082528101610b6a81611d0f565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150611778565b60208082528101610b6a81611d4a565b601d81526000602082017f5061757365723a204163636f756e74206973206e6f742070617573657200000081529150611723565b60208082528101610b6a81611da2565b602181526000602082017f5061757365723a204163636f756e7420697320616c72656164792070617573658152603960f91b60208201529150611778565b60208082528101610b6a81611de6565b60008219821115611e4757611e47611bc9565b500190565b634e487b7160e01b600052601260045260246000fd5b600082611e7157611e71611e4c565b500490565b80151561111f565b8051610b6a81611e76565b600060208284031215611e9e57611e9e600080fd5b60006107228484611e7e565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b60208201529150611778565b60208082528101610b6a81611eaa565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081529150611723565b60208082528101610b6a81611f01565b6000611f4f825190565b611f5d81856020860161156a565b9290920192915050565b6000610f158284611f4556fea2646970667358221220086c93ea896b3a0fccca90421c358d2d99ddfc4752f5032eb5e7c4f28b28177464736f6c63430008090033";

export class SrcChainPayment__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    owner: string,
    pauser: string,
    _messageSender: string,
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SrcChainPayment> {
    return super.deploy(
      owner,
      pauser,
      _messageSender,
      token,
      overrides || {}
    ) as Promise<SrcChainPayment>;
  }
  getDeployTransaction(
    owner: string,
    pauser: string,
    _messageSender: string,
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      owner,
      pauser,
      _messageSender,
      token,
      overrides || {}
    );
  }
  attach(address: string): SrcChainPayment {
    return super.attach(address) as SrcChainPayment;
  }
  connect(signer: Signer): SrcChainPayment__factory {
    return super.connect(signer) as SrcChainPayment__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SrcChainPaymentInterface {
    return new utils.Interface(_abi) as SrcChainPaymentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SrcChainPayment {
    return new Contract(address, _abi, signerOrProvider) as SrcChainPayment;
  }
}
