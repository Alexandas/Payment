/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SrcChainPayment,
  SrcChainPaymentInterface,
} from "../SrcChainPayment";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "contract IMessageSender",
        name: "_messageSender",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IMessageSender",
        name: "messageSender",
        type: "address",
      },
    ],
    name: "MessageSenderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "NativeWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxSlippage",
        type: "uint32",
      },
    ],
    name: "Paid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "contract IMessageSender",
        name: "_messageSender",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "Init_Payment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addPauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "calcFee",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "encodeMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "contract IMessageSender",
        name: "_messageSender",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isPauser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageSender",
    outputs: [
      {
        internalType: "contract IMessageSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pausers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        internalType: "uint32",
        name: "maxSlippage",
        type: "uint32",
      },
    ],
    name: "pay",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renouncePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMessageSender",
        name: "_messageSender",
        type: "address",
      },
    ],
    name: "setMessageSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "totalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "withdrawNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200254a3803806200254a8339810160408190526200003491620003a4565b600054610100900460ff16620000515760005460ff16156200005b565b6200005b620000f0565b620000835760405162461bcd60e51b81526004016200007a9062000460565b60405180910390fd5b600054610100900460ff16158015620000a6576000805461ffff19166101011790555b620000b1856200010e565b620000bc8462000160565b620000c78362000198565b620000d282620001cd565b8015620000e5576000805461ff00191690555b505050505062000586565b600062000108306200020260201b62000afe1760201c565b15905090565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166200018a5760405162461bcd60e51b81526004016200007a90620004bb565b620001958162000211565b50565b600054610100900460ff16620001c25760405162461bcd60e51b81526004016200007a90620004bb565b6200019581620002ad565b600054610100900460ff16620001f75760405162461bcd60e51b81526004016200007a90620004bb565b6200019581620002fa565b6001600160a01b03163b151590565b6001600160a01b03811660009081526097602052604090205460ff16156200024d5760405162461bcd60e51b81526004016200007a906200050c565b6001600160a01b03811660009081526097602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890620002a29083906200052f565b60405180910390a150565b60ca80546001600160a01b0319166001600160a01b0383161790556040517fd3a626089875a97be3c9702fd526ab6e28bd30904def789b36b301f03afadcaf90620002a290839062000576565b60cb80546001600160a01b0319166001600160a01b0383169081179091556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3091620002a29162000576565b60006001600160a01b0382165b92915050565b620003668162000348565b81146200019557600080fd5b805162000355816200035b565b6000620003558262000348565b62000366816200037f565b805162000355816200038c565b60008060008060808587031215620003bf57620003bf600080fd5b6000620003cd878762000372565b9450506020620003e08782880162000372565b9350506040620003f38782880162000397565b9250506060620004068782880162000397565b91505092959194509250565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291505b5060400190565b60208082528101620003558162000412565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b6020820152915062000459565b60208082528101620003558162000472565b602181526000602082017f5061757365723a204163636f756e7420697320616c72656164792070617573658152603960f91b6020820152915062000459565b602080825281016200035581620004cd565b620005298162000348565b82525050565b602081016200035582846200051e565b60006001600160a01b03821662000355565b600062000355826200053f565b6000620003558262000551565b62000529816200055e565b602081016200035582846200056b565b611fb480620005966000396000f3fe6080604052600436106101405760003560e01c806380f51c12116100b6578063bc67f8321161006f578063bc67f8321461036c578063d67bdd251461038c578063d9caed12146103b9578063f2fde38b146103d9578063f8c8765e14610237578063fc0c546a146103f957600080fd5b806380f51c12146102a157806382dc1ec4146102d15780638456cb59146102f15780638c22ea5d146103065780638da5cb5b14610326578063bb3711111461034c57600080fd5b80635b45197d116101085780635b45197d146101f25780635c975abb1461021f57806363d80461146102375780636b2c0f55146102575780636ef8d66d14610277578063715018a61461028c57600080fd5b806307b18bde14610145578063144fa6d714610167578063201ce97c146101875780633f4ba83a146101b057806346fbf68e146101c5575b600080fd5b34801561015157600080fd5b50610165610160366004611151565b610419565b005b34801561017357600080fd5b506101656101823660046111ad565b6104d0565b61019a610195366004611416565b610506565b6040516101a791906114b1565b60405180910390f35b3480156101bc57600080fd5b506101656106b5565b3480156101d157600080fd5b506101e56101e03660046114bf565b6106e4565b6040516101a791906114e8565b3480156101fe57600080fd5b5061021261020d3660046114f6565b610702565b6040516101a791906115d3565b34801561022b57600080fd5b5060655460ff166101e5565b34801561024357600080fd5b506101656102523660046115e4565b610735565b34801561026357600080fd5b506101656102723660046114bf565b6107cf565b34801561028357600080fd5b50610165610802565b34801561029857600080fd5b5061016561080b565b3480156102ad57600080fd5b506101e56102bc3660046114bf565b60976020526000908152604090205460ff1681565b3480156102dd57600080fd5b506101656102ec3660046114bf565b61083f565b3480156102fd57600080fd5b50610165610872565b34801561031257600080fd5b5061019a6103213660046114f6565b61089f565b34801561033257600080fd5b506033546001600160a01b03166040516101a79190611645565b34801561035857600080fd5b5061019a610367366004611653565b610934565b34801561037857600080fd5b506101656103873660046111ad565b610a01565b34801561039857600080fd5b5060ca546103ac906001600160a01b031681565b6040516101a791906116a2565b3480156103c557600080fd5b506101656103d43660046116b0565b610a34565b3480156103e557600080fd5b506101656103f43660046114bf565b610aa5565b34801561040557600080fd5b5060cb546103ac906001600160a01b031681565b6033546001600160a01b0316331461044c5760405162461bcd60e51b815260040161044390611735565b60405180910390fd5b6040516000906001600160a01b0384169083156108fc0290849084818181858888f193505050509050806104925760405162461bcd60e51b81526004016104439061178a565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e482783836040516104c392919061179a565b60405180910390a1505050565b6033546001600160a01b031633146104fa5760405162461bcd60e51b815260040161044390611735565b61050381610b0d565b50565b600061051460655460ff1690565b156105315760405162461bcd60e51b8152600401610443906117dc565b600260985414156105545760405162461bcd60e51b815260040161044390611820565b6002609855600061056484610934565b905061056f81610b64565b60cb5490915061058a906001600160a01b0316333084610b7b565b60ca5460cb546105a7916001600160a01b03918216911683610bd9565b60ca5460cb546001600160a01b039182169163f718845391349116848a886105d18e838e8e610702565b60016040518863ffffffff1660e01b81526004016105f496959493929190611890565b6020604051808303818588803b15801561060d57600080fd5b505af1158015610621573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061064691906118f1565b60ca5460cb54919350610667916001600160a01b0390811691166000610bd9565b7fc223cf6bda1a6d43dd56cef5d4b95b1a593f38f295323e7e59a30522bf49c1cf878787878760405161069e959493929190611a3b565b60405180910390a150600160985595945050505050565b6106be336106e4565b6106da5760405162461bcd60e51b815260040161044390611ac2565b6106e2610ca1565b565b6001600160a01b031660009081526097602052604090205460ff1690565b60608484848460405160200161071b9493929190611ad2565b60405160208183030381529060405290505b949350505050565b600054610100900460ff166107505760005460ff1615610754565b303b155b6107705760405162461bcd60e51b815260040161044390611b57565b600054610100900460ff16158015610792576000805461ffff19166101011790555b61079b85610d07565b6107a484610d59565b6107ad83610d80565b6107b682610da7565b80156107c8576000805461ff00191690555b5050505050565b6033546001600160a01b031633146107f95760405162461bcd60e51b815260040161044390611735565b61050381610dce565b6106e233610dce565b6033546001600160a01b031633146108355760405162461bcd60e51b815260040161044390611735565b6106e26000610d07565b6033546001600160a01b031633146108695760405162461bcd60e51b815260040161044390611735565b61050381610e43565b61087b336106e4565b6108975760405162461bcd60e51b815260040161044390611ac2565b6106e2610ebc565b60ca546000906001600160a01b0316635335dca26108bf87878787610702565b6040518263ffffffff1660e01b81526004016108db91906115d3565b60206040518083038186803b1580156108f357600080fd5b505afa158015610907573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092b91906118f1565b95945050505050565b6000808251116109565760405162461bcd60e51b815260040161044390611bae565b60005b82518110156109fb5760005b83828151811061097757610977611bbe565b602002602001015160200151518110156109e8576109d48483815181106109a0576109a0611bbe565b60200260200101516020015182815181106109bd576109bd611bbe565b602002602001015184610f1490919063ffffffff16565b9250806109e081611bea565b915050610965565b50806109f381611bea565b915050610959565b50919050565b6033546001600160a01b03163314610a2b5760405162461bcd60e51b815260040161044390611735565b61050381610f27565b6033546001600160a01b03163314610a5e5760405162461bcd60e51b815260040161044390611735565b610a726001600160a01b0384168383610f72565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988383836040516104c393929190611c05565b6033546001600160a01b03163314610acf5760405162461bcd60e51b815260040161044390611735565b6001600160a01b038116610af55760405162461bcd60e51b815260040161044390611c70565b61050381610d07565b6001600160a01b03163b151590565b60cb80546001600160a01b0319166001600160a01b0383169081179091556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3091610b59916116a2565b60405180910390a150565b6000610b758264e8d4a51000610f91565b92915050565b610bd3846323b872dd60e01b858585604051602401610b9c93929190611c80565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f9d565b50505050565b801580610c615750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90610c0f9030908690600401611c8e565b60206040518083038186803b158015610c2757600080fd5b505afa158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f91906118f1565b155b610c7d5760405162461bcd60e51b815260040161044390611cfc565b610c9c8363095ea7b360e01b8484604051602401610b9c929190611d0c565b505050565b60655460ff16610cc35760405162461bcd60e51b815260040161044390611d45565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610cfd9190611645565b60405180910390a1565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166108695760405162461bcd60e51b815260040161044390611d9d565b600054610100900460ff16610a2b5760405162461bcd60e51b815260040161044390611d9d565b600054610100900460ff166104fa5760405162461bcd60e51b815260040161044390611d9d565b610dd7816106e4565b610df35760405162461bcd60e51b815260040161044390611de1565b6001600160a01b03811660009081526097602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90610b59908390611645565b610e4c816106e4565b15610e695760405162461bcd60e51b815260040161044390611e2f565b6001600160a01b03811660009081526097602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890610b59908390611645565b60655460ff1615610edf5760405162461bcd60e51b8152600401610443906117dc565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610cf03390565b6000610f208284611e3f565b9392505050565b60ca80546001600160a01b0319166001600160a01b0383161790556040517fd3a626089875a97be3c9702fd526ab6e28bd30904def789b36b301f03afadcaf90610b599083906116a2565b610c9c8363a9059cbb60e01b8484604051602401610b9c929190611d0c565b6000610f208284611e6d565b6000610ff2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661102c9092919063ffffffff16565b805190915015610c9c57808060200190518101906110109190611e94565b610c9c5760405162461bcd60e51b815260040161044390611efc565b606061072d8484600085856001600160a01b0385163b61105e5760405162461bcd60e51b815260040161044390611f40565b600080866001600160a01b0316858760405161107a9190611f72565b60006040518083038185875af1925050503d80600081146110b7576040519150601f19603f3d011682016040523d82523d6000602084013e6110bc565b606091505b50915091506110cc8282866110d7565b979650505050505050565b606083156110e6575081610f20565b8251156110f65782518084602001fd5b8160405162461bcd60e51b815260040161044391906115d3565b60006001600160a01b038216610b75565b61112a81611110565b811461050357600080fd5b8035610b7581611121565b8061112a565b8035610b7581611140565b6000806040838503121561116757611167600080fd5b60006111738585611135565b925050602061118485828601611146565b9150509250929050565b6000610b7582611110565b61112a8161118e565b8035610b7581611199565b6000602082840312156111c2576111c2600080fd5b600061072d84846111a2565b67ffffffffffffffff811661112a565b8035610b75816111ce565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715611225576112256111e9565b6040525050565b600061123760405190565b905061124382826111ff565b919050565b600067ffffffffffffffff821115611262576112626111e9565b5060209081020190565b6005811061050357600080fd5b8035610b758161126c565b600061129761129284611248565b61122c565b838152905060208082019084028301858111156112b6576112b6600080fd5b835b818110156112da57806112cb8882611146565b845250602092830192016112b8565b5050509392505050565b600082601f8301126112f8576112f8600080fd5b813561072d848260208601611284565b60006040828403121561131d5761131d600080fd5b611327604061122c565b905060006113358484611279565b825250602082013567ffffffffffffffff81111561135557611355600080fd5b611361848285016112e4565b60208301525092915050565b600061137b61129284611248565b8381529050602080820190840283018581111561139a5761139a600080fd5b835b818110156112da57803567ffffffffffffffff8111156113be576113be600080fd5b8086016113cb8982611308565b855250506020928301920161139c565b600082601f8301126113ef576113ef600080fd5b813561072d84826020860161136d565b63ffffffff811661112a565b8035610b75816113ff565b600080600080600060a0868803121561143157611431600080fd5b600061143d8888611135565b955050602061144e888289016111de565b945050604061145f88828901611146565b935050606086013567ffffffffffffffff81111561147f5761147f600080fd5b61148b888289016113db565b925050608061149c8882890161140b565b9150509295509295909350565b805b82525050565b60208101610b7582846114a9565b6000602082840312156114d4576114d4600080fd5b600061072d8484611135565b8015156114ab565b60208101610b7582846114e0565b6000806000806080858703121561150f5761150f600080fd5b600061151b8787611135565b945050602061152c878288016111de565b935050604061153d87828801611146565b925050606085013567ffffffffffffffff81111561155d5761155d600080fd5b611569878288016113db565b91505092959194509250565b60005b83811015611590578181015183820152602001611578565b83811115610bd35750506000910152565b60006115ab825190565b8084526020840193506115c2818560208601611575565b601f01601f19169290920192915050565b60208082528101610f2081846115a1565b600080600080608085870312156115fd576115fd600080fd5b60006116098787611135565b945050602061161a87828801611135565b935050604061162b878288016111a2565b9250506060611569878288016111a2565b6114ab81611110565b60208101610b75828461163c565b60006020828403121561166857611668600080fd5b813567ffffffffffffffff81111561168257611682600080fd5b61072d848285016113db565b6000610b758261118e565b6114ab8161168e565b60208101610b758284611699565b6000806000606084860312156116c8576116c8600080fd5b60006116d486866111a2565b93505060206116e586828701611135565b92505060406116f686828701611146565b9150509250925092565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b60208082528101610b7581611700565b602581526000602082017f5061796d656e743a207769746864726177206e617469766520746f6b656e2066815264185a5b195960da1b602082015291505b5060400190565b60208082528101610b7581611745565b604081016117a88285611699565b610f2060208301846114a9565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b8152915061172e565b60208082528101610b75816117b5565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c008152915061172e565b60208082528101610b75816117ec565b67ffffffffffffffff81166114ab565b63ffffffff81166114ab565b634e487b7160e01b600052602160045260246000fd5b600781106105035761050361184c565b8061124381611862565b6000610b7582611872565b6114ab8161187c565b60c0810161189e828961163c565b6118ab60208301886114a9565b6118b86040830187611830565b6118c56060830186611840565b81810360808301526118d781856115a1565b90506110cc60a0830184611887565b8051610b7581611140565b60006020828403121561190657611906600080fd5b600061072d84846118e6565b600581106105035761050361184c565b8061124381611912565b6000610b7582611922565b6114ab8161192c565b600061194c83836114a9565b505060200190565b600061195e825190565b80845260209384019383018060005b838110156119925781516119818882611940565b97506020830192505060010161196d565b509495945050505050565b805160009060408401906119b18582611937565b506020830151848203602086015261092b8282611954565b6000610f20838361199d565b60006119df825190565b808452602084019350836020820285016119f98560200190565b8060005b85811015611a2e5784840389528151611a1685826119c9565b94506020830160209a909a01999250506001016119fd565b5091979650505050505050565b60a08101611a49828861163c565b611a566020830187611830565b611a6360408301866114a9565b8181036060830152611a7581856119d5565b9050611a846080830184611840565b9695505050505050565b601c81526000602082017f5061757365723a2043616c6c6572206973206e6f7420706175736572000000008152915061172e565b60208082528101610b7581611a8e565b60808101611ae0828761163c565b611aed6020830186611830565b611afa60408301856114a9565b8181036060830152611a8481846119d5565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b60208201529150611783565b60208082528101610b7581611b0c565b602a81526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152690c2c8e640d8cadccee8d60b31b60208201529150611783565b60208082528101610b7581611b67565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611bfe57611bfe611bd4565b5060010190565b60608101611c138286611699565b611c20602083018561163c565b61072d60408301846114a9565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150611783565b60208082528101610b7581611c2d565b60608101611c13828661163c565b60408101611c9c828561163c565b610f20602083018461163c565b603681526000602082017f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60208201529150611783565b60208082528101610b7581611ca9565b604081016117a8828561163c565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b8152915061172e565b60208082528101610b7581611d1a565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150611783565b60208082528101610b7581611d55565b601d81526000602082017f5061757365723a204163636f756e74206973206e6f74207061757365720000008152915061172e565b60208082528101610b7581611dad565b602181526000602082017f5061757365723a204163636f756e7420697320616c72656164792070617573658152603960f91b60208201529150611783565b60208082528101610b7581611df1565b60008219821115611e5257611e52611bd4565b500190565b634e487b7160e01b600052601260045260246000fd5b600082611e7c57611e7c611e57565b500490565b80151561112a565b8051610b7581611e81565b600060208284031215611ea957611ea9600080fd5b600061072d8484611e89565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b60208201529150611783565b60208082528101610b7581611eb5565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000008152915061172e565b60208082528101610b7581611f0c565b6000611f5a825190565b611f68818560208601611575565b9290920192915050565b6000610f208284611f5056fea2646970667358221220462c5b2d66e75acb2c6858cf5a33d12117d24e239e2bd104a5404c645505bba964736f6c63430008090033";

export class SrcChainPayment__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    owner: string,
    pauser: string,
    _messageSender: string,
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SrcChainPayment> {
    return super.deploy(
      owner,
      pauser,
      _messageSender,
      token,
      overrides || {}
    ) as Promise<SrcChainPayment>;
  }
  getDeployTransaction(
    owner: string,
    pauser: string,
    _messageSender: string,
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      owner,
      pauser,
      _messageSender,
      token,
      overrides || {}
    );
  }
  attach(address: string): SrcChainPayment {
    return super.attach(address) as SrcChainPayment;
  }
  connect(signer: Signer): SrcChainPayment__factory {
    return super.connect(signer) as SrcChainPayment__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SrcChainPaymentInterface {
    return new utils.Interface(_abi) as SrcChainPaymentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SrcChainPayment {
    return new Contract(address, _abi, signerOrProvider) as SrcChainPayment;
  }
}
