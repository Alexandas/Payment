/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SrcChainPayment,
  SrcChainPaymentInterface,
} from "../SrcChainPayment";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IMessageSender",
        name: "messageSender",
        type: "address",
      },
    ],
    name: "MessageSenderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "NativeWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxSlippage",
        type: "uint32",
      },
    ],
    name: "Paid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "contract IMessageSender",
        name: "_messageSender",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "Init_Payment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addPauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "calcFee",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "encodeMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "contract IMessageSender",
        name: "_messageSender",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isPauser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageSender",
    outputs: [
      {
        internalType: "contract IMessageSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pausers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        internalType: "uint32",
        name: "maxSlippage",
        type: "uint32",
      },
    ],
    name: "pay",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renouncePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMessageSender",
        name: "_messageSender",
        type: "address",
      },
    ],
    name: "setMessageSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "totalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600054610100900460ff166200002f5760005460ff161562000039565b620000396200009e565b620000615760405162461bcd60e51b81526004016200005890620000cb565b60405180910390fd5b600054610100900460ff1615801562000084576000805461ffff19166101011790555b801562000097576000805461ff00191690555b5062000124565b6000620000b630620000bc60201b62000afe1760201c565b15905090565b6001600160a01b03163b151590565b602080825281016200011e81602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b92915050565b611fb480620001346000396000f3fe6080604052600436106101405760003560e01c806380f51c12116100b6578063bb3711111161006f578063bb3711111461036c578063bc67f8321461038c578063d67bdd25146103ac578063f2fde38b146103d9578063f8c8765e14610217578063fc0c546a146103f957600080fd5b806380f51c12146102a157806382dc1ec4146102d15780638456cb59146102f15780638c22ea5d146103065780638da5cb5b1461032657806393563a951461034c57600080fd5b80635c975abb116101085780635c975abb146101ff57806363d8046114610217578063699256f4146102375780636b2c0f55146102575780636ef8d66d14610277578063715018a61461028c57600080fd5b8063144fa6d714610145578063201ce97c146101675780633f4ba83a1461019057806346fbf68e146101a55780635b45197d146101d2575b600080fd5b34801561015157600080fd5b5061016561016036600461114b565b610419565b005b61017a6101753660046113d9565b610458565b6040516101879190611474565b60405180910390f35b34801561019c57600080fd5b50610165610607565b3480156101b157600080fd5b506101c56101c0366004611482565b610636565b60405161018791906114ab565b3480156101de57600080fd5b506101f26101ed3660046114b9565b610654565b6040516101879190611596565b34801561020b57600080fd5b5060655460ff166101c5565b34801561022357600080fd5b506101656102323660046115a7565b610687565b34801561024357600080fd5b506101656102523660046115ff565b610721565b34801561026357600080fd5b50610165610272366004611482565b6107cf565b34801561028357600080fd5b50610165610802565b34801561029857600080fd5b5061016561080b565b3480156102ad57600080fd5b506101c56102bc366004611482565b60976020526000908152604090205460ff1681565b3480156102dd57600080fd5b506101656102ec366004611482565b61083f565b3480156102fd57600080fd5b50610165610872565b34801561031257600080fd5b5061017a6103213660046114b9565b61089f565b34801561033257600080fd5b506033546001600160a01b03166040516101879190611645565b34801561035857600080fd5b50610165610367366004611653565b610934565b34801561037857600080fd5b5061017a6103873660046116a3565b6109a5565b34801561039857600080fd5b506101656103a736600461114b565b610a72565b3480156103b857600080fd5b5060ca546103cc906001600160a01b031681565b60405161018791906116f2565b3480156103e557600080fd5b506101656103f4366004611482565b610aa5565b34801561040557600080fd5b5060cb546103cc906001600160a01b031681565b6033546001600160a01b0316331461044c5760405162461bcd60e51b815260040161044390611735565b60405180910390fd5b61045581610b0d565b50565b600061046660655460ff1690565b156104835760405162461bcd60e51b81526004016104439061176c565b600260985414156104a65760405162461bcd60e51b8152600401610443906117b0565b600260985560006104b6846109a5565b90506104c181610b64565b60cb549091506104dc906001600160a01b0316333084610b7b565b60ca5460cb546104f9916001600160a01b03918216911683610bd9565b60ca5460cb546001600160a01b039182169163f718845391349116848a886105238e838e8e610654565b60016040518863ffffffff1660e01b815260040161054696959493929190611820565b6020604051808303818588803b15801561055f57600080fd5b505af1158015610573573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105989190611881565b60ca5460cb549193506105b9916001600160a01b0390811691166000610bd9565b7fc223cf6bda1a6d43dd56cef5d4b95b1a593f38f295323e7e59a30522bf49c1cf87878787876040516105f09594939291906119cb565b60405180910390a150600160985595945050505050565b61061033610636565b61062c5760405162461bcd60e51b815260040161044390611a52565b610634610ca1565b565b6001600160a01b031660009081526097602052604090205460ff1690565b60608484848460405160200161066d9493929190611a62565b60405160208183030381529060405290505b949350505050565b600054610100900460ff166106a25760005460ff16156106a6565b303b155b6106c25760405162461bcd60e51b815260040161044390611aea565b600054610100900460ff161580156106e4576000805461ffff19166101011790555b6106ed85610d07565b6106f684610d59565b6106ff83610d80565b61070882610da7565b801561071a576000805461ff00191690555b5050505050565b6033546001600160a01b0316331461074b5760405162461bcd60e51b815260040161044390611735565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f193505050509050806107915760405162461bcd60e51b815260040161044390611b3c565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e482783836040516107c2929190611b4c565b60405180910390a1505050565b6033546001600160a01b031633146107f95760405162461bcd60e51b815260040161044390611735565b61045581610dce565b61063433610dce565b6033546001600160a01b031633146108355760405162461bcd60e51b815260040161044390611735565b6106346000610d07565b6033546001600160a01b031633146108695760405162461bcd60e51b815260040161044390611735565b61045581610e43565b61087b33610636565b6108975760405162461bcd60e51b815260040161044390611a52565b610634610ebc565b60ca546000906001600160a01b0316635335dca26108bf87878787610654565b6040518263ffffffff1660e01b81526004016108db9190611596565b60206040518083038186803b1580156108f357600080fd5b505afa158015610907573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092b9190611881565b95945050505050565b6033546001600160a01b0316331461095e5760405162461bcd60e51b815260040161044390611735565b6109726001600160a01b0384168383610f14565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63988383836040516107c293929190611b67565b6000808251116109c75760405162461bcd60e51b815260040161044390611bd6565b60005b8251811015610a6c5760005b8382815181106109e8576109e8611be6565b60200260200101516020015151811015610a5957610a45848381518110610a1157610a11611be6565b6020026020010151602001518281518110610a2e57610a2e611be6565b602002602001015184610f3390919063ffffffff16565b925080610a5181611c12565b9150506109d6565b5080610a6481611c12565b9150506109ca565b50919050565b6033546001600160a01b03163314610a9c5760405162461bcd60e51b815260040161044390611735565b61045581610f46565b6033546001600160a01b03163314610acf5760405162461bcd60e51b815260040161044390611735565b6001600160a01b038116610af55760405162461bcd60e51b815260040161044390611c70565b61045581610d07565b6001600160a01b03163b151590565b60cb80546001600160a01b0319166001600160a01b0383169081179091556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3091610b59916116f2565b60405180910390a150565b6000610b758264e8d4a51000610f91565b92915050565b610bd3846323b872dd60e01b858585604051602401610b9c93929190611c80565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610f9d565b50505050565b801580610c615750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90610c0f9030908690600401611c8e565b60206040518083038186803b158015610c2757600080fd5b505afa158015610c3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5f9190611881565b155b610c7d5760405162461bcd60e51b815260040161044390611cfc565b610c9c8363095ea7b360e01b8484604051602401610b9c929190611d0c565b505050565b60655460ff16610cc35760405162461bcd60e51b815260040161044390611d45565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610cfd9190611645565b60405180910390a1565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166108695760405162461bcd60e51b815260040161044390611d9d565b600054610100900460ff16610a9c5760405162461bcd60e51b815260040161044390611d9d565b600054610100900460ff1661044c5760405162461bcd60e51b815260040161044390611d9d565b610dd781610636565b610df35760405162461bcd60e51b815260040161044390611de1565b6001600160a01b03811660009081526097602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90610b59908390611645565b610e4c81610636565b15610e695760405162461bcd60e51b815260040161044390611e2f565b6001600160a01b03811660009081526097602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890610b59908390611645565b60655460ff1615610edf5760405162461bcd60e51b81526004016104439061176c565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610cf03390565b610c9c8363a9059cbb60e01b8484604051602401610b9c929190611d0c565b6000610f3f8284611e3f565b9392505050565b60ca80546001600160a01b0319166001600160a01b0383161790556040517fd3a626089875a97be3c9702fd526ab6e28bd30904def789b36b301f03afadcaf90610b599083906116f2565b6000610f3f8284611e6d565b6000610ff2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661102c9092919063ffffffff16565b805190915015610c9c57808060200190518101906110109190611e94565b610c9c5760405162461bcd60e51b815260040161044390611efc565b606061067f8484600085856001600160a01b0385163b61105e5760405162461bcd60e51b815260040161044390611f40565b600080866001600160a01b0316858760405161107a9190611f72565b60006040518083038185875af1925050503d80600081146110b7576040519150601f19603f3d011682016040523d82523d6000602084013e6110bc565b606091505b50915091506110cc8282866110d7565b979650505050505050565b606083156110e6575081610f3f565b8251156110f65782518084602001fd5b8160405162461bcd60e51b81526004016104439190611596565b60006001600160a01b038216610b75565b6000610b7582611110565b61113581611121565b811461045557600080fd5b8035610b758161112c565b60006020828403121561116057611160600080fd5b600061067f8484611140565b61113581611110565b8035610b758161116c565b67ffffffffffffffff8116611135565b8035610b7581611180565b80611135565b8035610b758161119b565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff821117156111e8576111e86111ac565b6040525050565b60006111fa60405190565b905061120682826111c2565b919050565b600067ffffffffffffffff821115611225576112256111ac565b5060209081020190565b6005811061045557600080fd5b8035610b758161122f565b600061125a6112558461120b565b6111ef565b8381529050602080820190840283018581111561127957611279600080fd5b835b8181101561129d578061128e88826111a1565b8452506020928301920161127b565b5050509392505050565b600082601f8301126112bb576112bb600080fd5b813561067f848260208601611247565b6000604082840312156112e0576112e0600080fd5b6112ea60406111ef565b905060006112f8848461123c565b825250602082013567ffffffffffffffff81111561131857611318600080fd5b611324848285016112a7565b60208301525092915050565b600061133e6112558461120b565b8381529050602080820190840283018581111561135d5761135d600080fd5b835b8181101561129d57803567ffffffffffffffff81111561138157611381600080fd5b80860161138e89826112cb565b855250506020928301920161135f565b600082601f8301126113b2576113b2600080fd5b813561067f848260208601611330565b63ffffffff8116611135565b8035610b75816113c2565b600080600080600060a086880312156113f4576113f4600080fd5b60006114008888611175565b955050602061141188828901611190565b9450506040611422888289016111a1565b935050606086013567ffffffffffffffff81111561144257611442600080fd5b61144e8882890161139e565b925050608061145f888289016113ce565b9150509295509295909350565b805b82525050565b60208101610b75828461146c565b60006020828403121561149757611497600080fd5b600061067f8484611175565b80151561146e565b60208101610b7582846114a3565b600080600080608085870312156114d2576114d2600080fd5b60006114de8787611175565b94505060206114ef87828801611190565b9350506040611500878288016111a1565b925050606085013567ffffffffffffffff81111561152057611520600080fd5b61152c8782880161139e565b91505092959194509250565b60005b8381101561155357818101518382015260200161153b565b83811115610bd35750506000910152565b600061156e825190565b808452602084019350611585818560208601611538565b601f01601f19169290920192915050565b60208082528101610f3f8184611564565b600080600080608085870312156115c0576115c0600080fd5b60006115cc8787611175565b94505060206115dd87828801611175565b93505060406115ee87828801611140565b925050606061152c87828801611140565b6000806040838503121561161557611615600080fd5b60006116218585611175565b9250506020611632858286016111a1565b9150509250929050565b61146e81611110565b60208101610b75828461163c565b60008060006060848603121561166b5761166b600080fd5b60006116778686611140565b935050602061168886828701611175565b9250506040611699868287016111a1565b9150509250925092565b6000602082840312156116b8576116b8600080fd5b813567ffffffffffffffff8111156116d2576116d2600080fd5b61067f8482850161139e565b6000610b7582611121565b61146e816116de565b60208101610b7582846116e9565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b60208082528101610b7581611700565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b8152915061172e565b60208082528101610b7581611745565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c008152915061172e565b60208082528101610b758161177c565b67ffffffffffffffff811661146e565b63ffffffff811661146e565b634e487b7160e01b600052602160045260246000fd5b60078110610455576104556117dc565b80611206816117f2565b6000610b7582611802565b61146e8161180c565b60c0810161182e828961163c565b61183b602083018861146c565b61184860408301876117c0565b61185560608301866117d0565b81810360808301526118678185611564565b90506110cc60a0830184611817565b8051610b758161119b565b60006020828403121561189657611896600080fd5b600061067f8484611876565b60058110610455576104556117dc565b80611206816118a2565b6000610b75826118b2565b61146e816118bc565b60006118dc838361146c565b505060200190565b60006118ee825190565b80845260209384019383018060005b8381101561192257815161191188826118d0565b9750602083019250506001016118fd565b509495945050505050565b8051600090604084019061194185826118c7565b506020830151848203602086015261092b82826118e4565b6000610f3f838361192d565b600061196f825190565b808452602084019350836020820285016119898560200190565b8060005b858110156119be57848403895281516119a68582611959565b94506020830160209a909a019992505060010161198d565b5091979650505050505050565b60a081016119d9828861163c565b6119e660208301876117c0565b6119f3604083018661146c565b8181036060830152611a058185611965565b9050611a1460808301846117d0565b9695505050505050565b601c81526000602082017f5061757365723a2043616c6c6572206973206e6f7420706175736572000000008152915061172e565b60208082528101610b7581611a1e565b60808101611a70828761163c565b611a7d60208301866117c0565b611a8a604083018561146c565b8181036060830152611a148184611965565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291505b5060400190565b60208082528101610b7581611a9c565b602581526000602082017f5061796d656e743a207769746864726177206e617469766520746f6b656e2066815264185a5b195960da1b60208201529150611ae3565b60208082528101610b7581611afa565b60408101611b5a82856116e9565b610f3f602083018461146c565b60608101611b7582866116e9565b611b82602083018561163c565b61067f604083018461146c565b602a81526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152690c2c8e640d8cadccee8d60b31b60208201529150611ae3565b60208082528101610b7581611b8f565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611c2657611c26611bfc565b5060010190565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150611ae3565b60208082528101610b7581611c2d565b60608101611b75828661163c565b60408101611c9c828561163c565b610f3f602083018461163c565b603681526000602082017f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60208201529150611ae3565b60208082528101610b7581611ca9565b60408101611b5a828561163c565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b8152915061172e565b60208082528101610b7581611d1a565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150611ae3565b60208082528101610b7581611d55565b601d81526000602082017f5061757365723a204163636f756e74206973206e6f74207061757365720000008152915061172e565b60208082528101610b7581611dad565b602181526000602082017f5061757365723a204163636f756e7420697320616c72656164792070617573658152603960f91b60208201529150611ae3565b60208082528101610b7581611df1565b60008219821115611e5257611e52611bfc565b500190565b634e487b7160e01b600052601260045260246000fd5b600082611e7c57611e7c611e57565b500490565b801515611135565b8051610b7581611e81565b600060208284031215611ea957611ea9600080fd5b600061067f8484611e89565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b60208201529150611ae3565b60208082528101610b7581611eb5565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000008152915061172e565b60208082528101610b7581611f0c565b6000611f5a825190565b611f68818560208601611538565b9290920192915050565b6000610f3f8284611f5056fea26469706673582212202372d5ed7bfea1cd57d40f7611eb55e210694bdf0735da9fb46defc94e02643564736f6c63430008090033";

export class SrcChainPayment__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SrcChainPayment> {
    return super.deploy(overrides || {}) as Promise<SrcChainPayment>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SrcChainPayment {
    return super.attach(address) as SrcChainPayment;
  }
  connect(signer: Signer): SrcChainPayment__factory {
    return super.connect(signer) as SrcChainPayment__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SrcChainPaymentInterface {
    return new utils.Interface(_abi) as SrcChainPaymentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SrcChainPayment {
    return new Contract(address, _abi, signerOrProvider) as SrcChainPayment;
  }
}
