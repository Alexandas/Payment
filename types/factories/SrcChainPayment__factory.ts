/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SrcChainPayment,
  SrcChainPaymentInterface,
} from "../SrcChainPayment";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IMessageSender",
        name: "messageSender",
        type: "address",
      },
    ],
    name: "MessageSenderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "NativeWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        indexed: false,
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "maxSlippage",
        type: "uint32",
      },
    ],
    name: "Paid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addPauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "calcFee",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "encodeMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "contract IMessageSender",
        name: "_messageSender",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isPauser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "matchResourceToToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "matchTokenToResource",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageSender",
    outputs: [
      {
        internalType: "contract IMessageSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "ownerWithdrawNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pausers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        internalType: "uint32",
        name: "maxSlippage",
        type: "uint32",
      },
    ],
    name: "pay",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renouncePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resourceDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMessageSender",
        name: "_messageSender",
        type: "address",
      },
    ],
    name: "setMessageSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "totalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600054610100900460ff166200002f5760005460ff161562000039565b620000396200009e565b620000615760405162461bcd60e51b81526004016200005890620000cb565b60405180910390fd5b600054610100900460ff1615801562000084576000805461ffff19166101011790555b801562000097576000805461ff00191690555b5062000124565b6000620000b630620000bc60201b62000cc91760201c565b15905090565b6001600160a01b03163b151590565b602080825281016200011e81602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b92915050565b61245780620001346000396000f3fe6080604052600436106101815760003560e01c806382dc1ec4116100d1578063bc67f8321161008a578063f2fde38b11610064578063f2fde38b14610443578063f674529614610463578063f8c8765e14610483578063fc0c546a146104a357600080fd5b8063bc67f832146103d6578063d67bdd25146103f6578063f12973d31461042357600080fd5b806382dc1ec41461031b5780638456cb591461033b5780638c22ea5d146103505780638da5cb5b1461037057806393563a9514610396578063bb371111146103b657600080fd5b80635c975abb1161013e5780636b2c0f55116101185780636b2c0f55146102a15780636ef8d66d146102c1578063715018a6146102d657806380f51c12146102eb57600080fd5b80635c975abb1461025557806368b869541461026d578063699256f41461028157600080fd5b8063144fa6d714610186578063201ce97c146101a85780633b97e856146101d15780633f4ba83a146101e657806346fbf68e146101fb5780635b45197d14610228575b600080fd5b34801561019257600080fd5b506101a66101a136600461136f565b6104c3565b005b6101bb6101b63660046115fd565b610502565b6040516101c89190611698565b60405180910390f35b3480156101dd57600080fd5b506101bb6106b1565b3480156101f257600080fd5b506101a661074e565b34801561020757600080fd5b5061021b6102163660046116a6565b61077d565b6040516101c891906116cf565b34801561023457600080fd5b506102486102433660046116dd565b61079b565b6040516101c891906117ba565b34801561026157600080fd5b5060655460ff1661021b565b34801561027957600080fd5b5060126101bb565b34801561028d57600080fd5b506101a661029c3660046117cb565b6107ce565b3480156102ad57600080fd5b506101a66102bc3660046116a6565b61087c565b3480156102cd57600080fd5b506101a66108af565b3480156102e257600080fd5b506101a66108b8565b3480156102f757600080fd5b5061021b6103063660046116a6565b60976020526000908152604090205460ff1681565b34801561032757600080fd5b506101a66103363660046116a6565b6108ec565b34801561034757600080fd5b506101a661091f565b34801561035c57600080fd5b506101bb61036b3660046116dd565b61094c565b34801561037c57600080fd5b506033546001600160a01b03166040516101c89190611811565b3480156103a257600080fd5b506101a66103b136600461181f565b6109e1565b3480156103c257600080fd5b506101bb6103d136600461186f565b610a52565b3480156103e257600080fd5b506101a66103f136600461136f565b610b1f565b34801561040257600080fd5b5060cb54610416906001600160a01b031681565b6040516101c891906118be565b34801561042f57600080fd5b506101bb61043e3660046118cc565b610b52565b34801561044f57600080fd5b506101a661045e3660046116a6565b610ba6565b34801561046f57600080fd5b506101bb61047e3660046118cc565b610bff565b34801561048f57600080fd5b506101a661049e3660046118ed565b610c2f565b3480156104af57600080fd5b50609854610416906001600160a01b031681565b6033546001600160a01b031633146104f65760405162461bcd60e51b81526004016104ed9061197a565b60405180910390fd5b6104ff81610cd8565b50565b600061051060655460ff1690565b1561052d5760405162461bcd60e51b81526004016104ed906119b1565b600260995414156105505760405162461bcd60e51b81526004016104ed906119f5565b6002609955600061056084610a52565b905061056b81610b52565b609854909150610586906001600160a01b0316333084610d55565b60cb546098546105a3916001600160a01b03918216911683610db3565b60cb546098546001600160a01b039182169163f718845391349116848a886105cd8e838e8e61079b565b60016040518863ffffffff1660e01b81526004016105f096959493929190611a65565b6020604051808303818588803b15801561060957600080fd5b505af115801561061d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106429190611ac6565b60cb54609854919350610663916001600160a01b0390811691166000610db3565b7fc223cf6bda1a6d43dd56cef5d4b95b1a593f38f295323e7e59a30522bf49c1cf878787878760405161069a959493929190611c10565b60405180910390a150600160995595945050505050565b609854604051600091829182916001600160a01b0316906106d190611c63565b600060405180830381855afa9150503d806000811461070c576040519150601f19603f3d011682016040523d82523d6000602084013e610711565b606091505b5091509150816107335760405162461bcd60e51b81526004016104ed90611cbe565b808060200190518101906107479190611ac6565b9250505090565b6107573361077d565b6107735760405162461bcd60e51b81526004016104ed90611d00565b61077b610e7b565b565b6001600160a01b031660009081526097602052604090205460ff1690565b6060848484846040516020016107b49493929190611d10565b60405160208183030381529060405290505b949350505050565b6033546001600160a01b031633146107f85760405162461bcd60e51b81526004016104ed9061197a565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f1935050505090508061083e5760405162461bcd60e51b81526004016104ed90611d8c565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e4827838360405161086f929190611d9c565b60405180910390a1505050565b6033546001600160a01b031633146108a65760405162461bcd60e51b81526004016104ed9061197a565b6104ff81610ee1565b61077b33610ee1565b6033546001600160a01b031633146108e25760405162461bcd60e51b81526004016104ed9061197a565b61077b6000610f56565b6033546001600160a01b031633146109165760405162461bcd60e51b81526004016104ed9061197a565b6104ff81610fa8565b6109283361077d565b6109445760405162461bcd60e51b81526004016104ed90611d00565b61077b611021565b60cb546000906001600160a01b0316635335dca261096c8787878761079b565b6040518263ffffffff1660e01b815260040161098891906117ba565b60206040518083038186803b1580156109a057600080fd5b505afa1580156109b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d89190611ac6565b95945050505050565b6033546001600160a01b03163314610a0b5760405162461bcd60e51b81526004016104ed9061197a565b610a1f6001600160a01b0384168383611079565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639883838360405161086f93929190611db7565b600080825111610a745760405162461bcd60e51b81526004016104ed90611e26565b60005b8251811015610b195760005b838281518110610a9557610a95611e36565b60200260200101516020015151811015610b0657610af2848381518110610abe57610abe611e36565b6020026020010151602001518281518110610adb57610adb611e36565b60200260200101518461109890919063ffffffff16565b925080610afe81611e62565b915050610a83565b5080610b1181611e62565b915050610a77565b50919050565b6033546001600160a01b03163314610b495760405162461bcd60e51b81526004016104ed9061197a565b6104ff816110ad565b600080610b5d6106b1565b90506012808211610b87576107c6610b7582846110f8565b610b8090600a611f8b565b8590611104565b6107c6610b9483836110f8565b610b9f90600a611f8b565b8590611110565b6033546001600160a01b03163314610bd05760405162461bcd60e51b81526004016104ed9061197a565b6001600160a01b038116610bf65760405162461bcd60e51b81526004016104ed90611fdd565b6104ff81610f56565b600080610c0a6106b1565b90506012808211610c22576107c6610b9482846110f8565b6107c6610b7583836110f8565b600054610100900460ff16610c4a5760005460ff1615610c4e565b303b155b610c6a5760405162461bcd60e51b81526004016104ed90612038565b600054610100900460ff16158015610c8c576000805461ffff19166101011790555b610c9585610f56565b610c9e8461111c565b610ca783611143565b610cb08261116a565b8015610cc2576000805461ff00191690555b5050505050565b6001600160a01b03163b151590565b6001600160a01b038116610cfe5760405162461bcd60e51b81526004016104ed9061208a565b609880546001600160a01b0319166001600160a01b0383169081179091556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3091610d4a916118be565b60405180910390a150565b610dad846323b872dd60e01b858585604051602401610d769392919061209a565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611191565b50505050565b801580610e3b5750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90610de990309086906004016120a8565b60206040518083038186803b158015610e0157600080fd5b505afa158015610e15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e399190611ac6565b155b610e575760405162461bcd60e51b81526004016104ed90612116565b610e768363095ea7b360e01b8484604051602401610d76929190612126565b505050565b60655460ff16610e9d5760405162461bcd60e51b81526004016104ed9061215f565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610ed79190611811565b60405180910390a1565b610eea8161077d565b610f065760405162461bcd60e51b81526004016104ed906121a3565b6001600160a01b03811660009081526097602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90610d4a908390611811565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610fb18161077d565b15610fce5760405162461bcd60e51b81526004016104ed906121f1565b6001600160a01b03811660009081526097602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890610d4a908390611811565b60655460ff16156110445760405162461bcd60e51b81526004016104ed906119b1565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610eca3390565b610e768363a9059cbb60e01b8484604051602401610d76929190612126565b60006110a48284612201565b90505b92915050565b60cb80546001600160a01b0319166001600160a01b0383161790556040517fd3a626089875a97be3c9702fd526ab6e28bd30904def789b36b301f03afadcaf90610d4a9083906118be565b60006110a48284612219565b60006110a48284612246565b60006110a4828461225a565b600054610100900460ff166109165760405162461bcd60e51b81526004016104ed906122c1565b600054610100900460ff16610b495760405162461bcd60e51b81526004016104ed906122c1565b600054610100900460ff166104f65760405162461bcd60e51b81526004016104ed906122c1565b60006111e6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112209092919063ffffffff16565b805190915015610e76578080602001905181019061120491906122e4565b610e765760405162461bcd60e51b81526004016104ed9061234c565b606061122f8484600085611239565b90505b9392505050565b60608247101561125b5760405162461bcd60e51b81526004016104ed9061239f565b6001600160a01b0385163b6112825760405162461bcd60e51b81526004016104ed906123e3565b600080866001600160a01b0316858760405161129e9190612415565b60006040518083038185875af1925050503d80600081146112db576040519150601f19603f3d011682016040523d82523d6000602084013e6112e0565b606091505b50915091506112f08282866112fb565b979650505050505050565b6060831561130a575081611232565b82511561131a5782518084602001fd5b8160405162461bcd60e51b81526004016104ed91906117ba565b60006001600160a01b0382166110a7565b60006110a782611334565b61135981611345565b81146104ff57600080fd5b80356110a781611350565b60006020828403121561138457611384600080fd5b60006107c68484611364565b61135981611334565b80356110a781611390565b67ffffffffffffffff8116611359565b80356110a7816113a4565b80611359565b80356110a7816113bf565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561140c5761140c6113d0565b6040525050565b600061141e60405190565b905061142a82826113e6565b919050565b600067ffffffffffffffff821115611449576114496113d0565b5060209081020190565b600581106104ff57600080fd5b80356110a781611453565b600061147e6114798461142f565b611413565b8381529050602080820190840283018581111561149d5761149d600080fd5b835b818110156114c157806114b288826113c5565b8452506020928301920161149f565b5050509392505050565b600082601f8301126114df576114df600080fd5b81356107c684826020860161146b565b60006040828403121561150457611504600080fd5b61150e6040611413565b9050600061151c8484611460565b825250602082013567ffffffffffffffff81111561153c5761153c600080fd5b611548848285016114cb565b60208301525092915050565b60006115626114798461142f565b8381529050602080820190840283018581111561158157611581600080fd5b835b818110156114c157803567ffffffffffffffff8111156115a5576115a5600080fd5b8086016115b289826114ef565b8552505060209283019201611583565b600082601f8301126115d6576115d6600080fd5b81356107c6848260208601611554565b63ffffffff8116611359565b80356110a7816115e6565b600080600080600060a0868803121561161857611618600080fd5b60006116248888611399565b9550506020611635888289016113b4565b9450506040611646888289016113c5565b935050606086013567ffffffffffffffff81111561166657611666600080fd5b611672888289016115c2565b9250506080611683888289016115f2565b9150509295509295909350565b805b82525050565b602081016110a78284611690565b6000602082840312156116bb576116bb600080fd5b60006107c68484611399565b801515611692565b602081016110a782846116c7565b600080600080608085870312156116f6576116f6600080fd5b60006117028787611399565b9450506020611713878288016113b4565b9350506040611724878288016113c5565b925050606085013567ffffffffffffffff81111561174457611744600080fd5b611750878288016115c2565b91505092959194509250565b60005b8381101561177757818101518382015260200161175f565b83811115610dad5750506000910152565b6000611792825190565b8084526020840193506117a981856020860161175c565b601f01601f19169290920192915050565b602080825281016110a48184611788565b600080604083850312156117e1576117e1600080fd5b60006117ed8585611399565b92505060206117fe858286016113c5565b9150509250929050565b61169281611334565b602081016110a78284611808565b60008060006060848603121561183757611837600080fd5b60006118438686611364565b935050602061185486828701611399565b9250506040611865868287016113c5565b9150509250925092565b60006020828403121561188457611884600080fd5b813567ffffffffffffffff81111561189e5761189e600080fd5b6107c6848285016115c2565b60006110a782611345565b611692816118aa565b602081016110a782846118b5565b6000602082840312156118e1576118e1600080fd5b60006107c684846113c5565b6000806000806080858703121561190657611906600080fd5b60006119128787611399565b945050602061192387828801611399565b935050604061193487828801611364565b925050606061175087828801611364565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b602080825281016110a781611945565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b81529150611973565b602080825281016110a78161198a565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0081529150611973565b602080825281016110a7816119c1565b67ffffffffffffffff8116611692565b63ffffffff8116611692565b634e487b7160e01b600052602160045260246000fd5b600781106104ff576104ff611a21565b8061142a81611a37565b60006110a782611a47565b61169281611a51565b60c08101611a738289611808565b611a806020830188611690565b611a8d6040830187611a05565b611a9a6060830186611a15565b8181036080830152611aac8185611788565b90506112f060a0830184611a5c565b80516110a7816113bf565b600060208284031215611adb57611adb600080fd5b60006107c68484611abb565b600581106104ff576104ff611a21565b8061142a81611ae7565b60006110a782611af7565b61169281611b01565b6000611b218383611690565b505060200190565b6000611b33825190565b80845260209384019383018060005b83811015611b67578151611b568882611b15565b975060208301925050600101611b42565b509495945050505050565b80516000906040840190611b868582611b0c565b50602083015184820360208601526109d88282611b29565b60006110a48383611b72565b6000611bb4825190565b80845260208401935083602082028501611bce8560200190565b8060005b85811015611c035784840389528151611beb8582611b9e565b94506020830160209a909a0199925050600101611bd2565b5091979650505050505050565b60a08101611c1e8288611808565b611c2b6020830187611a05565b611c386040830186611690565b8181036060830152611c4a8185611baa565b9050611c596080830184611a15565b9695505050505050565b63313ce56760e01b81526000600482016110a7565b602681526000602082017f5265736f75726365506179546f6b656e577261707065723a20696e76616c6964815265103a37b5b2b760d11b602082015291505b5060400190565b602080825281016110a781611c78565b60208082527f5061757365723a2063616c6c6572206973206e6f74207468652070617573657291019081526000611973565b602080825281016110a781611cce565b60808101611d1e8287611808565b611d2b6020830186611a05565b611d386040830185611690565b8181036060830152611c598184611baa565b602581526000602082017f5061796d656e743a207769746864726177206e617469766520746f6b656e2066815264185a5b195960da1b60208201529150611cb7565b602080825281016110a781611d4a565b60408101611daa82856118b5565b6112326020830184611690565b60608101611dc582866118b5565b611dd26020830185611808565b6107c66040830184611690565b602a81526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152690c2c8e640d8cadccee8d60b31b60208201529150611cb7565b602080825281016110a781611ddf565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611e7657611e76611e4c565b5060010190565b80825b6001851115611ebc57808604811115611e9b57611e9b611e4c565b6001851615611ea957908102905b8002611eb58560011c90565b9450611e80565b94509492505050565b600082611ed457506001611232565b81611ee157506000611232565b8160018114611ef75760028114611f0157611f2e565b6001915050611232565b60ff841115611f1257611f12611e4c565b8360020a915084821115611f2857611f28611e4c565b50611232565b5060208310610133831016604e8410600b8410161715611f61575081810a83811115611f5c57611f5c611e4c565b611232565b611f6e8484846001611e7d565b92509050818404811115611f8457611f84611e4c565b0292915050565b60006110a46000198484611ec5565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150611cb7565b602080825281016110a781611f9a565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b60208201529150611cb7565b602080825281016110a781611fed565b602581526000602082017f5265736f75726365506179546f6b656e577261707065723a207a65726f206164815264647265737360d81b60208201529150611cb7565b602080825281016110a781612048565b60608101611dc58286611808565b604081016120b68285611808565b6112326020830184611808565b603681526000602082017f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60208201529150611cb7565b602080825281016110a7816120c3565b60408101611daa8285611808565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b81529150611973565b602080825281016110a781612134565b601d81526000602082017f5061757365723a206163636f756e74206973206e6f742070617573657200000081529150611973565b602080825281016110a78161216f565b602181526000602082017f5061757365723a206163636f756e7420697320616c72656164792070617573658152603960f91b60208201529150611cb7565b602080825281016110a7816121b3565b6000821982111561221457612214611e4c565b500190565b60008282101561222b5761222b611e4c565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261225557612255612230565b500490565b600081600019048311821515161561227457612274611e4c565b500290565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150611cb7565b602080825281016110a781612279565b801515611359565b80516110a7816122d1565b6000602082840312156122f9576122f9600080fd5b60006107c684846122d9565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b60208201529150611cb7565b602080825281016110a781612305565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b60208201529150611cb7565b602080825281016110a78161235c565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081529150611973565b602080825281016110a7816123af565b60006123fd825190565b61240b81856020860161175c565b9290920192915050565b600061123282846123f356fea26469706673582212206b2b8809128e8aa3f4fe25959803117084820ba64b81b829adee48cb0a6bdcc464736f6c63430008090033";

export class SrcChainPayment__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SrcChainPayment> {
    return super.deploy(overrides || {}) as Promise<SrcChainPayment>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SrcChainPayment {
    return super.attach(address) as SrcChainPayment;
  }
  connect(signer: Signer): SrcChainPayment__factory {
    return super.connect(signer) as SrcChainPayment__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SrcChainPaymentInterface {
    return new utils.Interface(_abi) as SrcChainPaymentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SrcChainPayment {
    return new Contract(address, _abi, signerOrProvider) as SrcChainPayment;
  }
}
