/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { Billing, BillingInterface } from "../Billing";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "BillTypedHashUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "bill",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Billing",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IProviders",
        name: "providers",
        type: "address",
      },
    ],
    name: "ProvidersUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IResourceAdaptor",
        name: "adaptor",
        type: "address",
      },
    ],
    name: "ResourceAdaptorUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "TokenUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "adaptor",
    outputs: [
      {
        internalType: "contract IResourceAdaptor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "bill",
        type: "bytes",
      },
    ],
    name: "billHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "billTypedHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "decodeBill",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalValue",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "indexBlock",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "enum ResourceData.ResourceType",
                    name: "resourceType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                ],
                internalType: "struct IBilling.BillEntry[]",
                name: "entries",
                type: "tuple[]",
              },
            ],
            internalType: "struct IBilling.BillPayload[]",
            name: "payloads",
            type: "tuple[]",
          },
        ],
        internalType: "struct IBilling.Bill",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "totalValue",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "indexBlock",
                type: "uint256",
              },
              {
                components: [
                  {
                    internalType: "enum ResourceData.ResourceType",
                    name: "resourceType",
                    type: "uint8",
                  },
                  {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256",
                  },
                ],
                internalType: "struct IBilling.BillEntry[]",
                name: "entries",
                type: "tuple[]",
              },
            ],
            internalType: "struct IBilling.BillPayload[]",
            name: "payloads",
            type: "tuple[]",
          },
        ],
        internalType: "struct IBilling.Bill",
        name: "bill",
        type: "tuple",
      },
    ],
    name: "encodeBill",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "bill",
        type: "bytes",
      },
    ],
    name: "hashTypedDataV4ForBill",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "providers",
    outputs: [
      {
        internalType: "contract IProviders",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class Billing__factory {
  static readonly abi = _abi;
  static createInterface(): BillingInterface {
    return new utils.Interface(_abi) as BillingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Billing {
    return new Contract(address, _abi, signerOrProvider) as Billing;
  }
}
