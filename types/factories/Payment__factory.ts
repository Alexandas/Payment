/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Payment, PaymentInterface } from "../Payment";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "AddToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IMessageSender",
        name: "messageSender",
        type: "address",
      },
    ],
    name: "MessageSenderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "NativeWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "RemoveToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addPauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "decodeMessage",
    outputs: [
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "destination",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "encodeMessage",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "getValueOf",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isPauser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageSender",
    outputs: [
      {
        internalType: "contract IMessageSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pausers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "maxSlippage",
        type: "uint32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "values",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.Payload[]",
        name: "payloads",
        type: "tuple[]",
      },
    ],
    name: "pay",
    outputs: [
      {
        internalType: "bytes32",
        name: "transferId",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "removeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renouncePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_destination",
        type: "address",
      },
    ],
    name: "setDestination",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IMessageSender",
        name: "_messageSender",
        type: "address",
      },
    ],
    name: "setMessageSender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
    ],
    name: "tokenExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "withdrawNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611e07806100206000396000f3fe60806040526004361061014b5760003560e01c806382dc1ec4116100b6578063bc67f8321161006f578063bc67f832146103d8578063d48bfca7146103f8578063d67bdd2514610418578063d9caed1214610438578063f2fde38b14610458578063fa8297e51461047857600080fd5b806382dc1ec4146102eb5780638456cb591461030b5780638da5cb5b146103205780638fdfaf5a14610352578063b269681d1461037f578063b33f78ca1461039f57600080fd5b8063634d45b211610108578063634d45b2146102145780636b2c0f55146102435780636ef8d66d14610263578063715018a61461027857806380f51c121461028d57806381962d64146102bd57600080fd5b806307b18bde146101505780630a0a05e6146101725780633f4ba83a1461019257806346fbf68e146101a75780635c975abb146101dc5780635fa7b584146101f4575b600080fd5b34801561015c57600080fd5b5061017061016b3660046115b3565b61048b565b005b34801561017e57600080fd5b5061017061018d3660046115df565b61058a565b34801561019e57600080fd5b506101706105d6565b3480156101b357600080fd5b506101c76101c23660046115df565b610635565b60405190151581526020015b60405180910390f35b3480156101e857600080fd5b5060655460ff166101c7565b34801561020057600080fd5b5061017061020f3660046115df565b610653565b34801561022057600080fd5b5061023461022f36600461166c565b610689565b6040516101d393929190611717565b34801561024f57600080fd5b5061017061025e3660046115df565b6106af565b34801561026f57600080fd5b506101706106e2565b34801561028457600080fd5b506101706106eb565b34801561029957600080fd5b506101c76102a83660046115df565b60976020526000908152604090205460ff1681565b3480156102c957600080fd5b506102dd6102d8366004611948565b61071f565b6040519081526020016101d3565b3480156102f757600080fd5b506101706103063660046115df565b6107cb565b34801561031757600080fd5b506101706107fe565b34801561032c57600080fd5b506033546001600160a01b03165b6040516001600160a01b0390911681526020016101d3565b34801561035e57600080fd5b5061037261036d36600461197d565b61085b565b6040516101d39190611a1c565b34801561038b57600080fd5b5060cb5461033a906001600160a01b031681565b3480156103ab57600080fd5b506101c76103ba3660046115df565b6001600160a01b0316600090815260cc602052604090205460ff1690565b3480156103e457600080fd5b506101706103f33660046115df565b610897565b34801561040457600080fd5b506101706104133660046115df565b6108ca565b34801561042457600080fd5b5060ca5461033a906001600160a01b031681565b34801561044457600080fd5b50610170610453366004611a2f565b6108fd565b34801561046457600080fd5b506101706104733660046115df565b610983565b6102dd610486366004611a70565b610a1b565b6033546001600160a01b031633146104be5760405162461bcd60e51b81526004016104b590611b03565b60405180910390fd5b6040516000906001600160a01b0384169083156108fc0290849084818181858888f193505050509050806105425760405162461bcd60e51b815260206004820152602560248201527f5061796d656e743a207769746864726177206e617469766520746f6b656e2066604482015264185a5b195960da1b60648201526084016104b5565b604080516001600160a01b0385168152602081018490527f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e482791015b60405180910390a1505050565b6033546001600160a01b031633146105b45760405162461bcd60e51b81526004016104b590611b03565b60cb80546001600160a01b0319166001600160a01b0392909216919091179055565b6105df33610635565b61062b5760405162461bcd60e51b815260206004820152601c60248201527f5061757365723a2043616c6c6572206973206e6f74207061757365720000000060448201526064016104b5565b610633610c26565b565b6001600160a01b031660009081526097602052604090205460ff1690565b6033546001600160a01b0316331461067d5760405162461bcd60e51b81526004016104b590611b03565b61068681610cb9565b50565b6000806060838060200190518101906106a29190611b38565b9196909550909350915050565b6033546001600160a01b031633146106d95760405162461bcd60e51b81526004016104b590611b03565b61068681610d7e565b61063333610d7e565b6033546001600160a01b031633146107155760405162461bcd60e51b81526004016104b590611b03565b6106336000610e2b565b6000805b82518110156107c55760005b83828151811061074157610741611cb5565b602002602001015160200151518110156107b25761079e84838151811061076a5761076a611cb5565b602002602001015160200151828151811061078757610787611cb5565b602002602001015184610e7d90919063ffffffff16565b9250806107aa81611ce1565b91505061072f565b50806107bd81611ce1565b915050610723565b50919050565b6033546001600160a01b031633146107f55760405162461bcd60e51b81526004016104b590611b03565b61068681610e90565b61080733610635565b6108535760405162461bcd60e51b815260206004820152601c60248201527f5061757365723a2043616c6c6572206973206e6f74207061757365720000000060448201526064016104b5565b610633610f44565b60cb54604051606091610880916001600160a01b039091169085908590602001611717565b604051602081830303815290604052905092915050565b6033546001600160a01b031633146108c15760405162461bcd60e51b81526004016104b590611b03565b61068681610fbf565b6033546001600160a01b031633146108f45760405162461bcd60e51b81526004016104b590611b03565b6106868161100d565b6033546001600160a01b031633146109275760405162461bcd60e51b81526004016104b590611b03565b61093b6001600160a01b03841683836110c2565b604080516001600160a01b038086168252841660208201529081018290527f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63989060600161057d565b6033546001600160a01b031633146109ad5760405162461bcd60e51b81526004016104b590611b03565b6001600160a01b038116610a125760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b5565b61068681610e2b565b6000610a2960655460ff1690565b15610a695760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104b5565b60026098541415610abc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104b5565b60026098556001600160a01b038516600090815260cc602052604090205460ff16610b295760405162461bcd60e51b815260206004820152601a60248201527f5061796d656e743a206e6f6e6578697374656e7420746f6b656e00000000000060448201526064016104b5565b6000610b348361071f565b9050610b4b6001600160a01b03871633308461112a565b60ca54610b65906001600160a01b03888116911683611168565b60ca546001600160a01b031663f71884533488848989610b858e8b61085b565b60016040518863ffffffff1660e01b8152600401610ba896959493929190611cfc565b6020604051808303818588803b158015610bc157600080fd5b505af1158015610bd5573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610bfa9190611d62565b60ca54909250610c17906001600160a01b03888116911683611229565b50600160985595945050505050565b60655460ff16610c6f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104b5565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038116600090815260cc602052604090205460ff16610d215760405162461bcd60e51b815260206004820152601a60248201527f5061796d656e743a206e6f6e6578697374656e7420746f6b656e00000000000060448201526064016104b5565b6040516001600160a01b03821681527f4eb129c82dcd3eedb52df2b0e6fb4cfa41ac64ee9d63ff081acbb1877e85d79b9060200160405180910390a16001600160a01b0316600090815260cc60205260409020805460ff19169055565b610d8781610635565b610dd35760405162461bcd60e51b815260206004820152601d60248201527f5061757365723a204163636f756e74206973206e6f742070617573657200000060448201526064016104b5565b6001600160a01b038116600081815260976020908152604091829020805460ff1916905590519182527fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e91015b60405180910390a150565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610e898284611d7b565b9392505050565b610e9981610635565b15610ef05760405162461bcd60e51b815260206004820152602160248201527f5061757365723a204163636f756e7420697320616c72656164792070617573656044820152603960f91b60648201526084016104b5565b6001600160a01b038116600081815260976020908152604091829020805460ff1916600117905590519182527f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f89101610e20565b60655460ff1615610f8a5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104b5565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610c9c3390565b60ca80546001600160a01b0319166001600160a01b0383169081179091556040519081527fd3a626089875a97be3c9702fd526ab6e28bd30904def789b36b301f03afadcaf90602001610e20565b6001600160a01b038116600090815260cc602052604090205460ff161561106e5760405162461bcd60e51b81526020600482015260156024820152745061796d656e743a20746f6b656e2065787369747360581b60448201526064016104b5565b6001600160a01b038116600081815260cc6020908152604091829020805460ff1916600117905590519182527fe473c74f34be27c1464d6624f14a0d7fd4e301cbfa29c3eba425d378c8a7ebe09101610e20565b6040516001600160a01b03831660248201526044810182905261112590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261134b565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526111629085906323b872dd60e01b906084016110ee565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b1580156111b457600080fd5b505afa1580156111c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ec9190611d62565b6111f69190611d7b565b6040516001600160a01b03851660248201526044810182905290915061116290859063095ea7b360e01b906064016110ee565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b15801561127457600080fd5b505afa158015611288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ac9190611d62565b9050818110156113105760405162461bcd60e51b815260206004820152602960248201527f5361666545524332303a2064656372656173656420616c6c6f77616e63652062604482015268656c6f77207a65726f60b81b60648201526084016104b5565b6040516001600160a01b0384166024820152828203604482018190529061134490869063095ea7b360e01b906064016110ee565b5050505050565b60006113a0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661141d9092919063ffffffff16565b80519091501561112557808060200190518101906113be9190611d93565b6111255760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104b5565b606061142c8484600085611434565b949350505050565b6060824710156114955760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104b5565b6001600160a01b0385163b6114ec5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104b5565b600080866001600160a01b031685876040516115089190611db5565b60006040518083038185875af1925050503d8060008114611545576040519150601f19603f3d011682016040523d82523d6000602084013e61154a565b606091505b509150915061155a828286611565565b979650505050505050565b60608315611574575081610e89565b8251156115845782518084602001fd5b8160405162461bcd60e51b81526004016104b59190611a1c565b6001600160a01b038116811461068657600080fd5b600080604083850312156115c657600080fd5b82356115d18161159e565b946020939093013593505050565b6000602082840312156115f157600080fd5b8135610e898161159e565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715611635576116356115fc565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715611664576116646115fc565b604052919050565b6000602080838503121561167f57600080fd5b823567ffffffffffffffff8082111561169757600080fd5b818501915085601f8301126116ab57600080fd5b8135818111156116bd576116bd6115fc565b6116cf601f8201601f1916850161163b565b915080825286848285010111156116e557600080fd5b8084840185840137600090820190930192909252509392505050565b634e487b7160e01b600052602160045260246000fd5b6001600160a01b0384168152602080820184905260606040808401829052845184830181905260009360059290916080808801919081861b89010189850188805b848110156117d057607f198c8503018652825187850181518b811061177f5761177f611701565b86529089015189860189905280519182905289019083908c8701905b808310156117bb5783518252928b019260019290920191908b019061179b565b50978a01979550505091870191600101611758565b50919d9c50505050505050505050505050565b600067ffffffffffffffff8211156117fd576117fd6115fc565b5060051b60200190565b6005811061068657600080fd5b600082601f83011261182557600080fd5b8135602061183a611835836117e3565b61163b565b828152600592831b850182019282820191908785111561185957600080fd5b8387015b8581101561193b57803567ffffffffffffffff8082111561187e5760008081fd5b908901906040828c03601f19018113156118985760008081fd5b6118a0611612565b888401356118ad81611807565b815283820135838111156118c15760008081fd5b8085019450508c603f8501126118d957600092508283fd5b8884013592506118eb611835846117e3565b83815292861b8401820192898101908e8511156119085760008081fd5b948301945b848610156119265785358252948a0194908a019061190d565b828b015250875250505092840192840161185d565b5090979650505050505050565b60006020828403121561195a57600080fd5b813567ffffffffffffffff81111561197157600080fd5b61142c84828501611814565b6000806040838503121561199057600080fd5b82359150602083013567ffffffffffffffff8111156119ae57600080fd5b6119ba85828601611814565b9150509250929050565b60005b838110156119df5781810151838201526020016119c7565b838111156111625750506000910152565b60008151808452611a088160208601602086016119c4565b601f01601f19169290920160200192915050565b602081526000610e8960208301846119f0565b600080600060608486031215611a4457600080fd5b8335611a4f8161159e565b92506020840135611a5f8161159e565b929592945050506040919091013590565b600080600080600060a08688031215611a8857600080fd5b853594506020860135611a9a8161159e565b9350604086013567ffffffffffffffff8082168214611ab857600080fd5b90935060608701359063ffffffff82168214611ad357600080fd5b90925060808701359080821115611ae957600080fd5b50611af688828901611814565b9150509295509295909350565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600080600060608486031215611b4d57600080fd5b8351611b588161159e565b60208501516040860151919450925067ffffffffffffffff80821115611b7d57600080fd5b818601915086601f830112611b9157600080fd5b8151611b9f611835826117e3565b8082825260208201915060208360051b860101925089831115611bc157600080fd5b602085015b83811015611ca557805185811115611bdd57600080fd5b86016040818d03601f19011215611bf357600080fd5b611bfb611612565b6020820151611c0981611807565b8152604082015187811115611c1d57600080fd5b8083019250508c603f830112611c3257600080fd5b6020820151611c43611835826117e3565b81815260059190911b83016040019060208101908f831115611c6457600080fd5b6040850194505b82851015611c86578451825260209485019490910190611c6b565b8060208501525050508085525050602083019250602081019050611bc6565b5080955050505050509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611cf557611cf5611ccb565b5060010190565b60018060a01b038716815285602082015267ffffffffffffffff8516604082015263ffffffff8416606082015260c060808201526000611d3f60c08301856119f0565b905060078310611d5157611d51611701565b8260a0830152979650505050505050565b600060208284031215611d7457600080fd5b5051919050565b60008219821115611d8e57611d8e611ccb565b500190565b600060208284031215611da557600080fd5b81518015158114610e8957600080fd5b60008251611dc78184602087016119c4565b919091019291505056fea264697066735822122095725995be18b5117d4b36db41720da9fa8331e33d11b83842495df26091e37364736f6c63430008090033";

export class Payment__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Payment> {
    return super.deploy(overrides || {}) as Promise<Payment>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Payment {
    return super.attach(address) as Payment;
  }
  connect(signer: Signer): Payment__factory {
    return super.connect(signer) as Payment__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PaymentInterface {
    return new utils.Interface(_abi) as PaymentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Payment {
    return new Contract(address, _abi, signerOrProvider) as Payment;
  }
}
