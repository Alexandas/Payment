/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ProviderController,
  ProviderControllerInterface,
} from "../ProviderController";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
    ],
    name: "AccountRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PauserRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
    ],
    name: "ProviderDripped",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IRouter",
        name: "router",
        type: "address",
      },
    ],
    name: "RouterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "WalletTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
    ],
    name: "WalletTypesHashUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
    ],
    name: "accountExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addPauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.AmountPayload[]",
        name: "payloads",
        type: "tuple[]",
      },
      {
        internalType: "uint256",
        name: "timeout",
        type: "uint256",
      },
    ],
    name: "drip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "accounts",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.AmountPayload[][]",
        name: "payloads",
        type: "tuple[][]",
      },
      {
        internalType: "uint256",
        name: "timeout",
        type: "uint256",
      },
    ],
    name: "dripMult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "hashTypedDataV4ForWallet",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "hashWalletTypes",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "initWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "pauser",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "string",
        name: "walletTypes",
        type: "string",
      },
      {
        internalType: "contract IRouter",
        name: "router",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isPauser",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "pausers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "timeout",
        type: "uint256",
      },
    ],
    name: "registerAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "accounts",
        type: "bytes32[]",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
        ],
        internalType: "struct ResourceData.AmountPayload[][]",
        name: "payloads",
        type: "tuple[][]",
      },
      {
        internalType: "uint256",
        name: "timeout",
        type: "uint256",
      },
    ],
    name: "registerAndDripMult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "accounts",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "timeout",
        type: "uint256",
      },
    ],
    name: "registerMult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renouncePauser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract IRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "transferWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
    ],
    name: "walletExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
    ],
    name: "walletOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "walletTypesHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060006200002060016200008e565b9050801562000039576000805461ff0019166101001790555b801562000087576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906200007e9060019062000168565b60405180910390a15b50620001cb565b60008054610100900460ff1615620000f7578160ff166001148015620000c75750620000c5306200013b60201b6200118a1760201c565b155b620000ef5760405162461bcd60e51b8152600401620000e69062000178565b60405180910390fd5b506000919050565b60005460ff808416911610620001215760405162461bcd60e51b8152600401620000e69062000178565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b600060ff82165b92915050565b62000162816200014a565b82525050565b6020810162000151828462000157565b602080825281016200015181602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b61320780620001db6000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c8063718bb2f3116100de5780638da5cb5b11610097578063d6f0362e11610071578063d6f0362e14610336578063dcccb5dc14610349578063f2fde38b1461035c578063f887ea401461036f57600080fd5b80638da5cb5b146102fc5780639ba72cb81461030d578063a00641081461032057600080fd5b8063718bb2f31461027857806372d9e80e1461028b57806380f51c12146102ab57806382dc1ec4146102ce5780638456cb59146102e15780638ab22b97146102e957600080fd5b806346fbf68e1161014b5780635c975abb116101255780635c975abb1461024a5780636b2c0f55146102555780636ef8d66d14610268578063715018a61461027057600080fd5b806346fbf68e1461021157806349493d93146102245780635b2ffc691461023757600080fd5b8062c1b50a14610192578063040cfc52146101a75780632d529764146101ba5780633c9542a8146101e35780633f4ba83a146101f657806345237f1c146101fe575b600080fd5b6101a56101a0366004611e7a565b61038f565b005b6101a56101b53660046120df565b6103e0565b6101cd6101c836600461213f565b61052a565b6040516101da9190612186565b60405180910390f35b6101a56101f1366004612209565b61066d565b6101a56107e6565b6101a561020c3660046122f9565b610815565b6101cd61021f3660046123d1565b6108bb565b6101a56102323660046123f2565b6108d9565b6101a56102453660046124a5565b610a1b565b60995460ff166101cd565b6101a56102633660046123d1565b610c19565b6101a5610c4f565b6101a5610c58565b6101a561028636600461250d565b610c8c565b61029e61029936600461213f565b610e18565b6040516101da9190612594565b6101cd6102b93660046123d1565b60cb6020526000908152604090205460ff1681565b6101a56102dc3660046123d1565b610e69565b6101a5610e9c565b6101a56102f73660046124a5565b610ec9565b6067546001600160a01b031661029e565b6101cd61031b36600461213f565b6110ae565b61032960cf5481565b6040516101da91906125a8565b610329610344366004611e7a565b6110d8565b610329610357366004611e7a565b6110f7565b6101a561036a3660046123d1565b611131565b60cc54610382906001600160a01b031681565b6040516101da91906125ca565b600061039b8484610e18565b9050336001600160a01b038216146103ce5760405162461bcd60e51b81526004016103c59061262c565b60405180910390fd5b6103da84848385611199565b50505050565b804281116104005760405162461bcd60e51b81526004016103c590612673565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b15801561044557600080fd5b505afa158015610459573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047d919061268e565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a07906104ac903390600401612594565b60206040518083038186803b1580156104c457600080fd5b505afa1580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc91906126c2565b6105185760405162461bcd60e51b81526004016103c590612729565b610523338686611217565b5050505050565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b15801561056f57600080fd5b505afa158015610583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a7919061268e565b6001600160a01b0316636b074a07846040518263ffffffff1660e01b81526004016105d29190612594565b60206040518083038186803b1580156105ea57600080fd5b505afa1580156105fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062291906126c2565b61063e5760405162461bcd60e51b81526004016103c59061277e565b506001600160a01b038216600090815260cd6020908152604080832084845290915290205460ff165b92915050565b8042811161068d5760405162461bcd60e51b81526004016103c590612673565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b1580156106d257600080fd5b505afa1580156106e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070a919061268e565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a0790610739903390600401612594565b60206040518083038186803b15801561075157600080fd5b505afa158015610765573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078991906126c2565b6107a55760405162461bcd60e51b81526004016103c590612729565b60005b8451811015610523576107d4338683815181106107c7576107c761278e565b60200260200101516117ac565b806107de816127ba565b9150506107a8565b6107ef336108bb565b61080b5760405162461bcd60e51b81526004016103c590612807565b61081361195c565b565b600061082160016119c2565b90508015610839576000805461ff0019166101001790555b61084287611a4f565b61084b86611aa1565b6108558585611ac8565b61085e83611afd565b61086782611b34565b80156108b2576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906108a99060019061282b565b60405180910390a15b50505050505050565b6001600160a01b0316600090815260cb602052604090205460ff1690565b804281116108f95760405162461bcd60e51b81526004016103c590612673565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b15801561093e57600080fd5b505afa158015610952573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610976919061268e565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a07906109a5903390600401612594565b60206040518083038186803b1580156109bd57600080fd5b505afa1580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f591906126c2565b610a115760405162461bcd60e51b81526004016103c590612729565b6103da33856117ac565b80428111610a3b5760405162461bcd60e51b81526004016103c590612673565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b158015610a8057600080fd5b505afa158015610a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab8919061268e565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a0790610ae7903390600401612594565b60206040518083038186803b158015610aff57600080fd5b505afa158015610b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3791906126c2565b610b535760405162461bcd60e51b81526004016103c590612729565b6000855111610b745760405162461bcd60e51b81526004016103c590612881565b6000845111610b955760405162461bcd60e51b81526004016103c5906128d9565b8351855114610bb65760405162461bcd60e51b81526004016103c590612936565b60005b8551811015610c1157610bff33878381518110610bd857610bd861278e565b6020026020010151878481518110610bf257610bf261278e565b6020026020010151611217565b80610c09816127ba565b915050610bb9565b505050505050565b6067546001600160a01b03163314610c435760405162461bcd60e51b81526004016103c590612978565b610c4c81611b64565b50565b61081333611b64565b6067546001600160a01b03163314610c825760405162461bcd60e51b81526004016103c590612978565b6108136000611a4f565b610c96848461052a565b610cb25760405162461bcd60e51b81526004016103c5906129cc565b610cbc84846110ae565b15610cd95760405162461bcd60e51b81526004016103c590612a1a565b6000610ce68585856110d8565b905060cc60009054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b158015610d3657600080fd5b505afa158015610d4a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6e919061268e565b6001600160a01b031663238a4d1e8683856040518463ffffffff1660e01b8152600401610d9d93929190612a88565b602060405180830381600087803b158015610db757600080fd5b505af1158015610dcb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610def91906126c2565b610e0b5760405162461bcd60e51b81526004016103c590612b00565b6105238585600086611199565b6000610e2483836110ae565b610e405760405162461bcd60e51b81526004016103c590612b53565b506001600160a01b03918216600090815260ce6020908152604080832093835292905220541690565b6067546001600160a01b03163314610e935760405162461bcd60e51b81526004016103c590612978565b610c4c81611be4565b610ea5336108bb565b610ec15760405162461bcd60e51b81526004016103c590612807565b610813611c5d565b80428111610ee95760405162461bcd60e51b81526004016103c590612673565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b158015610f2e57600080fd5b505afa158015610f42573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f66919061268e565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a0790610f95903390600401612594565b60206040518083038186803b158015610fad57600080fd5b505afa158015610fc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe591906126c2565b6110015760405162461bcd60e51b81526004016103c590612729565b60008551116110225760405162461bcd60e51b81526004016103c590612881565b60008451116110435760405162461bcd60e51b81526004016103c5906128d9565b83518551146110645760405162461bcd60e51b81526004016103c590612936565b60005b8551811015610c1157611086338783815181106107c7576107c761278e565b61109c33878381518110610bd857610bd861278e565b806110a6816127ba565b915050611067565b6001600160a01b03918216600090815260ce60209081526040808320938352929052205416151590565b60006110ed6110e88585856110f7565b611cb5565b90505b9392505050565b600060cf548484846040516020016111129493929190612b63565b6040516020818303038152906040528051906020012090509392505050565b6067546001600160a01b0316331461115b5760405162461bcd60e51b81526004016103c590612978565b6001600160a01b0381166111815760405162461bcd60e51b81526004016103c590612bdb565b610c4c81611a4f565b6001600160a01b03163b151590565b6001600160a01b03848116600090815260ce602090815260408083208784529091529081902080546001600160a01b03191692841692909217909155517f3848c851d32f9ec4e5737cee35fe6816770cfbcfd0096097933c80ffa0bc7c2890611209908690869086908690612beb565b60405180910390a150505050565b611221838361052a565b61123d5760405162461bcd60e51b81526004016103c590612c47565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561128b57600080fd5b505afa15801561129f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c3919061268e565b6001600160a01b0316636b074a07846040518263ffffffff1660e01b81526004016112ee9190612594565b60206040518083038186803b15801561130657600080fd5b505afa15801561131a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061133e91906126c2565b61135a5760405162461bcd60e51b81526004016103c59061277e565b600081511161137b5760405162461bcd60e51b81526004016103c590612c96565b60005b815181101561176d57600082828151811061139b5761139b61278e565b6020908102919091010151805190915060018160048111156113bf576113bf612ca6565b14156114f4578160200151516001146113ea5760405162461bcd60e51b81526004016103c590612d04565b60cc60009054906101000a90046001600160a01b03166001600160a01b03166322b31aba6040518163ffffffff1660e01b815260040160206040518083038186803b15801561143857600080fd5b505afa15801561144c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611470919061268e565b6001600160a01b031663da5001a5878785602001516000815181106114975761149761278e565b60200260200101516040518463ffffffff1660e01b81526004016114bd93929190612d14565b600060405180830381600087803b1580156114d757600080fd5b505af11580156114eb573d6000803e3d6000fd5b50505050611758565b600281600481111561150857611508612ca6565b1415611581578160200151516001146115335760405162461bcd60e51b81526004016103c590612d84565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663f931ca566040518163ffffffff1660e01b815260040160206040518083038186803b15801561143857600080fd5b600381600481111561159557611595612ca6565b141561160e578160200151516001146115c05760405162461bcd60e51b81526004016103c590612ddc565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663a2d2f2db6040518163ffffffff1660e01b815260040160206040518083038186803b15801561143857600080fd5b600481600481111561162257611622612ca6565b14156117405781602001515160021461164d5760405162461bcd60e51b81526004016103c590612e34565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663740e80616040518163ffffffff1660e01b815260040160206040518083038186803b15801561169b57600080fd5b505afa1580156116af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d3919061268e565b6001600160a01b031663ed381188878785602001516000815181106116fa576116fa61278e565b602002602001015186602001516001815181106117195761171961278e565b60200260200101516040518563ffffffff1660e01b81526004016114bd9493929190612e44565b60405162461bcd60e51b81526004016103c590612ebf565b50508080611765906127ba565b91505061137e565b507f0cc4f008775f50ff94480b827bff217f10b555c53b83873f4cd0918a9c241ae4838360405161179f929190612ecf565b60405180910390a1505050565b6117b6828261052a565b156117d35760405162461bcd60e51b81526004016103c590612f29565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561182157600080fd5b505afa158015611835573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611859919061268e565b6001600160a01b0316636b074a07336040518263ffffffff1660e01b81526004016118849190612594565b60206040518083038186803b15801561189c57600080fd5b505afa1580156118b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d491906126c2565b6118f05760405162461bcd60e51b81526004016103c59061277e565b6001600160a01b038216600090815260cd6020908152604080832084845290915290819020805460ff19166001179055517f672144042732f7b1cdbf0772464ae545aedd7f41d38b8487dafd9085496a5d51906119509084908490612ecf565b60405180910390a15050565b60995460ff1661197e5760405162461bcd60e51b81526004016103c590612f64565b6099805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516119b89190612594565b60405180910390a1565b60008054610100900460ff1615611a09578160ff1660011480156119e55750303b155b611a015760405162461bcd60e51b81526004016103c590612fbf565b506000919050565b60005460ff808416911610611a305760405162461bcd60e51b81526004016103c590612fbf565b506000805460ff191660ff92909216919091179055600190565b919050565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610e935760405162461bcd60e51b81526004016103c590613017565b600054610100900460ff16611aef5760405162461bcd60e51b81526004016103c590613017565b611af98282611cc8565b5050565b600054610100900460ff16611b245760405162461bcd60e51b81526004016103c590613017565b610c4c8180519060200120611d09565b600054610100900460ff16611b5b5760405162461bcd60e51b81526004016103c590613017565b610c4c81611d3e565b611b6d816108bb565b611b895760405162461bcd60e51b81526004016103c59061305b565b6001600160a01b038116600090815260cb602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90611bd9908390612594565b60405180910390a150565b611bed816108bb565b15611c0a5760405162461bcd60e51b81526004016103c5906130a9565b6001600160a01b038116600090815260cb602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890611bd9908390612594565b60995460ff1615611c805760405162461bcd60e51b81526004016103c5906130e0565b6099805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119ab3390565b6000610667611cc2611daf565b83611deb565b600054610100900460ff16611cef5760405162461bcd60e51b81526004016103c590613017565b815160209283012081519190920120600191909155600255565b60cf8190556040517fd5b7aa922fbc99b384e2da1530298f9f1f39cbaafe5584138c9a7031f594a34f90611bd99083906125a8565b6001600160a01b038116611d645760405162461bcd60e51b81526004016103c590613124565b60cc80546001600160a01b0319166001600160a01b0383161790556040517f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc8090611bd99083906125ca565b6000611de67f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611dde60015490565b600254611e1e565b905090565b60008282604051602001611e00929190613134565b60405160208183030381529060405280519060200120905092915050565b60008383834630604051602001611112959493929190613165565b60006001600160a01b038216610667565b611e5381611e39565b8114610c4c57600080fd5b803561066781611e4a565b80611e53565b803561066781611e69565b600080600060608486031215611e9257611e92600080fd5b6000611e9e8686611e5e565b9350506020611eaf86828701611e6f565b9250506040611ec086828701611e5e565b9150509250925092565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715611f0557611f05611eca565b6040525050565b6000611f1760405190565b9050611a4a8282611ee0565b60006001600160401b03821115611f3c57611f3c611eca565b5060209081020190565b60058110610c4c57600080fd5b803561066781611f46565b6000611f71611f6c84611f23565b611f0c565b83815290506020808201908402830185811115611f9057611f90600080fd5b835b81811015611fb45780611fa58882611e6f565b84525060209283019201611f92565b5050509392505050565b600082601f830112611fd257611fd2600080fd5b8135611fe2848260208601611f5e565b949350505050565b600060408284031215611fff57611fff600080fd5b6120096040611f0c565b905060006120178484611f53565b82525060208201356001600160401b0381111561203657612036600080fd5b61204284828501611fbe565b60208301525092915050565b600061205c611f6c84611f23565b8381529050602080820190840283018581111561207b5761207b600080fd5b835b81811015611fb45780356001600160401b0381111561209e5761209e600080fd5b8086016120ab8982611fea565b855250506020928301920161207d565b600082601f8301126120cf576120cf600080fd5b8135611fe284826020860161204e565b6000806000606084860312156120f7576120f7600080fd5b60006121038686611e6f565b93505060208401356001600160401b0381111561212257612122600080fd5b61212e868287016120bb565b9250506040611ec086828701611e6f565b6000806040838503121561215557612155600080fd5b60006121618585611e5e565b925050602061217285828601611e6f565b9150509250929050565b8015155b82525050565b60208101610667828461217c565b60006121a2611f6c84611f23565b838152905060208082019084028301858111156121c1576121c1600080fd5b835b81811015611fb457806121d68882611e6f565b845250602092830192016121c3565b600082601f8301126121f9576121f9600080fd5b8135611fe2848260208601612194565b6000806040838503121561221f5761221f600080fd5b82356001600160401b0381111561223857612238600080fd5b612161858286016121e5565b60006001600160401b0382111561225d5761225d611eca565b601f19601f83011660200192915050565b82818337506000910152565b6000612288611f6c84612244565b9050828152602081018484840111156122a3576122a3600080fd5b6122ae84828561226e565b509392505050565b600082601f8301126122ca576122ca600080fd5b8135611fe284826020860161227a565b600061066782611e39565b611e53816122da565b8035610667816122e5565b60008060008060008060c0878903121561231557612315600080fd5b60006123218989611e5e565b965050602061233289828a01611e5e565b95505060408701356001600160401b0381111561235157612351600080fd5b61235d89828a016122b6565b94505060608701356001600160401b0381111561237c5761237c600080fd5b61238889828a016122b6565b93505060808701356001600160401b038111156123a7576123a7600080fd5b6123b389828a016122b6565b92505060a06123c489828a016122ee565b9150509295509295509295565b6000602082840312156123e6576123e6600080fd5b6000611fe28484611e5e565b6000806040838503121561240857612408600080fd5b60006121618585611e6f565b6000612422611f6c84611f23565b8381529050602080820190840283018581111561244157612441600080fd5b835b81811015611fb45780356001600160401b0381111561246457612464600080fd5b80860161247189826120bb565b8552505060209283019201612443565b600082601f83011261249557612495600080fd5b8135611fe2848260208601612414565b6000806000606084860312156124bd576124bd600080fd5b83356001600160401b038111156124d6576124d6600080fd5b6124e2868287016121e5565b93505060208401356001600160401b0381111561250157612501600080fd5b61212e86828701612481565b6000806000806080858703121561252657612526600080fd5b60006125328787611e5e565b945050602061254387828801611e6f565b935050604061255487828801611e5e565b92505060608501356001600160401b0381111561257357612573600080fd5b61257f878288016122b6565b91505092959194509250565b61218081611e39565b60208101610667828461258b565b80612180565b6020810161066782846125a2565b6000610667826122da565b612180816125b6565b6020810161066782846125c1565b603481526000602082017f50726f7669646572436f6e74726f6c6c65723a2063616c6c6572206973206e6f8152731d081d1a194818dd5c9c995b9d081dd85b1b195d60621b602082015291505b5060400190565b60208082528101610667816125d8565b601e81526000602082017f50726f7669646572436f6e74726f6c6c65723a20747820657870697265730000815291505b5060200190565b602080825281016106678161263c565b8051610667816122e5565b6000602082840312156126a3576126a3600080fd5b6000611fe28484612683565b801515611e53565b8051610667816126af565b6000602082840312156126d7576126d7600080fd5b6000611fe284846126b7565b602981526000602082017f526f75746572577261707065723a2063616c6c6572206973206e6f742074686581526810383937bb34b232b960b91b60208201529150612625565b60208082528101610667816126e3565b602881526000602082017f50726f7669646572436f6e74726f6c6c65723a206e6f6e6578697374656e7420815267383937bb34b232b960c11b60208201529150612625565b6020808252810161066781612739565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156127ce576127ce6127a4565b5060010190565b60208082527f5061757365723a2063616c6c6572206973206e6f7420746865207061757365729101908152600061266c565b60208082528101610667816127d5565b600060ff8216610667565b61218081612817565b602081016106678284612822565b602b81526000602082017f50726f7669646572436f6e74726f6c6c65723a20696e76616c6964206163636f81526a0eadce8e640d8cadccee8d60ab1b60208201529150612625565b6020808252810161066781612839565b602b81526000602082017f50726f7669646572436f6e74726f6c6c65723a20696e76616c6964207061796c81526a0dec2c8e640d8cadccee8d60ab1b60208201529150612625565b6020808252810161066781612891565b603081526000602082017f50726f7669646572436f6e74726f6c6c65723a20696e636f6e736974656e742081526f0e0c2e4c2dacae8cae440d8cadccee8d60831b60208201529150612625565b60208082528101610667816128e9565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65729101908152600061266c565b6020808252810161066781612946565b602781526000602082017f50726f7669646572436f6e74726f6c6c65723a206e6f6e6578697374656e74208152661858d8dbdd5b9d60ca1b60208201529150612625565b6020808252810161066781612988565b602181526000602082017f50726f7669646572436f6e74726f6c6c65723a2077616c6c65742065786973748152607360f81b60208201529150612625565b60208082528101610667816129dc565b60005b83811015612a45578181015183820152602001612a2d565b838111156103da5750506000910152565b6000612a60825190565b808452602084019350612a77818560208601612a2a565b601f01601f19169290920192915050565b60608101612a96828661258b565b612aa360208301856125a2565b8181036040830152612ab58184612a56565b95945050505050565b602581526000602082017f50726f7669646572436f6e74726f6c6c65723a20696e76616c6964207369676e815264617475726560d81b60208201529150612625565b6020808252810161066781612abe565b602681526000602082017f50726f7669646572436f6e74726f6c6c65723a206e6f6e6578697374656e74208152651dd85b1b195d60d21b60208201529150612625565b6020808252810161066781612b10565b60808101612b7182876125a2565b612b7e602083018661258b565b612b8b60408301856125a2565b612ab5606083018461258b565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150612625565b6020808252810161066781612b98565b60808101612bf9828761258b565b612c0660208301866125a2565b612b8b604083018561258b565b601f81526000602082017f4163636f756e7452656769737472793a206163636f756e7420657869737473008152915061266c565b6020808252810161066781612c13565b602281526000602082017f50726f7669646572436f6e74726f6c6c65723a20656d707479207061796c6f61815261647360f01b60208201529150612625565b6020808252810161066781612c57565b634e487b7160e01b600052602160045260246000fd5b603c81526000602082016000805160206131b283398151915281527f6e7473206c656e67746820666f72206275696c64696e672074696d650000000060208201529150612625565b6020808252810161066781612cbc565b60608101612d22828661258b565b612d2f60208301856125a2565b611fe260408301846125a2565b603881526000602082016000805160206131b283398151915281527f6e7473206c656e67746820666f722062616e647769647468000000000000000060208201529150612625565b6020808252810161066781612d3c565b603981526000602082016000805160206131b283398151915281527f6e7473206c656e67746820666f722061722073746f726167650000000000000060208201529150612625565b6020808252810161066781612d94565b603b81526000602082016000805160206131b283398151915281527f6e7473206c656e67746820666f7220697066732073746f72616765000000000060208201529150612625565b6020808252810161066781612dec565b60808101612e52828761258b565b612e5f60208301866125a2565b612e6c60408301856125a2565b612ab560608301846125a2565b602981526000602082017f50726f7669646572436f6e74726f6c6c65723a20756e6b6e6f776e207265736f81526875726365207479706560b81b60208201529150612625565b6020808252810161066781612e79565b60408101612edd828561258b565b6110f060208301846125a2565b602281526000602082017f50726f7669646572436f6e74726f6c6c65723a206163636f756e742065786973815261747360f01b60208201529150612625565b6020808252810161066781612eea565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b8152915061266c565b6020808252810161066781612f39565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b60208201529150612625565b6020808252810161066781612f74565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150612625565b6020808252810161066781612fcf565b601d81526000602082017f5061757365723a206163636f756e74206973206e6f74207061757365720000008152915061266c565b6020808252810161066781613027565b602181526000602082017f5061757365723a206163636f756e7420697320616c72656164792070617573658152603960f91b60208201529150612625565b602080825281016106678161306b565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b8152915061266c565b60208082528101610667816130b9565b601b81526000602082017f526f75746572577261707065723a207a65726f206164647265737300000000008152915061266c565b60208082528101610667816130f0565b61190160f01b8152600201600061314b82856125a2565b60208201915061315b82846125a2565b5060200192915050565b60a0810161317382886125a2565b61318060208301876125a2565b61318d60408301866125a2565b61319a60608301856125a2565b6131a7608083018461258b565b969550505050505056fe50726f7669646572436f6e74726f6c6c65723a20696e76616c696420616d6f75a26469706673582212206dabc2dd8ad7e74495a1394de15737755bb4278c06156eaae062860f1e45c9c664736f6c63430008090033";

export class ProviderController__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ProviderController> {
    return super.deploy(overrides || {}) as Promise<ProviderController>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ProviderController {
    return super.attach(address) as ProviderController;
  }
  connect(signer: Signer): ProviderController__factory {
    return super.connect(signer) as ProviderController__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProviderControllerInterface {
    return new utils.Interface(_abi) as ProviderControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ProviderController {
    return new Contract(address, _abi, signerOrProvider) as ProviderController;
  }
}
