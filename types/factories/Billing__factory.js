"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Billing__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "bills",
                type: "bytes",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
            },
        ],
        name: "Billing",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "hash",
                type: "bytes32",
            },
        ],
        name: "BillingTypesHashUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "NativeWithdrawal",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IRouter",
                name: "router",
                type: "address",
            },
        ],
        name: "RouterUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IERC20Upgradeable",
                name: "token",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Withdrawal",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "billingTypesHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "decode",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "indexBlock",
                        type: "uint256",
                    },
                    {
                        components: [
                            {
                                internalType: "enum ResourceData.ResourceType",
                                name: "resourceType",
                                type: "uint8",
                            },
                            {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct IBilling.BillEntry[]",
                        name: "entries",
                        type: "tuple[]",
                    },
                ],
                internalType: "struct IBilling.Bill[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "bills",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "timeout",
                type: "uint256",
            },
            {
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
            },
        ],
        name: "hashBillingTypes",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "bills",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "timeout",
                type: "uint256",
            },
            {
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
            },
        ],
        name: "hashTypedDataV4ForBills",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                internalType: "string",
                name: "version",
                type: "string",
            },
            {
                internalType: "string",
                name: "billingTypes",
                type: "string",
            },
            {
                internalType: "contract IRouter",
                name: "router",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
            },
        ],
        name: "nonceExists",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "token",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "ownerWithdrawERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address payable",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "ownerWithdrawNative",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "router",
        outputs: [
            {
                internalType: "contract IRouter",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "bytes",
                name: "bills",
                type: "bytes",
            },
            {
                internalType: "uint256",
                name: "timeout",
                type: "uint256",
            },
            {
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "spend",
        outputs: [
            {
                internalType: "uint256",
                name: "fee",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "validateBills",
        outputs: [
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x608060405234801561001057600080fd5b50612799806100206000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063de7c8e5811610066578063de7c8e58146101e1578063e5c5e9a3146101f4578063f2fde38b14610214578063f887ea401461022757600080fd5b80638da5cb5b1461018257806393563a951461019b578063b0336708146101ae578063c025303e146101c157600080fd5b8063699256f4116100d3578063699256f41461014157806370a0823114610154578063715018a614610167578063851981d21461016f57600080fd5b806308277dda146100fa57806317a6020b1461010f57806360bcb0ce14610138575b600080fd5b61010d610108366004611567565b610247565b005b61012261011d366004611658565b6102e3565b60405161012f919061171e565b60405180910390f35b61012260cc5481565b61010d61014f36600461172c565b6105ec565b610122610162366004611769565b61069a565b61010d6107ca565b61012261017d36600461178a565b610800565b6033546001600160a01b031660405161012f9190611818565b61010d6101a9366004611826565b610848565b6101226101bc366004611876565b6108b9565b6101d46101cf3660046118c3565b6108ce565b60405161012f9190611911565b6101226101ef36600461178a565b610a25565b61020761020236600461191f565b610a46565b60405161012f9190611ac2565b61010d610222366004611769565b610a5c565b60cb5461023a906001600160a01b031681565b60405161012f9190611ae7565b60006102536001610ab8565b9050801561026b576000805461ff0019166101001790555b61027486610b45565b61027e8585610b97565b61028783610bcc565b61029082610c03565b80156102db576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906102d290600190611b09565b60405180910390a15b505050505050565b6000600260995414156103115760405162461bcd60e51b815260040161030890611b4e565b60405180910390fd5b600260995560cb546040805163e70b7acb60e01b815290516000926001600160a01b03169163e70b7acb916004808301926020929190829003018186803b15801561035b57600080fd5b505afa15801561036f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103939190611b69565b9050336001600160a01b038216146103bd5760405162461bcd60e51b815260040161030890611bd0565b6000846001600160401b0316116103e65760405162461bcd60e51b815260040161030890611c0d565b4285116104055760405162461bcd60e51b815260040161030890611c47565b6001600160a01b038816600090815260cd602090815260408083208a845282528083206001600160401b038816845290915290205460ff161561045a5760405162461bcd60e51b815260040161030890611c83565b60006104698989898989610a25565b905060cb60009054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b1580156104b957600080fd5b505afa1580156104cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f19190611b69565b6001600160a01b031663238a4d1e8a83876040518463ffffffff1660e01b815260040161052093929190611cf1565b602060405180830381600087803b15801561053a57600080fd5b505af115801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105729190611d31565b61058e5760405162461bcd60e51b815260040161030890611d86565b61059a89898988610c33565b92507fb23a1eee6a70af817a758fd091feb704a6bd3edc57e7fa7d2f8a5bfa5894929889898986896040516105d3959493929190611da5565b60405180910390a1505060016099559695505050505050565b6033546001600160a01b031633146106165760405162461bcd60e51b815260040161030890611e20565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f1935050505090508061065c5760405162461bcd60e51b815260040161030890611e7c565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e4827838360405161068d929190611e8c565b60405180910390a1505050565b60cb54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b1580156106df57600080fd5b505afa1580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107179190611b69565b6001600160a01b0316636b074a07836040518263ffffffff1660e01b81526004016107429190611818565b60206040518083038186803b15801561075a57600080fd5b505afa15801561076e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107929190611d31565b6107ae5760405162461bcd60e51b815260040161030890611edb565b506001600160a01b0316600090815260ce602052604090205490565b6033546001600160a01b031633146107f45760405162461bcd60e51b815260040161030890611e20565b6107fe6000610b45565b565b600060cc5486868680519060200120868660405160200161082696959493929190611eeb565b6040516020818303038152906040528051906020012090505b95945050505050565b6033546001600160a01b031633146108725760405162461bcd60e51b815260040161030890611e20565b6108866001600160a01b0384168383610d64565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639883838360405161068d93929190611f3a565b60006108c58383610dbf565b90505b92915050565b60cb54604080516350e420e560e11b815290516000926001600160a01b03169163a1c841ca916004808301926020929190829003018186803b15801561091357600080fd5b505afa158015610927573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094b9190611b69565b6001600160a01b0316632d52976485856040518363ffffffff1660e01b8152600401610978929190611f62565b60206040518083038186803b15801561099057600080fd5b505afa1580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c89190611d31565b6109e45760405162461bcd60e51b815260040161030890611edb565b506001600160a01b038316600090815260cd6020908152604080832085845282528083206001600160401b038516845290915290205460ff165b9392505050565b6000610a3c610a378787878787610800565b610fb6565b9695505050505050565b6060818060200190518101906108c8919061216a565b6033546001600160a01b03163314610a865760405162461bcd60e51b815260040161030890611e20565b6001600160a01b038116610aac5760405162461bcd60e51b8152600401610308906121e7565b610ab581610b45565b50565b60008054610100900460ff1615610aff578160ff166001148015610adb5750303b155b610af75760405162461bcd60e51b815260040161030890612242565b506000919050565b60005460ff808416911610610b265760405162461bcd60e51b815260040161030890612242565b506000805460ff191660ff92909216919091179055600190565b919050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610bbe5760405162461bcd60e51b81526004016103089061229a565b610bc88282610fc9565b5050565b600054610100900460ff16610bf35760405162461bcd60e51b81526004016103089061229a565b610ab5818051906020012061100a565b600054610100900460ff16610c2a5760405162461bcd60e51b81526004016103089061229a565b610ab58161104a565b60008060cb60009054906101000a90046001600160a01b03166001600160a01b031663c24126766040518163ffffffff1660e01b815260040160206040518083038186803b158015610c8457600080fd5b505afa158015610c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cbc9190611b69565b9050610cc88685610dbf565b91508115610d1a57610cda81836110bb565b6001600160a01b038716600090815260ce6020526040902054909250610d009083611119565b6001600160a01b038716600090815260ce60205260409020555b506001600160a01b03909416600090815260cd602090815260408083209583529481528482206001600160401b0390931682529190915291909120805460ff191660011790555090565b610dba8363a9059cbb60e01b8484604051602401610d83929190611f62565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611125565b505050565b60008082806020019051810190610dd6919061216a565b805190915015610faf5760005b8151811015610fad576000828281518110610e0057610e006122aa565b60200260200101519050600081602001515111610e2f5760405162461bcd60e51b8152600401610308906122f4565b60005b816020015151811015610f9857600082602001518481518110610e5757610e576122aa565b60200260200101519050600060cb60009054906101000a90046001600160a01b03166001600160a01b03166337187fc36040518163ffffffff1660e01b815260040160206040518083038186803b158015610eb157600080fd5b505afa158015610ec5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee99190611b69565b825160208401518651604051630ace4d5d60e41b81526001600160a01b03949094169363ace4d5d093610f25938f939192909190600401612304565b60206040518083038186803b158015610f3d57600080fd5b505afa158015610f51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f759190612339565b9050610f818782611119565b965050508080610f9090612370565b915050610e32565b50508080610fa590612370565b915050610de3565b505b5092915050565b60006108c8610fc36111b4565b836111f0565b600054610100900460ff16610ff05760405162461bcd60e51b81526004016103089061229a565b815160209283012081519190920120606591909155606655565b60cc8190556040517fcf56a45f18d68202ed136bed985143964e07246be70e444cc5d94d670de61f539061103f90839061171e565b60405180910390a150565b6001600160a01b0381166110705760405162461bcd60e51b8152600401610308906123bf565b60cb80546001600160a01b0319166001600160a01b0383161790556040517f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc809061103f908390611ae7565b6000806110c784611223565b905060128082116110fa576110f16110df82846112bc565b6110ea90600a6124dd565b85906112c8565b925050506108c8565b61083f61110783836112bc565b61111290600a6124dd565b85906112d4565b60006108c582846124ec565b600061117a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112e09092919063ffffffff16565b805190915015610dba57808060200190518101906111989190611d31565b610dba5760405162461bcd60e51b81526004016103089061254b565b60006111eb7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6111e360655490565b6066546112ef565b905090565b60008282604051602001611205929190612561565b60405160208183030381529060405280519060200120905092915050565b6000806000836001600160a01b031660405161123e90612592565b600060405180830381855afa9150503d8060008114611279576040519150601f19603f3d011682016040523d82523d6000602084013e61127e565b606091505b5091509150816112a05760405162461bcd60e51b8152600401610308906125db565b808060200190518101906112b49190612339565b949350505050565b60006108c582846125eb565b60006108c58284612618565b60006108c5828461262c565b60606112b48484600085611329565b6000838383463060405160200161130a95949392919061264b565b6040516020818303038152906040528051906020012090509392505050565b60608247101561134b5760405162461bcd60e51b8152600401610308906126d0565b6001600160a01b0385163b6113725760405162461bcd60e51b815260040161030890612714565b600080866001600160a01b0316858760405161138e9190612746565b60006040518083038185875af1925050503d80600081146113cb576040519150601f19603f3d011682016040523d82523d6000602084013e6113d0565b606091505b50915091506113e08282866113eb565b979650505050505050565b606083156113fa575081610a1e565b82511561140a5782518084602001fd5b8160405162461bcd60e51b81526004016103089190612752565b60006001600160a01b0382166108c8565b61143e81611424565b8114610ab557600080fd5b80356108c881611435565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b038211171561148f5761148f611454565b6040525050565b60006114a160405190565b9050610b40828261146a565b60006001600160401b038211156114c6576114c6611454565b601f19601f83011660200192915050565b82818337506000910152565b60006114f66114f1846114ad565b611496565b90508281526020810184848401111561151157611511600080fd5b61151c8482856114d7565b509392505050565b600082601f83011261153857611538600080fd5b81356112b48482602086016114e3565b60006108c882611424565b61143e81611548565b80356108c881611553565b600080600080600060a0868803121561158257611582600080fd5b600061158e8888611449565b95505060208601356001600160401b038111156115ad576115ad600080fd5b6115b988828901611524565b94505060408601356001600160401b038111156115d8576115d8600080fd5b6115e488828901611524565b93505060608601356001600160401b0381111561160357611603600080fd5b61160f88828901611524565b92505060806116208882890161155c565b9150509295509295909350565b8061143e565b80356108c88161162d565b6001600160401b03811661143e565b80356108c88161163e565b60008060008060008060c0878903121561167457611674600080fd5b60006116808989611449565b965050602061169189828a01611633565b95505060408701356001600160401b038111156116b0576116b0600080fd5b6116bc89828a01611524565b94505060606116cd89828a01611633565b93505060806116de89828a0161164d565b92505060a08701356001600160401b038111156116fd576116fd600080fd5b61170989828a01611524565b9150509295509295509295565b805b82525050565b602081016108c88284611716565b6000806040838503121561174257611742600080fd5b600061174e8585611449565b925050602061175f85828601611633565b9150509250929050565b60006020828403121561177e5761177e600080fd5b60006112b48484611449565b600080600080600060a086880312156117a5576117a5600080fd5b60006117b18888611449565b95505060206117c288828901611633565b94505060408601356001600160401b038111156117e1576117e1600080fd5b6117ed88828901611524565b93505060606117fe88828901611633565b92505060806116208882890161164d565b61171881611424565b602081016108c8828461180f565b60008060006060848603121561183e5761183e600080fd5b600061184a868661155c565b935050602061185b86828701611449565b925050604061186c86828701611633565b9150509250925092565b6000806040838503121561188c5761188c600080fd5b60006118988585611449565b92505060208301356001600160401b038111156118b7576118b7600080fd5b61175f85828601611524565b6000806000606084860312156118db576118db600080fd5b60006118e78686611449565b93505060206118f886828701611633565b925050604061186c8682870161164d565b801515611718565b602081016108c88284611909565b60006020828403121561193457611934600080fd5b81356001600160401b0381111561194d5761194d600080fd5b6112b484828501611524565b634e487b7160e01b600052602160045260246000fd5b60058110610ab557610ab5611959565b80610b408161196f565b60006108c88261197f565b61171881611989565b805160408301906119ae8482611994565b5060208201516119c16020850182611716565b50505050565b60006119d3838361199d565b505060400190565b60006119e5825190565b80845260209384019383018060005b83811015611a19578151611a0888826119c7565b9750602083019250506001016119f4565b509495945050505050565b80516000906040840190611a388582611716565b506020830151848203602086015261083f82826119db565b60006108c58383611a24565b6000611a66825190565b80845260208401935083602082028501611a808560200190565b8060005b85811015611ab55784840389528151611a9d8582611a50565b94506020830160209a909a0199925050600101611a84565b5091979650505050505050565b602080825281016108c58184611a5c565b60006108c882611548565b61171881611ad3565b602081016108c88284611ade565b600060ff82166108c8565b61171881611af5565b602081016108c88284611b00565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815291505b5060200190565b602080825281016108c881611b17565b80516108c881611553565b600060208284031215611b7e57611b7e600080fd5b60006112b48484611b5e565b602681526000602082017f526f75746572577261707065723a2063616c6c6572206973206e6f742066756e81526519081c1bdbdb60d21b602082015291505b5060400190565b602080825281016108c881611b8a565b601681526000602082017542696c6c696e673a20696e76616c6964206e6f6e636560501b81529150611b47565b602080825281016108c881611be0565b601381526000602082017242696c6c696e673a207478206578706972657360681b81529150611b47565b602080825281016108c881611c1d565b601581526000602082017442696c6c696e673a206e6f6e63652065786973747360581b81529150611b47565b602080825281016108c881611c57565b60005b83811015611cae578181015183820152602001611c96565b838111156119c15750506000910152565b6000611cc9825190565b808452602084019350611ce0818560208601611c93565b601f01601f19169290920192915050565b60608101611cff828661180f565b611d0c6020830185611716565b818103604083015261083f8184611cbf565b80151561143e565b80516108c881611d1e565b600060208284031215611d4657611d46600080fd5b60006112b48484611d26565b601a81526000602082017f42696c6c696e673a20696e76616c6964207369676e617475726500000000000081529150611b47565b602080825281016108c881611d52565b6001600160401b038116611718565b60a08101611db3828861180f565b611dc06020830187611716565b8181036040830152611dd28186611cbf565b9050611de16060830185611716565b610a3c6080830184611d96565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526000611b47565b602080825281016108c881611dee565b602f81526000602082017f4f776e6572576974686472617761626c653a207769746864726177206e61746981526e1d99481d1bdad95b8819985a5b1959608a1b60208201529150611bc9565b602080825281016108c881611e30565b60408101611e9a8285611ade565b610a1e6020830184611716565b601d81526000602082017f42696c6c696e673a206e6f6e6578697374656e742070726f766964657200000081529150611b47565b602080825281016108c881611ea7565b60c08101611ef98289611716565b611f06602083018861180f565b611f136040830187611716565b611f206060830186611716565b611f2d6080830185611716565b6113e060a0830184611d96565b60608101611f488286611ade565b611f55602083018561180f565b6112b46040830184611716565b60408101611e9a828561180f565b60006001600160401b03821115611f8957611f89611454565b5060209081020190565b80516108c88161162d565b60058110610ab557600080fd5b80516108c881611f9e565b600060408284031215611fcb57611fcb600080fd5b611fd56040611496565b90506000611fe38484611fab565b8252506020611ff484848301611f93565b60208301525092915050565b600061200e6114f184611f70565b8381529050602081016040840283018581111561202d5761202d600080fd5b835b8181101561205357806120428882611fb6565b84525060209092019160400161202f565b5050509392505050565b600082601f83011261207157612071600080fd5b81516112b4848260208601612000565b60006040828403121561209657612096600080fd5b6120a06040611496565b905060006120ae8484611f93565b82525060208201516001600160401b038111156120cd576120cd600080fd5b611ff48482850161205d565b60006120e76114f184611f70565b8381529050602080820190840283018581111561210657612106600080fd5b835b818110156120535780516001600160401b0381111561212957612129600080fd5b8086016121368982612081565b8552505060209283019201612108565b600082601f83011261215a5761215a600080fd5b81516112b48482602086016120d9565b60006020828403121561217f5761217f600080fd5b81516001600160401b0381111561219857612198600080fd5b6112b484828501612146565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150611bc9565b602080825281016108c8816121a4565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b60208201529150611bc9565b602080825281016108c8816121f7565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150611bc9565b602080825281016108c881612252565b634e487b7160e01b600052603260045260246000fd5b601981526000602082017f42696c6c696e673a20656d7074792062696c6c20656e7472790000000000000081529150611b47565b602080825281016108c8816122c0565b60808101612312828761180f565b61231f6020830186611994565b61232c6040830185611716565b61083f6060830184611716565b60006020828403121561234e5761234e600080fd5b60006112b48484611f93565b634e487b7160e01b600052601160045260246000fd5b60006000198214156123845761238461235a565b5060010190565b601b81526000602082017f526f75746572577261707065723a207a65726f2061646472657373000000000081529150611b47565b602080825281016108c88161238b565b80825b600185111561240e578086048111156123ed576123ed61235a565b60018516156123fb57908102905b80026124078560011c90565b94506123d2565b94509492505050565b60008261242657506001610a1e565b8161243357506000610a1e565b8160018114612449576002811461245357612480565b6001915050610a1e565b60ff8411156124645761246461235a565b8360020a91508482111561247a5761247a61235a565b50610a1e565b5060208310610133831016604e8410600b84101617156124b3575081810a838111156124ae576124ae61235a565b610a1e565b6124c084848460016123cf565b925090508184048111156124d6576124d661235a565b0292915050565b60006108c56000198484612417565b600082198211156124ff576124ff61235a565b500190565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b60208201529150611bc9565b602080825281016108c881612504565b80611718565b61190160f01b81526002016000612578828561255b565b602082019150612588828461255b565b5060200192915050565b63313ce56760e01b81526000600482016108c8565b601b81526000602082017f5265736f75726365446174613a20696e76616c696420746f6b656e000000000081529150611b47565b602080825281016108c8816125a7565b6000828210156125fd576125fd61235a565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261262757612627612602565b500490565b60008160001904831182151516156126465761264661235a565b500290565b60a081016126598288611716565b6126666020830187611716565b6126736040830186611716565b6126806060830185611716565b610a3c608083018461180f565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b60208201529150611bc9565b602080825281016108c88161268d565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081529150611b47565b602080825281016108c8816126e0565b600061272e825190565b61273c818560208601611c93565b9290920192915050565b6000610a1e8284612724565b602080825281016108c58184611cbf56fea2646970667358221220178435cca88c59b4d27cab1e9238ea9de30d38d623c01cfd332b7fd8e7639a0e64736f6c63430008090033";
var Billing__factory = /** @class */ (function (_super) {
    __extends(Billing__factory, _super);
    function Billing__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (args.length === 1) {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        else {
            _this = _super.apply(this, args) || this;
        }
        return _this;
    }
    Billing__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    Billing__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    Billing__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    Billing__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    Billing__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    Billing__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    Billing__factory.bytecode = _bytecode;
    Billing__factory.abi = _abi;
    return Billing__factory;
}(ethers_1.ContractFactory));
exports.Billing__factory = Billing__factory;
