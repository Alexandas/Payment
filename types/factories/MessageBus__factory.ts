/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MessageBus, MessageBusInterface } from "../MessageBus";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISigsVerifier",
        name: "_sigsVerifier",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liquidityBridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pegBridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pegVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pegBridgeV2",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pegVaultV2",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "CallReverted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum MsgDataTypes.MsgType",
        name: "msgType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "msgId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum MsgDataTypes.TxStatus",
        name: "status",
        type: "uint8",
      },
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "srcChainId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "srcTxHash",
        type: "bytes32",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feeBase",
        type: "uint256",
      },
    ],
    name: "FeeBaseUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "feePerByte",
        type: "uint256",
      },
    ],
    name: "FeePerByteUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "liquidityBridge",
        type: "address",
      },
    ],
    name: "LiquidityBridgeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dstChainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Message",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "dstChainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bridge",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "srcTransferId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "MessageWithTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum MsgDataTypes.MsgType",
        name: "msgType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "msgId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "srcChainId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "srcTxHash",
        type: "bytes32",
      },
    ],
    name: "NeedRetry",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pegBridge",
        type: "address",
      },
    ],
    name: "PegBridgeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pegBridgeV2",
        type: "address",
      },
    ],
    name: "PegBridgeV2Updated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pegVault",
        type: "address",
      },
    ],
    name: "PegVaultUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pegVaultV2",
        type: "address",
      },
    ],
    name: "PegVaultV2Updated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "calcFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "srcChainId",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "srcTxHash",
            type: "bytes32",
          },
        ],
        internalType: "struct MsgDataTypes.RouteInfo",
        name: "_route",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "_sigs",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
    ],
    name: "executeMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "enum MsgDataTypes.TransferType",
            name: "t",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "wdseq",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "srcChainId",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "srcTxHash",
            type: "bytes32",
          },
        ],
        internalType: "struct MsgDataTypes.TransferInfo",
        name: "_transfer",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "_sigs",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
    ],
    name: "executeMessageWithTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "enum MsgDataTypes.TransferType",
            name: "t",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "wdseq",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "srcChainId",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "refId",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "srcTxHash",
            type: "bytes32",
          },
        ],
        internalType: "struct MsgDataTypes.TransferInfo",
        name: "_transfer",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "_sigs",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
    ],
    name: "executeMessageWithTransferRefund",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "executedMessages",
    outputs: [
      {
        internalType: "enum MsgDataTypes.TxStatus",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeBase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feePerByte",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_liquidityBridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pegBridge",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pegVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pegBridgeV2",
        type: "address",
      },
      {
        internalType: "address",
        name: "_pegVaultV2",
        type: "address",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pegBridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pegBridgeV2",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pegVault",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pegVaultV2",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "preExecuteMessageGasUsage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "request",
            type: "bytes",
          },
          {
            internalType: "bytes[]",
            name: "sigs",
            type: "bytes[]",
          },
          {
            internalType: "address[]",
            name: "signers",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "powers",
            type: "uint256[]",
          },
        ],
        internalType: "struct MsgDataTypes.BridgeTransferParams",
        name: "_transferParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "enum MsgDataTypes.TransferType",
                name: "t",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint64",
                name: "wdseq",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "srcChainId",
                type: "uint64",
              },
              {
                internalType: "bytes32",
                name: "refId",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "srcTxHash",
                type: "bytes32",
              },
            ],
            internalType: "struct MsgDataTypes.TransferInfo",
            name: "transfer",
            type: "tuple",
          },
          {
            internalType: "bytes[]",
            name: "sigs",
            type: "bytes[]",
          },
          {
            internalType: "address[]",
            name: "signers",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "powers",
            type: "uint256[]",
          },
        ],
        internalType: "struct MsgDataTypes.MsgWithTransferExecutionParams",
        name: "_msgParams",
        type: "tuple",
      },
    ],
    name: "refundAndExecuteMsg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dstChainId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "sendMessage",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_dstChainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_srcBridge",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_srcTransferId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_message",
        type: "bytes",
      },
    ],
    name: "sendMessageWithTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFeeBase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "setFeePerByte",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setLiquidityBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setPegBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setPegBridgeV2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setPegVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "setPegVaultV2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_usage",
        type: "uint256",
      },
    ],
    name: "setPreExecuteMessageGasUsage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sigsVerifier",
    outputs: [
      {
        internalType: "contract ISigsVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "request",
            type: "bytes",
          },
          {
            internalType: "bytes[]",
            name: "sigs",
            type: "bytes[]",
          },
          {
            internalType: "address[]",
            name: "signers",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "powers",
            type: "uint256[]",
          },
        ],
        internalType: "struct MsgDataTypes.BridgeTransferParams",
        name: "_transferParams",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "message",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "enum MsgDataTypes.TransferType",
                name: "t",
                type: "uint8",
              },
              {
                internalType: "address",
                name: "sender",
                type: "address",
              },
              {
                internalType: "address",
                name: "receiver",
                type: "address",
              },
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
              },
              {
                internalType: "uint64",
                name: "wdseq",
                type: "uint64",
              },
              {
                internalType: "uint64",
                name: "srcChainId",
                type: "uint64",
              },
              {
                internalType: "bytes32",
                name: "refId",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "srcTxHash",
                type: "bytes32",
              },
            ],
            internalType: "struct MsgDataTypes.TransferInfo",
            name: "transfer",
            type: "tuple",
          },
          {
            internalType: "bytes[]",
            name: "sigs",
            type: "bytes[]",
          },
          {
            internalType: "address[]",
            name: "signers",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "powers",
            type: "uint256[]",
          },
        ],
        internalType: "struct MsgDataTypes.MsgWithTransferExecutionParams",
        name: "_msgParams",
        type: "tuple",
      },
    ],
    name: "transferAndExecuteMsg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_cumulativeFee",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "_sigs",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_powers",
        type: "uint256[]",
      },
    ],
    name: "withdrawFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "withdrawnFees",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162003d4838038062003d48833981016040819052620000349162000163565b84848484848a6200004533620000b4565b6001600160a01b03908116608052600580546001600160a01b0319908116978316979097179055600680548716958216959095179094556007805486169385169390931790925560088054851691841691909117905560098054909316911617905550620001fb945050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160a01b0382165b92915050565b6000620001118262000104565b6200012f8162000117565b81146200013b57600080fd5b50565b8051620001118162000124565b6200012f8162000104565b805162000111816200014b565b60008060008060008060c08789031215620001815762000181600080fd5b60006200018f89896200013e565b9650506020620001a289828a0162000156565b9550506040620001b589828a0162000156565b9450506060620001c889828a0162000156565b9350506080620001db89828a0162000156565b92505060a0620001ee89828a0162000156565b9150509295509295509295565b608051613b2a6200021e600039600081816104aa01526107280152613b2a6000f3fe6080604052600436106101d85760003560e01c806382980dc411610102578063ccf2683b11610095578063e2c1ed2511610064578063e2c1ed2514610556578063f2fde38b14610576578063f60bbe2a14610596578063f83b0fb9146105ac57600080fd5b8063ccf2683b14610498578063cd2abd66146104d9578063d8257d1714610516578063dfa2dbaf1461053657600080fd5b806395e911a8116100d157806395e911a81461042f5780639b05a775146104455780639f3ce55a14610465578063c66a9c5a1461047857600080fd5b806382980dc4146103a457806382efd502146103d15780638da5cb5b146103f157806395b12c271461040f57600080fd5b80634586f3311161017a578063588be02b11610149578063588be02b146103245780635b3e5f5014610344578063723d0a9d146103715780637b80ab201461039157600080fd5b80634586f331146102a5578063468a2d04146102c55780635335dca2146102d8578063584e45e11461030e57600080fd5b8063359ef75b116101b6578063359ef75b1461023f5780633f395aff1461025f57806340d0d026146102725780634289fbb31461029257600080fd5b806303cbfe66146101dd57806306c28bd6146101ff5780632ff4c4111461021f575b600080fd5b3480156101e957600080fd5b506101fd6101f83660046123b7565b6105cc565b005b34801561020b57600080fd5b506101fd61021a3660046123f1565b61068b565b34801561022b57600080fd5b506101fd61023a366004612463565b6106f9565b34801561024b57600080fd5b506101fd61025a366004612536565b6108b6565b6101fd61026d366004612614565b6108d2565b34801561027e57600080fd5b506101fd61028d366004612733565b610b5d565b6101fd6102a03660046127a3565b610bb5565b3480156102b157600080fd5b506101fd6102c03660046123f1565b610c59565b6101fd6102d3366004612838565b610c97565b3480156102e457600080fd5b506102f86102f336600461290b565b610eb4565b604051610305919061295a565b60405180910390f35b34801561031a57600080fd5b506102f8600a5481565b34801561033057600080fd5b506101fd61033f3660046123b7565b610eda565b34801561035057600080fd5b506102f861035f3660046123b7565b60036020526000908152604090205481565b34801561037d57600080fd5b506101fd61038c366004612733565b610f85565b6101fd61039f366004612614565b610fd3565b3480156103b057600080fd5b506005546103c4906001600160a01b031681565b6040516103059190612971565b3480156103dd57600080fd5b506101fd6103ec3660046123b7565b61117a565b3480156103fd57600080fd5b506000546001600160a01b03166103c4565b34801561041b57600080fd5b506008546103c4906001600160a01b031681565b34801561043b57600080fd5b506102f860015481565b34801561045157600080fd5b506101fd6104603660046123b7565b611225565b6101fd61047336600461297f565b6112d0565b34801561048457600080fd5b506009546103c4906001600160a01b031681565b3480156104a457600080fd5b506104cc7f000000000000000000000000000000000000000000000000000000000000000081565b6040516103059190612a0b565b3480156104e557600080fd5b506105096104f43660046123f1565b60046020526000908152604090205460ff1681565b6040516103059190612a62565b34801561052257600080fd5b506007546103c4906001600160a01b031681565b34801561054257600080fd5b506006546103c4906001600160a01b031681565b34801561056257600080fd5b506101fd6105713660046123f1565b61136e565b34801561058257600080fd5b506101fd6105913660046123b7565b6113dc565b3480156105a257600080fd5b506102f860025481565b3480156105b857600080fd5b506101fd6105c73660046123b7565b611447565b336105df6000546001600160a01b031690565b6001600160a01b03161461060e5760405162461bcd60e51b815260040161060590612aa5565b60405180910390fd5b6001600160a01b0381166106345760405162461bcd60e51b815260040161060590612adb565b600680546001600160a01b0319166001600160a01b0383169081179091556040517fd60e9ceb4f54f1bfb1741a4b35fc9d806d7ed48200b523203b92248ea38fa17d9161068091612971565b60405180910390a150565b3361069e6000546001600160a01b031690565b6001600160a01b0316146106c45760405162461bcd60e51b815260040161060590612aa5565b60018190556040517f892dfdc99ecd3bb4f2f2cb118dca02f0bd16640ff156d3c6459d4282e336a5f29061068090839061295a565b6000463060405160200161070e929190612b19565b6040516020818303038152906040528051906020012090507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663682dbc22828b8b60405160200161076a93929190612b54565b6040516020818303038152906040528989898989896040518863ffffffff1660e01b81526004016107a19796959493929190612d87565b60006040518083038186803b1580156107b957600080fd5b505afa1580156107cd573d6000803e3d6000fd5b505050506001600160a01b0389166000908152600360205260408120546107f4908a612dfa565b9050600081116108165760405162461bcd60e51b815260040161060590612e45565b6001600160a01b038a166000818152600360205260408082208c90555190919061c35090849061084590612e55565b600060405180830381858888f193505050503d8060008114610883576040519150601f19603f3d011682016040523d82523d6000602084013e610888565b606091505b50509050806108a95760405162461bcd60e51b815260040161060590612e8a565b5050505050505050505050565b6108be6114f2565b6108cb8585858585611526565b5050505050565b60006108dd886115ae565b90506000808281526004602081905260409091205460ff169081111561090557610905612a19565b146109225760405162461bcd60e51b815260040161060590612ece565b6000818152600460208181526040808420805460ff1916909317909255905161094f914691309101612ede565b604051602081830303815290604052805190602001209050600560009054906101000a90046001600160a01b03166001600160a01b031663682dbc2282848e8e8e61010001356040516020016109a9959493929190612f2e565b6040516020818303038152906040528a8a8a8a8a8a6040518863ffffffff1660e01b81526004016109e09796959493929190612d87565b60006040518083038186803b1580156109f857600080fd5b505afa158015610a0c573d6000803e3d6000fd5b50505050600080610a1e8b8e8e611c8c565b90506001816002811115610a3457610a34612a19565b1415610a435760019150610b0d565b6002816002811115610a5757610a57612a19565b1415610ad8576000848152600460205260408120805460ff19166001835b02179055507fe49c2c954d381d1448cf824743aeff9da7a1d82078a7c9e5817269cc359bd26c6000858d60c0016020810190610ab19190612f8e565b8e6101000135604051610ac79493929190612fec565b60405180910390a150505050610b52565b610ae38b8e8e611dc7565b90506001816002811115610af957610af9612a19565b1415610b085760039150610b0d565b600291505b60008481526004602081905260409091208054849260ff19909116906001908490811115610b3d57610b3d612a19565b0217905550610b4d84838d611e02565b505050505b505050505050505050565b610b76610b706040830160208401613042565b83611e74565b610bb1610b838280613063565b60208401610b956101408601866130b9565b610ba36101608801886130b9565b61039f6101808a018a6130b9565b5050565b46851415610bd55760405162461bcd60e51b815260040161060590613133565b6000610be18383610eb4565b905080341015610c035760405162461bcd60e51b81526004016106059061316a565b336001600160a01b03167f172762498a59a3bc4fed3f2b63f94f17ea0193cffdc304fe7d3eaf4d342d2f6688888888888834604051610c48979695949392919061317a565b60405180910390a250505050505050565b33610c6c6000546001600160a01b031690565b6001600160a01b031614610c925760405162461bcd60e51b815260040161060590612aa5565b600a55565b6000610ca4888b8b6120d3565b90506000808281526004602081905260409091205460ff1690811115610ccc57610ccc612a19565b14610ce95760405162461bcd60e51b815260040161060590613211565b6000818152600460208181526040808420805460ff19169093179092559051610d16914691309101613221565b60408051601f198184030181529082905280516020918201206005549093506001600160a01b03169163682dbc2291610d53918591879101613258565b6040516020818303038152906040528a8a8a8a8a8a6040518863ffffffff1660e01b8152600401610d8a9796959493929190612d87565b60006040518083038186803b158015610da257600080fd5b505afa158015610db6573d6000803e3d6000fd5b50505050600080610dc88b8e8e612142565b90506001816002811115610dde57610dde612a19565b1415610ded5760019150610e74565b6002816002811115610e0157610e01612a19565b1415610e6f576000848152600460205260408120805460ff191660018302179055507fe49c2c954d381d1448cf824743aeff9da7a1d82078a7c9e5817269cc359bd26c6001858d6040016020810190610e5a9190612f8e565b8e60600135604051610ac79493929190612fec565b600291505b60008481526004602081905260409091208054849260ff19909116906001908490811115610ea457610ea4612a19565b0217905550610b4d84838d6121a1565b600254600090610ec4908361327e565b600154610ed1919061329d565b90505b92915050565b33610eed6000546001600160a01b031690565b6001600160a01b031614610f135760405162461bcd60e51b815260040161060590612aa5565b6001600160a01b038116610f395760405162461bcd60e51b815260040161060590612adb565b600580546001600160a01b0319166001600160a01b0383169081179091556040517fbf9977180dc6e6cff25598c8e59150cecd7f8e448e092633d38ab7ee223ae0589161068091612971565b610f98610b706040830160208401613042565b610bb1610fa58280613063565b60208401610fb76101408601866130b9565b610fc56101608801886130b9565b61026d6101808a018a6130b9565b6000610fde886115ae565b90506000808281526004602081905260409091205460ff169081111561100657611006612a19565b146110235760405162461bcd60e51b815260040161060590612ece565b6000818152600460208181526040808420805460ff191690931790925590516110509146913091016132b5565b604051602081830303815290604052805190602001209050600560009054906101000a90046001600160a01b03166001600160a01b031663682dbc2282848e8e8e61010001356040516020016110aa959493929190612f2e565b6040516020818303038152906040528a8a8a8a8a8a6040518863ffffffff1660e01b81526004016110e19796959493929190612d87565b60006040518083038186803b1580156110f957600080fd5b505afa15801561110d573d6000803e3d6000fd5b5050505060008061111f8b8e8e612205565b9050600181600281111561113557611135612a19565b14156111445760019150610b0d565b600281600281111561115857611158612a19565b1415610b08576000848152600460205260408120805460ff1916600183610a75565b3361118d6000546001600160a01b031690565b6001600160a01b0316146111b35760405162461bcd60e51b815260040161060590612aa5565b6001600160a01b0381166111d95760405162461bcd60e51b815260040161060590612adb565b600880546001600160a01b0319166001600160a01b0383169081179091556040517ffb337a6c76476534518d5816caeb86263972470fedccfd047a35eb1825eaa9e89161068091612971565b336112386000546001600160a01b031690565b6001600160a01b03161461125e5760405162461bcd60e51b815260040161060590612aa5565b6001600160a01b0381166112845760405162461bcd60e51b815260040161060590612adb565b600780546001600160a01b0319166001600160a01b0383169081179091556040517fa9db0c32d9c6c2f75f3b95047a9e67cc1c010eab792a4e6ca777ce918ad94aad9161068091612971565b468314156112f05760405162461bcd60e51b815260040161060590613133565b60006112fc8383610eb4565b90508034101561131e5760405162461bcd60e51b81526004016106059061316a565b336001600160a01b03167fce3972bfffe49d317e1d128047a97a3d86b25c94f6f04409f988ef854d25e0e4868686863460405161135f959493929190613302565b60405180910390a25050505050565b336113816000546001600160a01b031690565b6001600160a01b0316146113a75760405162461bcd60e51b815260040161060590612aa5565b60028190556040517f210d4d5d2d36d571207dac98e383e2441c684684c885fb2d7c54f8d24422074c9061068090839061295a565b336113ef6000546001600160a01b031690565b6001600160a01b0316146114155760405162461bcd60e51b815260040161060590612aa5565b6001600160a01b03811661143b5760405162461bcd60e51b815260040161060590613349565b6114448161225c565b50565b3361145a6000546001600160a01b031690565b6001600160a01b0316146114805760405162461bcd60e51b815260040161060590612aa5565b6001600160a01b0381166114a65760405162461bcd60e51b815260040161060590612adb565b600980546001600160a01b0319166001600160a01b0383169081179091556040517f918a691a2a82482a10e11f43d7b627b2ba220dd08f251cb61933c42560f6fcb59161068091612971565b6000546001600160a01b03161561151b5760405162461bcd60e51b8152600401610605906133bb565b6115243361225c565b565b6005546001600160a01b03161561154f5760405162461bcd60e51b8152600401610605906133ff565b600580546001600160a01b03199081166001600160a01b03978816179091556006805482169587169590951790945560078054851693861693909317909255600880548416918516919091179055600980549092169216919091179055565b6000808060016115c16020860186613042565b60068111156115d2576115d2612a19565b14156116f9576115e860408501602086016123b7565b6115f860608601604087016123b7565b61160860808701606088016123b7565b608087013561161d60e0890160c08a01612f8e565b468960e00135604051602001611639979695949392919061342d565b60408051601f19818403018152908290528051602090910120600554633c64f04b60e01b83529093506001600160a01b031691508190633c64f04b9061168390859060040161295a565b60206040518083038186803b15801561169b57600080fd5b505afa1580156116af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d391906134bb565b15156001146116f45760405162461bcd60e51b815260040161060590613509565b611c57565b60026117086020860186613042565b600681111561171957611719612a19565b1415611824574661173060c0860160a08701612f8e565b61174060608701604088016123b7565b61175060808801606089016123b7565b8760800135604051602001611769959493929190613519565b60408051601f19818403018152908290528051602090910120600554631c13568560e31b83529093506001600160a01b03169150819063e09ab428906117b390859060040161295a565b60206040518083038186803b1580156117cb57600080fd5b505afa1580156117df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180391906134bb565b15156001146116f45760405162461bcd60e51b815260040161060590613599565b60036118336020860186613042565b600681111561184457611844612a19565b148061186d5750600461185a6020860186613042565b600681111561186b5761186b612a19565b145b15611a595761188260608501604086016123b7565b61189260808601606087016123b7565b60808601356118a760408801602089016123b7565b6118b760e0890160c08a01612f8e565b8860e001356040516020016118d1969594939291906135a9565b60408051601f198184030181529190528051602090910120915060036118fa6020860186613042565b600681111561190b5761190b612a19565b14156119b557506006546040516301e6472560e01b81526001600160a01b039091169081906301e647259061194490859060040161295a565b60206040518083038186803b15801561195c57600080fd5b505afa158015611970573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199491906134bb565b15156001146116f45760405162461bcd60e51b81526004016106059061363f565b506007546040516301e6472560e01b81526001600160a01b039091169081906301e64725906119e890859060040161295a565b60206040518083038186803b158015611a0057600080fd5b505afa158015611a14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3891906134bb565b15156001146116f45760405162461bcd60e51b815260040161060590613683565b6005611a686020860186613042565b6006811115611a7957611a79612a19565b1480611aa257506006611a8f6020860186613042565b6006811115611aa057611aa0612a19565b145b15611c57576005611ab66020860186613042565b6006811115611ac757611ac7612a19565b1415611adf57506008546001600160a01b0316611aed565b506009546001600160a01b03165b611afd60608501604086016123b7565b611b0d60808601606087016123b7565b6080860135611b2260408801602089016123b7565b611b3260e0890160c08a01612f8e565b8860e0013586604051602001611b4e9796959493929190613693565b60408051601f19818403018152919052805160209091012091506005611b776020860186613042565b6006811115611b8857611b88612a19565b1415611bba576040516301e6472560e01b81526001600160a01b038216906301e647259061194490859060040161295a565b6040516301e6472560e01b81526001600160a01b038216906301e6472590611be690859060040161295a565b60206040518083038186803b158015611bfe57600080fd5b505afa158015611c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c3691906134bb565b1515600114611c575760405162461bcd60e51b815260040161060590613683565b60008183604051602001611c6d9392919061372b565b6040516020818303038152906040528051906020012092505050919050565b6000805a9050600080611ca560608801604089016123b7565b6001600160a01b031634631f34afff60e21b611cc760408b0160208c016123b7565b611cd760808c0160608d016123b7565b60808c0135611cec60e08e0160c08f01612f8e565b8c8c33604051602401611d059796959493929190613747565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909416939093179092529051611d4391906137c0565b60006040518083038185875af1925050503d8060008114611d80576040519150601f19603f3d011682016040523d82523d6000602084013e611d85565b606091505b50915091508115611dae5780806020019051810190611da491906137e4565b9350505050611dc0565b611db883826122ac565b600093505050505b9392505050565b6000805a9050600080611de060608801604089016123b7565b6001600160a01b031634632d5bd7e360e11b611cc760408b0160208c016123b7565b611e1260608201604083016123b7565b6001600160a01b03167fa635eb05143f74743822bbd96428928de4c8ee8cc578299749be9425c17bb34d60008585611e5060e0870160c08801612f8e565b866101000135604051611e67959493929190613805565b60405180910390a2505050565b6001826006811115611e8857611e88612a19565b1415611f29576005546001600160a01b031663cdd1b25d611ea98380613063565b611eb660208601866130b9565b611ec360408801886130b9565b611ed060608a018a6130b9565b6040518963ffffffff1660e01b8152600401611ef3989796959493929190613847565b600060405180830381600087803b158015611f0d57600080fd5b505af1158015611f21573d6000803e3d6000fd5b505050505050565b6002826006811115611f3d57611f3d612a19565b1415611f5e576005546001600160a01b031663a21a9280611ea98380613063565b6003826006811115611f7257611f72612a19565b1415611f93576006546001600160a01b031663f8734302611ea98380613063565b6005826006811115611fa757611fa7612a19565b1415612069576008546001600160a01b031663f8734302611fc88380613063565b611fd560208601866130b9565b611fe260408801886130b9565b611fef60608a018a6130b9565b6040518963ffffffff1660e01b8152600401612012989796959493929190613847565b602060405180830381600087803b15801561202c57600080fd5b505af1158015612040573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206491906138b1565b505050565b600482600681111561207d5761207d612a19565b141561209e576007546001600160a01b031663a21a9280611ea98380613063565b60068260068111156120b2576120b2612a19565b1415610bb1576009546001600160a01b031663a21a9280611fc88380613063565b600060016120e460208601866123b7565b6120f460408701602088016123b7565b6121046060880160408901612f8e565b87606001354688886040516020016121239897969594939291906138d2565b6040516020818303038152906040528051906020012090509392505050565b6000805a905060008061215b60408801602089016123b7565b6001600160a01b031634639c649fdf60e01b61217a60208b018b6123b7565b61218a60608c0160408d01612f8e565b8a8a33604051602401611d0595949392919061393f565b6121b160408201602083016123b7565b6001600160a01b03167fa635eb05143f74743822bbd96428928de4c8ee8cc578299749be9425c17bb34d600185856121ef6060870160408801612f8e565b8660600135604051611e67959493929190613805565b6000805a905060008061221e60608801604089016123b7565b6001600160a01b0316346305e5a4c160e11b61224060808b0160608c016123b7565b8a608001358a8a33604051602401611d0595949392919061397c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005a90506000600a54456122c19190612dfa565b905080841080156122dc57506122d86040856139ad565b8211155b156122e357fe5b7fffdd6142bbb721f3400e3908b04b86f60649b2e4d191e3f4c50c32c3e6471d2f61230d84612328565b60405161231a91906139c1565b60405180910390a150505050565b606060448251101561236d57505060408051808201909152601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b60048201915081806020019051810190610ed49190613aba565b60006001600160a01b038216610ed4565b6123a181612387565b811461144457600080fd5b8035610ed481612398565b6000602082840312156123cc576123cc600080fd5b60006123d884846123ac565b949350505050565b806123a1565b8035610ed4816123e0565b60006020828403121561240657612406600080fd5b60006123d884846123e6565b60008083601f84011261242757612427600080fd5b5081356001600160401b0381111561244157612441600080fd5b60208301915083602082028301111561245c5761245c600080fd5b9250929050565b60008060008060008060008060a0898b03121561248257612482600080fd5b600061248e8b8b6123ac565b985050602061249f8b828c016123e6565b97505060408901356001600160401b038111156124be576124be600080fd5b6124ca8b828c01612412565b965096505060608901356001600160401b038111156124eb576124eb600080fd5b6124f78b828c01612412565b945094505060808901356001600160401b0381111561251857612518600080fd5b6125248b828c01612412565b92509250509295985092959890939650565b600080600080600060a0868803121561255157612551600080fd5b600061255d88886123ac565b955050602061256e888289016123ac565b945050604061257f888289016123ac565b9350506060612590888289016123ac565b92505060806125a1888289016123ac565b9150509295509295909350565b60008083601f8401126125c3576125c3600080fd5b5081356001600160401b038111156125dd576125dd600080fd5b60208301915083600182028301111561245c5761245c600080fd5b6000610120828403121561260e5761260e600080fd5b50919050565b60008060008060008060008060006101a08a8c03121561263657612636600080fd5b89356001600160401b0381111561264f5761264f600080fd5b61265b8c828d016125ae565b9950995050602061266e8c828d016125f8565b9750506101408a01356001600160401b0381111561268e5761268e600080fd5b61269a8c828d01612412565b96509650506101608a01356001600160401b038111156126bc576126bc600080fd5b6126c88c828d01612412565b94509450506101808a01356001600160401b038111156126ea576126ea600080fd5b6126f68c828d01612412565b92509250509295985092959850929598565b60006080828403121561260e5761260e600080fd5b60006101a0828403121561260e5761260e600080fd5b6000806040838503121561274957612749600080fd5b82356001600160401b0381111561276257612762600080fd5b61276e85828601612708565b92505060208301356001600160401b0381111561278d5761278d600080fd5b6127998582860161271d565b9150509250929050565b60008060008060008060a087890312156127bf576127bf600080fd5b60006127cb89896123ac565b96505060206127dc89828a016123e6565b95505060406127ed89828a016123ac565b94505060606127fe89828a016123e6565b93505060808701356001600160401b0381111561281d5761281d600080fd5b61282989828a016125ae565b92509250509295509295509295565b60008060008060008060008060006101008a8c03121561285a5761285a600080fd5b89356001600160401b0381111561287357612873600080fd5b61287f8c828d016125ae565b995099505060206128928c828d01612708565b97505060a08a01356001600160401b038111156128b1576128b1600080fd5b6128bd8c828d01612412565b965096505060c08a01356001600160401b038111156128de576128de600080fd5b6128ea8c828d01612412565b945094505060e08a01356001600160401b038111156126ea576126ea600080fd5b6000806020838503121561292157612921600080fd5b82356001600160401b0381111561293a5761293a600080fd5b612946858286016125ae565b92509250509250929050565b805b82525050565b60208101610ed48284612952565b61295481612387565b60208101610ed48284612968565b6000806000806060858703121561299857612998600080fd5b60006129a487876123ac565b94505060206129b5878288016123e6565b93505060408501356001600160401b038111156129d4576129d4600080fd5b6129e0878288016125ae565b95989497509550505050565b6000610ed482612387565b6000610ed4826129ec565b612954816129f7565b60208101610ed48284612a02565b634e487b7160e01b600052602160045260246000fd5b6005811061144457611444612a19565b80612a4981612a2f565b919050565b6000610ed482612a3f565b61295481612a4e565b60208101610ed48284612a59565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b60208082528101610ed481612a70565b600f81526000602082016e696e76616c6964206164647265737360881b81529150612a9e565b60208082528101610ed481612ab5565b80612954565b6000610ed48260601b90565b6000610ed482612af1565b612954612b1482612387565b612afd565b6000612b258285612aeb565b602082019150612b358284612b08565b6a776974686472617746656560a81b6014830190815291601f016123d8565b6000612b608286612aeb565b602082019150612b708285612b08565b601482019150612b808284612aeb565b506020019392505050565b60005b83811015612ba6578181015183820152602001612b8e565b83811115612bb5576000848401525b50505050565b6000612bc5825190565b808452602084019350612bdc818560208601612b8b565b601f19601f8201165b9093019392505050565b82818337506000910152565b8183526000602084019350612c11838584612bef565b601f19601f840116612be5565b60006123d8848484612bfb565b6000808335601e1936859003018112612c4657612c46600080fd5b8381016020810193503591506001600160401b03821115612c6957612c69600080fd5b36829003841315612c7c57612c7c600080fd5b509250929050565b818352600060208401935083602084028101838060005b87811015612cd6578484038952612cb28284612c2b565b612cbd868284612c1e565b95506020840160209b909b019a93505050600101612c9b565b5091979650505050505050565b6000612cef8383612968565b505060200190565b6000610ed160208401846123ac565b8183526000602084019350818060005b85811015612d4357612d288284612cf7565b612d328882612ce3565b975060208301925050600101612d16565b509495945050505050565b81835260006020840193506001600160fb1b03831115612d7057612d70600080fd5b602083029250612d81838584612bef565b50500190565b60808082528101612d98818a612bbb565b90508181036020830152612dad81888a612c84565b90508181036040830152612dc2818688612d06565b90508181036060830152612dd7818486612d4e565b9998505050505050505050565b634e487b7160e01b600052601160045260246000fd5b600082821015612e0c57612e0c612de4565b500390565b601981526000602082017f4e6f206e657720616d6f756e7420746f2077697468647261770000000000000081529150612a9e565b60208082528101610ed481612e11565b600081610ed4565b60168152600060208201756661696c656420746f2077697468647261772066656560501b81529150612a9e565b60208082528101610ed481612e5d565b601981526000602082017f7472616e7366657220616c72656164792065786563757465640000000000000081529150612a9e565b60208082528101610ed481612e9a565b6000612eea8285612aeb565b602082019150612efa8284612b08565b7226b2b9b9b0b3b2abb4ba342a3930b739b332b960691b60148301908152916027016123d8565b6000612d81838584612bef565b6000612f3a8288612aeb565b602082019150612f4a8287612aeb565b602082019150612f5b828587612f21565b9150612f678284612aeb565b5060200195945050505050565b6001600160401b0381166123a1565b8035610ed481612f74565b600060208284031215612fa357612fa3600080fd5b60006123d88484612f83565b6002811061144457611444612a19565b80612a4981612faf565b6000610ed482612fbf565b61295481612fc9565b6001600160401b038116612954565b60808101612ffa8287612fd4565b6130076020830186612952565b6130146040830185612fdd565b6130216060830184612952565b95945050505050565b6007811061144457600080fd5b8035610ed48161302a565b60006020828403121561305757613057600080fd5b60006123d88484613037565b6000808335601e193685900301811261307e5761307e600080fd5b8084019250823591506001600160401b0382111561309e5761309e600080fd5b602083019250600182023603831315612c7c57612c7c600080fd5b6000808335601e19368590030181126130d4576130d4600080fd5b8084019250823591506001600160401b038211156130f4576130f4600080fd5b60209283019282023603831315612c7c57612c7c600080fd5b600f81526000602082016e125b9d985b1a590818da185a5b9259608a1b81529150612a9e565b60208082528101610ed48161310d565b601081526000602082016f496e73756666696369656e742066656560801b81529150612a9e565b60208082528101610ed481613143565b60c08101613188828a612968565b6131956020830189612952565b6131a26040830188612968565b6131af6060830187612952565b81810360808301526131c2818587612bfb565b90506131d160a0830184612952565b98975050505050505050565b601881526000602082017f6d65737361676520616c7265616479206578656375746564000000000000000081529150612a9e565b60208082528101610ed4816131dd565b600061322d8285612aeb565b60208201915061323d8284612b08565b664d65737361676560c81b6014830190815291601b016123d8565b60006132648285612aeb565b6020820191506132748284612aeb565b5060200192915050565b600081600019048311821515161561329857613298612de4565b500290565b600082198211156132b0576132b0612de4565b500190565b60006132c18285612aeb565b6020820191506132d18284612b08565b7f4d657373616765576974685472616e73666572526566756e64000000000000006014830190815291602d016123d8565b608081016133108288612968565b61331d6020830187612952565b8181036040830152613330818587612bfb565b905061333f6060830184612952565b9695505050505050565b60208082528101610ed481602681527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160208201526564647265737360d01b604082015260600190565b60118152600060208201701bdddb995c88185b1c9958591e481cd95d607a1b81529150612a9e565b60208082528101610ed481613393565b601b81526000602082017f6c697175696469747942726964676520616c726561647920736574000000000081529150612a9e565b60208082528101610ed4816133cb565b6000610ed48260c01b90565b6129546001600160401b03821661340f565b6000613439828a612b08565b6014820191506134498289612b08565b6014820191506134598288612b08565b6014820191506134698287612aeb565b602082019150613479828661341b565b600882019150613489828561341b565b6008820191506134998284612aeb565b50602001979650505050505050565b8015156123a1565b8051610ed4816134a8565b6000602082840312156134d0576134d0600080fd5b60006123d884846134b0565b6016815260006020820175189c9a5919d9481c995b185e481b9bdd08195e1a5cdd60521b81529150612a9e565b60208082528101610ed4816134dc565b6000613525828861341b565b600882019150613535828761341b565b6008820191506135458286612b08565b6014820191506135558285612b08565b601482019150612f678284612aeb565b601981526000602082017f627269646765207769746864726177206e6f742065786973740000000000000081529150612a9e565b60208082528101610ed481613565565b60006135b58289612b08565b6014820191506135c58288612b08565b6014820191506135d58287612aeb565b6020820191506135e58286612b08565b6014820191506135f5828561341b565b6008820191506136058284612aeb565b506020019695505050505050565b60158152600060208201741b5a5b9d081c9958dbdc99081b9bdd08195e1a5cdd605a1b81529150612a9e565b60208082528101610ed481613613565b601981526000602082017f7769746864726177207265636f7264206e6f742065786973740000000000000081529150612a9e565b60208082528101610ed48161364f565b600061369f828a612b08565b6014820191506136af8289612b08565b6014820191506136bf8288612aeb565b6020820191506136cf8287612b08565b6014820191506136df828661341b565b6008820191506136ef8285612aeb565b6020820191506136ff8284612b08565b50601401979650505050505050565b6000610ed48260f81b90565b61295461372682612fc9565b61370e565b6000613737828661371a565b600182019150612b708285612b08565b60c08101613755828a612968565b6137626020830189612968565b61376f6040830188612952565b61377c6060830187612fdd565b818103608083015261378f818587612bfb565b90506131d160a0830184612968565b60006137a8825190565b6137b6818560208601612b8b565b9290920192915050565b6000611dc0828461379e565b6003811061144457600080fd5b8051610ed4816137cc565b6000602082840312156137f9576137f9600080fd5b60006123d884846137d9565b60a081016138138288612fd4565b6138206020830187612952565b61382d6040830186612a59565b61383a6060830185612fdd565b61333f6080830184612952565b60808082528101613859818a8c612bfb565b9050818103602083015261386e81888a612c84565b90508181036040830152613883818688612d06565b90508181036060830152613898818486612d4e565b9a9950505050505050505050565b8051610ed4816123e0565b6000602082840312156138c6576138c6600080fd5b60006123d884846138a6565b60006138de828b61371a565b6001820191506138ee828a612b08565b6014820191506138fe8289612b08565b60148201915061390e828861341b565b60088201915061391e8287612aeb565b60208201915061392e828661341b565b600882019150613898828486612f21565b6080810161394d8288612968565b61395a6020830187612fdd565b818103604083015261396d818587612bfb565b905061333f6060830184612968565b6080810161398a8288612968565b61395a6020830187612952565b634e487b7160e01b600052601260045260246000fd5b6000826139bc576139bc613997565b500490565b60208082528101610ed18184612bbb565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715613a0d57613a0d6139d2565b6040525050565b6000613a1f60405190565b9050612a4982826139e8565b60006001600160401b03821115613a4457613a446139d2565b601f19601f83011660200192915050565b6000613a68613a6384613a2b565b613a14565b905082815260208101848484011115613a8357613a83600080fd5b613a8e848285612b8b565b509392505050565b600082601f830112613aaa57613aaa600080fd5b81516123d8848260208601613a55565b600060208284031215613acf57613acf600080fd5b81516001600160401b03811115613ae857613ae8600080fd5b6123d884828501613a9656fea2646970667358221220af12b595bc26f3210e102ba810dc294f5dbf58b1b799aa0a20dd9fb2f549c20664736f6c63430008090033";

export class MessageBus__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _sigsVerifier: string,
    _liquidityBridge: string,
    _pegBridge: string,
    _pegVault: string,
    _pegBridgeV2: string,
    _pegVaultV2: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MessageBus> {
    return super.deploy(
      _sigsVerifier,
      _liquidityBridge,
      _pegBridge,
      _pegVault,
      _pegBridgeV2,
      _pegVaultV2,
      overrides || {}
    ) as Promise<MessageBus>;
  }
  getDeployTransaction(
    _sigsVerifier: string,
    _liquidityBridge: string,
    _pegBridge: string,
    _pegVault: string,
    _pegBridgeV2: string,
    _pegVaultV2: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _sigsVerifier,
      _liquidityBridge,
      _pegBridge,
      _pegVault,
      _pegBridgeV2,
      _pegVaultV2,
      overrides || {}
    );
  }
  attach(address: string): MessageBus {
    return super.attach(address) as MessageBus;
  }
  connect(signer: Signer): MessageBus__factory {
    return super.connect(signer) as MessageBus__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MessageBusInterface {
    return new utils.Interface(_abi) as MessageBusInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MessageBus {
    return new Contract(address, _abi, signerOrProvider) as MessageBus;
  }
}
