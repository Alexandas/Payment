/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MessageSenderUpgradeable,
  MessageSenderUpgradeableInterface,
} from "../MessageSenderUpgradeable";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "AddOperator",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "dstChainId",
        type: "uint64",
      },
    ],
    name: "DstChainIdUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "messageBus",
        type: "address",
      },
    ],
    name: "MessageBusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ReceiverUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "RemoveOperator",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "addOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "calcFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dstChainId",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainID",
    outputs: [
      {
        internalType: "uint64",
        name: "id",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_messageBus",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "_dstChainId",
        type: "uint64",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messageBus",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "srcChainId",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "srcTxHash",
            type: "bytes32",
          },
        ],
        internalType: "struct MsgDataTypes.RouteInfo",
        name: "route",
        type: "tuple",
      },
      {
        internalType: "uint64",
        name: "dstChainId",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "messageId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "operators",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "removeOperator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
      {
        internalType: "uint32",
        name: "maxSlippage",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
      {
        internalType: "enum MsgDataTypes.BridgeSendType",
        name: "bridgeSendType",
        type: "uint8",
      },
    ],
    name: "sendMessageWithTransfer",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "dstChainId",
        type: "uint64",
      },
    ],
    name: "setDstChainId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "messageBus",
        type: "address",
      },
    ],
    name: "setMessageBus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "setReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50600054610100900460ff166200002f5760005460ff161562000039565b62000039620000de565b620000a15760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff16158015620000c4576000805461ffff19166101011790555b8015620000d7576000805461ff00191690555b506200010b565b6000620000f630620000fc60201b6200088b1760201c565b15905090565b6001600160a01b03163b151590565b611e25806200011b6000396000f3fe6080604052600436106101095760003560e01c80638da5cb5b11610095578063bb0248aa11610064578063bb0248aa14610315578063d7c8cb2414610335578063f2fde38b14610355578063f718845314610375578063f7260d3e1461038857600080fd5b80638da5cb5b146102835780639870d7fe146102b5578063a1a227fa146102d5578063ac8a584a146102f557600080fd5b8063547cad12116100dc578063547cad12146101e2578063564b81ef146102025780636d70f7ae14610215578063715018a61461024e578063718da7ee1461026357600080fd5b806313e7c9d81461010e57806330c593f7146101535780633fe3f1cf146101925780635335dca2146101b4575b600080fd5b34801561011a57600080fd5b5061013e6101293660046118d5565b60656020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b34801561015f57600080fd5b5060675461017a90600160a01b90046001600160401b031681565b6040516001600160401b03909116815260200161014a565b34801561019e57600080fd5b506101b26101ad36600461190e565b6103a8565b005b3480156101c057600080fd5b506101d46101cf366004611a0a565b61048e565b60405190815260200161014a565b3480156101ee57600080fd5b506101b26101fd3660046118d5565b610515565b34801561020e57600080fd5b504661017a565b34801561022157600080fd5b5061013e6102303660046118d5565b6001600160a01b031660009081526065602052604090205460ff1690565b34801561025a57600080fd5b506101b261054b565b34801561026f57600080fd5b506101b261027e3660046118d5565b610581565b34801561028f57600080fd5b506033546001600160a01b03165b6040516001600160a01b03909116815260200161014a565b3480156102c157600080fd5b506101b26102d03660046118d5565b6105b4565b3480156102e157600080fd5b5060665461029d906001600160a01b031681565b34801561030157600080fd5b506101b26103103660046118d5565b6105e7565b34801561032157600080fd5b506101d4610330366004611a46565b61061a565b34801561034157600080fd5b506101b2610350366004611adb565b61068a565b34801561036157600080fd5b506101b26103703660046118d5565b6106bd565b6101d4610383366004611af6565b610755565b34801561039457600080fd5b5060675461029d906001600160a01b031681565b600054610100900460ff166103c35760005460ff16156103c7565b303b155b61042f5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b600054610100900460ff16158015610451576000805461ffff19166101011790555b61045a8561089a565b610463846108ec565b61046c83610941565b6104758261098f565b8015610487576000805461ff00191690555b5050505050565b60665460405163299aee5160e11b81526000916001600160a01b031690635335dca2906104bf908590600401611bea565b60206040518083038186803b1580156104d757600080fd5b505afa1580156104eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050f9190611bfd565b92915050565b6033546001600160a01b0316331461053f5760405162461bcd60e51b815260040161042690611c16565b610548816108ec565b50565b6033546001600160a01b031633146105755760405162461bcd60e51b815260040161042690611c16565b61057f600061089a565b565b6033546001600160a01b031633146105ab5760405162461bcd60e51b815260040161042690611c16565b61054881610941565b6033546001600160a01b031633146105de5760405162461bcd60e51b815260040161042690611c16565b610548816109ea565b6033546001600160a01b031633146106115760405162461bcd60e51b815260040161042690611c16565b61054881610ab3565b6000600161062b60208701876118d5565b61063b60408801602089016118d5565b61064b6060890160408a01611adb565b886060013588888860405160200161066a989796959493929190611c61565b604051602081830303815290604052805190602001209050949350505050565b6033546001600160a01b031633146106b45760405162461bcd60e51b815260040161042690611c16565b6105488161098f565b6033546001600160a01b031633146106e75760405162461bcd60e51b815260040161042690611c16565b6001600160a01b03811661074c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610426565b6105488161089a565b3360009081526065602052604081205460ff166107be5760405162461bcd60e51b815260206004820152602160248201527f4f70657261746f72733a2063616c6c6572206973206e6f74206f70657261746f6044820152603960f91b6064820152608401610426565b6040516323b872dd60e01b8152336004820152306024820152604481018790526001600160a01b038816906323b872dd90606401602060405180830381600087803b15801561080c57600080fd5b505af1158015610820573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108449190611cf1565b50606754606654610880916001600160a01b03808216928b928b92600160a01b9091046001600160401b0316918b918b918b918b911634610b6c565b509695505050505050565b6001600160a01b03163b151590565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606680546001600160a01b0319166001600160a01b0383169081179091556040519081527f3f8223bcd8b3b875473e9f9e14e1ad075451a2b5ffd31591655da9a01516bf5e906020015b60405180910390a150565b606780546001600160a01b0319166001600160a01b0383169081179091556040519081527f75fd3aa5d9b6e2a8a9d8894008c9263200713f4b1fa9113665e09ceac002774690602001610936565b6067805467ffffffffffffffff60a01b1916600160a01b6001600160401b038416908102919091179091556040519081527fb21f4918f3e7b110065f3bf18a09b38074a4553144258ccfc30b57a76211e92990602001610936565b6001600160a01b03811660009081526065602052604090205460ff1615610a5f5760405162461bcd60e51b8152602060048201526024808201527f4f70657261746f72733a206f70657261746f7220697320616c726561647920616044820152631919195960e21b6064820152608401610426565b6001600160a01b038116600081815260656020908152604091829020805460ff1916600117905590519182527f4c141abccf173677929dea054f218ed87362117834a8869ec9f68d8bdaaea1dc9101610936565b6001600160a01b03811660009081526065602052604090205460ff16610b1b5760405162461bcd60e51b815260206004820152601b60248201527f4f70657261746f72733a20696e76616c6964206f70657261746f7200000000006044820152606401610426565b6001600160a01b038116600081815260656020908152604091829020805460ff1916905590519182527f6b4be2dd49eba45ba43390fbe7da13e2b965d255db41d6a0fcf6d2e15ac1fccb9101610936565b60006001846006811115610b8257610b82611c4b565b1415610ba057610b998b8b8b8b8b8b8b8a8a610c84565b9050610c76565b6002846006811115610bb457610bb4611c4b565b1480610bd157506004846006811115610bcf57610bcf611c4b565b145b15610be757610b99848c8c8c8c8c8b8a8a610e8c565b6003846006811115610bfb57610bfb611c4b565b1480610c1857506005846006811115610c1657610c16611c4b565b145b15610c2e57610b99848c8c8c8c8c8b8a8a611180565b60405162461bcd60e51b815260206004820152601960248201527f6272696467652074797065206e6f7420737570706f72746564000000000000006044820152606401610426565b9a9950505050505050505050565b600080836001600160a01b03166382980dc46040518163ffffffff1660e01b815260040160206040518083038186803b158015610cc057600080fd5b505afa158015610cd4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf89190611d13565b9050610d0e6001600160a01b038b16828b611448565b60405163a5977fbb60e01b81526001600160a01b038c811660048301528b81166024830152604482018b90526001600160401b03808b1660648401528916608483015263ffffffff881660a483015282169063a5977fbb9060c401600060405180830381600087803b158015610d8357600080fd5b505af1158015610d97573d6000803e3d6000fd5b50506040516001600160601b031930606090811b821660208401528f811b821660348401528e901b166048820152605c81018c90526001600160c01b031960c08c811b8216607c8401528b811b8216608484015246901b16608c820152600092506094019050604051602081830303815290604052805190602001209050846001600160a01b0316634289fbb3858e8c86868c6040518763ffffffff1660e01b8152600401610e4a959493929190611d30565b6000604051808303818588803b158015610e6357600080fd5b505af1158015610e77573d6000803e3d6000fd5b50939f9e505050505050505050505050505050565b60008060028b6006811115610ea357610ea3611c4b565b1415610f2157836001600160a01b031663d8257d176040518163ffffffff1660e01b815260040160206040518083038186803b158015610ee257600080fd5b505afa158015610ef6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1a9190611d13565b9050610f95565b836001600160a01b031663c66a9c5a6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f5a57600080fd5b505afa158015610f6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f929190611d13565b90505b610fa96001600160a01b038a16828a611448565b600060028c6006811115610fbf57610fbf611c4b565b14156110c157816001600160a01b031663234636248b8b8b8f8c6040518663ffffffff1660e01b8152600401610ff9959493929190611d72565b600060405180830381600087803b15801561101357600080fd5b505af1158015611027573d6000803e3d6000fd5b50505050308a8a8a8e8b466040516020016110a49796959493929190606097881b6001600160601b0319908116825296881b87166014820152602881019590955260c093841b6001600160c01b031990811660488701529290961b909416605084015292811b831660648301529290921b16606c82015260740190565b60405160208183030381529060405280519060200120905061114a565b816001600160a01b031663234636248b8b8b8f8c6040518663ffffffff1660e01b81526004016110f5959493929190611d72565b602060405180830381600087803b15801561110f57600080fd5b505af1158015611123573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111479190611bfd565b90505b604051634289fbb360e01b81526001600160a01b03861690634289fbb3908690610e4a908f908d90889088908e90600401611d30565b60008060038b600681111561119757611197611c4b565b141561121557836001600160a01b031663dfa2dbaf6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111d657600080fd5b505afa1580156111ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120e9190611d13565b9050611289565b836001600160a01b03166395b12c276040518163ffffffff1660e01b815260040160206040518083038186803b15801561124e57600080fd5b505afa158015611262573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112869190611d13565b90505b61129d6001600160a01b038a16828a611448565b600060038c60068111156112b3576112b3611c4b565b14156113aa57604051636f3c863f60e11b81526001600160a01b038b81166004830152602482018b90528c811660448301526001600160401b038916606483015283169063de790c7e90608401600060405180830381600087803b15801561131a57600080fd5b505af115801561132e573d6000803e3d6000fd5b50506040516001600160601b031930606090811b821660208401528e811b82166034840152604883018e90528f901b1660688201526001600160c01b031960c08b811b8216607c84015246901b166084820152608c01915061138d9050565b604051602081830303815290604052805190602001209050611433565b816001600160a01b031663a00293018b8b8b8f8c6040518663ffffffff1660e01b81526004016113de959493929190611d72565b602060405180830381600087803b1580156113f857600080fd5b505af115801561140c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114309190611bfd565b90505b61114a6001600160a01b038b16836000611542565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561149457600080fd5b505afa1580156114a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114cc9190611bfd565b6114d69190611dad565b6040516001600160a01b03851660248201526044810182905290915061153c90859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261166b565b50505050565b8015806115cb5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561159157600080fd5b505afa1580156115a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c99190611bfd565b155b6116365760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610426565b6040516001600160a01b03831660248201526044810182905261166690849063095ea7b360e01b90606401611505565b505050565b60006116c0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661173d9092919063ffffffff16565b80519091501561166657808060200190518101906116de9190611cf1565b6116665760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610426565b606061174c8484600085611756565b90505b9392505050565b6060824710156117b75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610426565b6001600160a01b0385163b61180e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610426565b600080866001600160a01b0316858760405161182a9190611dd3565b60006040518083038185875af1925050503d8060008114611867576040519150601f19603f3d011682016040523d82523d6000602084013e61186c565b606091505b509150915061187c828286611887565b979650505050505050565b6060831561189657508161174f565b8251156118a65782518084602001fd5b8160405162461bcd60e51b81526004016104269190611bea565b6001600160a01b038116811461054857600080fd5b6000602082840312156118e757600080fd5b813561174f816118c0565b80356001600160401b038116811461190957600080fd5b919050565b6000806000806080858703121561192457600080fd5b843561192f816118c0565b9350602085013561193f816118c0565b9250604085013561194f816118c0565b915061195d606086016118f2565b905092959194509250565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261198f57600080fd5b81356001600160401b03808211156119a9576119a9611968565b604051601f8301601f19908116603f011681019082821181831017156119d1576119d1611968565b816040528381528660208588010111156119ea57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611a1c57600080fd5b81356001600160401b03811115611a3257600080fd5b611a3e8482850161197e565b949350505050565b60008060008084860360c0811215611a5d57600080fd5b6080811215611a6b57600080fd5b50849350611a7b608086016118f2565b925060a08501356001600160401b0380821115611a9757600080fd5b818701915087601f830112611aab57600080fd5b813581811115611aba57600080fd5b886020828501011115611acc57600080fd5b95989497505060200194505050565b600060208284031215611aed57600080fd5b61174f826118f2565b60008060008060008060c08789031215611b0f57600080fd5b8635611b1a816118c0565b955060208701359450611b2f604088016118f2565b9350606087013563ffffffff81168114611b4857600080fd5b925060808701356001600160401b03811115611b6357600080fd5b611b6f89828a0161197e565b92505060a087013560078110611b8457600080fd5b809150509295509295509295565b60005b83811015611bad578181015183820152602001611b95565b8381111561153c5750506000910152565b60008151808452611bd6816020860160208601611b92565b601f01601f19169290920160200192915050565b60208152600061174f6020830184611bbe565b600060208284031215611c0f57600080fd5b5051919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052602160045260246000fd5b600060028a10611c8157634e487b7160e01b600052602160045260246000fd5b8960f81b82526bffffffffffffffffffffffff19808a60601b166001840152808960601b166015840152506001600160401b0360c01b808860c01b166029840152866031840152808660c01b16605184015250828460598401375060009101605901908152979650505050505050565b600060208284031215611d0357600080fd5b8151801515811461174f57600080fd5b600060208284031215611d2557600080fd5b815161174f816118c0565b6001600160a01b0386811682526001600160401b0386166020830152841660408201526060810183905260a06080820181905260009061187c90830184611bbe565b6001600160a01b03958616815260208101949094526001600160401b0392831660408501529316606083015291909116608082015260a00190565b60008219821115611dce57634e487b7160e01b600052601160045260246000fd5b500190565b60008251611de5818460208701611b92565b919091019291505056fea2646970667358221220e41fcdf0272e4b76c42d786907da9f3390b8d6275326d26cd2109063151b096264736f6c63430008090033";

export class MessageSenderUpgradeable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MessageSenderUpgradeable> {
    return super.deploy(overrides || {}) as Promise<MessageSenderUpgradeable>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MessageSenderUpgradeable {
    return super.attach(address) as MessageSenderUpgradeable;
  }
  connect(signer: Signer): MessageSenderUpgradeable__factory {
    return super.connect(signer) as MessageSenderUpgradeable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MessageSenderUpgradeableInterface {
    return new utils.Interface(_abi) as MessageSenderUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MessageSenderUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MessageSenderUpgradeable;
  }
}
