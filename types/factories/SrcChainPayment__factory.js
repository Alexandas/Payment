"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.SrcChainPayment__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IMessageSender",
                name: "messageSender",
                type: "address",
            },
        ],
        name: "MessageSenderUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "NativeWithdrawal",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]",
                    },
                ],
                indexed: false,
                internalType: "struct ResourceData.Payload[]",
                name: "payloads",
                type: "tuple[]",
            },
            {
                indexed: false,
                internalType: "uint32",
                name: "maxSlippage",
                type: "uint32",
            },
        ],
        name: "Paid",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Paused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "PauserAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "PauserRemoved",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IERC20Upgradeable",
                name: "token",
                type: "address",
            },
        ],
        name: "TokenUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Unpaused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IERC20Upgradeable",
                name: "token",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Withdrawal",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "addPauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.Payload[]",
                name: "payloads",
                type: "tuple[]",
            },
        ],
        name: "calcFee",
        outputs: [
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.Payload[]",
                name: "payloads",
                type: "tuple[]",
            },
        ],
        name: "encodeMessage",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "pauser",
                type: "address",
            },
            {
                internalType: "contract IMessageSender",
                name: "_messageSender",
                type: "address",
            },
            {
                internalType: "contract IERC20Upgradeable",
                name: "token",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "isPauser",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "matchResourceToToken",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "matchTokenToResource",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "messageSender",
        outputs: [
            {
                internalType: "contract IMessageSender",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "token",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "ownerWithdrawERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address payable",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "ownerWithdrawNative",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "paused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "pausers",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "uint64",
                name: "nonce",
                type: "uint64",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.Payload[]",
                name: "payloads",
                type: "tuple[]",
            },
            {
                internalType: "uint32",
                name: "maxSlippage",
                type: "uint32",
            },
        ],
        name: "pay",
        outputs: [
            {
                internalType: "bytes32",
                name: "transferId",
                type: "bytes32",
            },
        ],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "removePauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renouncePauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "resourceDecimals",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IMessageSender",
                name: "_messageSender",
                type: "address",
            },
        ],
        name: "setMessageSender",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "_token",
                type: "address",
            },
        ],
        name: "setToken",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "token",
        outputs: [
            {
                internalType: "contract IERC20Upgradeable",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "tokenDecimals",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "values",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.Payload[]",
                name: "payloads",
                type: "tuple[]",
            },
        ],
        name: "totalValue",
        outputs: [
            {
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "unpause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var _bytecode = "0x60806040523480156200001157600080fd5b5060006200002060016200008e565b9050801562000039576000805461ff0019166101001790555b801562000087576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906200007e9060019062000168565b60405180910390a15b50620001cb565b60008054610100900460ff1615620000f7578160ff166001148015620000c75750620000c5306200013b60201b62000cc91760201c565b155b620000ef5760405162461bcd60e51b8152600401620000e69062000178565b60405180910390fd5b506000919050565b60005460ff808416911610620001215760405162461bcd60e51b8152600401620000e69062000178565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b600060ff82165b92915050565b62000162816200014a565b82525050565b6020810162000151828462000157565b602080825281016200015181602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b61250180620001db6000396000f3fe6080604052600436106101815760003560e01c806382dc1ec4116100d1578063bc67f8321161008a578063f2fde38b11610064578063f2fde38b14610443578063f674529614610463578063f8c8765e14610483578063fc0c546a146104a357600080fd5b8063bc67f832146103d6578063d67bdd25146103f6578063f12973d31461042357600080fd5b806382dc1ec41461031b5780638456cb591461033b5780638c22ea5d146103505780638da5cb5b1461037057806393563a9514610396578063bb371111146103b657600080fd5b80635c975abb1161013e5780636b2c0f55116101185780636b2c0f55146102a15780636ef8d66d146102c1578063715018a6146102d657806380f51c12146102eb57600080fd5b80635c975abb1461025557806368b869541461026d578063699256f41461028157600080fd5b8063144fa6d714610186578063201ce97c146101a85780633b97e856146101d15780633f4ba83a146101e657806346fbf68e146101fb5780635b45197d14610228575b600080fd5b34801561019257600080fd5b506101a66101a13660046113fc565b6104c3565b005b6101bb6101b6366004611685565b610502565b6040516101c89190611720565b60405180910390f35b3480156101dd57600080fd5b506101bb6106b1565b3480156101f257600080fd5b506101a661074e565b34801561020757600080fd5b5061021b61021636600461172e565b61077d565b6040516101c89190611757565b34801561023457600080fd5b50610248610243366004611765565b61079b565b6040516101c89190611842565b34801561026157600080fd5b5060655460ff1661021b565b34801561027957600080fd5b5060126101bb565b34801561028d57600080fd5b506101a661029c366004611853565b6107ce565b3480156102ad57600080fd5b506101a66102bc36600461172e565b61087c565b3480156102cd57600080fd5b506101a66108af565b3480156102e257600080fd5b506101a66108b8565b3480156102f757600080fd5b5061021b61030636600461172e565b60976020526000908152604090205460ff1681565b34801561032757600080fd5b506101a661033636600461172e565b6108ec565b34801561034757600080fd5b506101a661091f565b34801561035c57600080fd5b506101bb61036b366004611765565b61094c565b34801561037c57600080fd5b506033546001600160a01b03166040516101c89190611899565b3480156103a257600080fd5b506101a66103b13660046118a7565b6109e1565b3480156103c257600080fd5b506101bb6103d13660046118f7565b610a52565b3480156103e257600080fd5b506101a66103f13660046113fc565b610b1f565b34801561040257600080fd5b5060cb54610416906001600160a01b031681565b6040516101c89190611946565b34801561042f57600080fd5b506101bb61043e366004611954565b610b52565b34801561044f57600080fd5b506101a661045e36600461172e565b610ba6565b34801561046f57600080fd5b506101bb61047e366004611954565b610bff565b34801561048f57600080fd5b506101a661049e366004611975565b610c2f565b3480156104af57600080fd5b50609854610416906001600160a01b031681565b6033546001600160a01b031633146104f65760405162461bcd60e51b81526004016104ed90611a02565b60405180910390fd5b6104ff81610cd8565b50565b600061051060655460ff1690565b1561052d5760405162461bcd60e51b81526004016104ed90611a39565b600260995414156105505760405162461bcd60e51b81526004016104ed90611a7d565b6002609955600061056084610a52565b905061056b81610b52565b609854909150610586906001600160a01b0316333084610d55565b60cb546098546105a3916001600160a01b03918216911683610db3565b60cb546098546001600160a01b039182169163f718845391349116848a886105cd8e838e8e61079b565b60016040518863ffffffff1660e01b81526004016105f096959493929190611aed565b6020604051808303818588803b15801561060957600080fd5b505af115801561061d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106429190611b4e565b60cb54609854919350610663916001600160a01b0390811691166000610db3565b7fc223cf6bda1a6d43dd56cef5d4b95b1a593f38f295323e7e59a30522bf49c1cf878787878760405161069a959493929190611c98565b60405180910390a150600160995595945050505050565b609854604051600091829182916001600160a01b0316906106d190611ceb565b600060405180830381855afa9150503d806000811461070c576040519150601f19603f3d011682016040523d82523d6000602084013e610711565b606091505b5091509150816107335760405162461bcd60e51b81526004016104ed90611d46565b808060200190518101906107479190611b4e565b9250505090565b6107573361077d565b6107735760405162461bcd60e51b81526004016104ed90611d88565b61077b610e7b565b565b6001600160a01b031660009081526097602052604090205460ff1690565b6060848484846040516020016107b49493929190611d98565b60405160208183030381529060405290505b949350505050565b6033546001600160a01b031633146107f85760405162461bcd60e51b81526004016104ed90611a02565b6040516000906001600160a01b0384169083156108fc0290849084818181858888f1935050505090508061083e5760405162461bcd60e51b81526004016104ed90611e14565b7f2c876ecb97b3c6854f2488d373403f903eacb800e51c159a5c0c7a9c857e4827838360405161086f929190611e24565b60405180910390a1505050565b6033546001600160a01b031633146108a65760405162461bcd60e51b81526004016104ed90611a02565b6104ff81610ee1565b61077b33610ee1565b6033546001600160a01b031633146108e25760405162461bcd60e51b81526004016104ed90611a02565b61077b6000610f56565b6033546001600160a01b031633146109165760405162461bcd60e51b81526004016104ed90611a02565b6104ff81610fa8565b6109283361077d565b6109445760405162461bcd60e51b81526004016104ed90611d88565b61077b611021565b60cb546000906001600160a01b0316635335dca261096c8787878761079b565b6040518263ffffffff1660e01b81526004016109889190611842565b60206040518083038186803b1580156109a057600080fd5b505afa1580156109b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d89190611b4e565b95945050505050565b6033546001600160a01b03163314610a0b5760405162461bcd60e51b81526004016104ed90611a02565b610a1f6001600160a01b0384168383611079565b7f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b639883838360405161086f93929190611e3f565b600080825111610a745760405162461bcd60e51b81526004016104ed90611eae565b60005b8251811015610b195760005b838281518110610a9557610a95611ebe565b60200260200101516020015151811015610b0657610af2848381518110610abe57610abe611ebe565b6020026020010151602001518281518110610adb57610adb611ebe565b60200260200101518461109890919063ffffffff16565b925080610afe81611eea565b915050610a83565b5080610b1181611eea565b915050610a77565b50919050565b6033546001600160a01b03163314610b495760405162461bcd60e51b81526004016104ed90611a02565b6104ff816110ad565b600080610b5d6106b1565b90506012808211610b87576107c6610b7582846110f8565b610b8090600a612013565b8590611104565b6107c6610b9483836110f8565b610b9f90600a612013565b8590611110565b6033546001600160a01b03163314610bd05760405162461bcd60e51b81526004016104ed90611a02565b6001600160a01b038116610bf65760405162461bcd60e51b81526004016104ed90612065565b6104ff81610f56565b600080610c0a6106b1565b90506012808211610c22576107c6610b9482846110f8565b6107c6610b7583836110f8565b6000610c3b600161111c565b90508015610c53576000805461ff0019166101001790555b610c5c85610f56565b610c65846111a9565b610c6e836111d0565b610c77826111f7565b8015610cc2576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249890610cb990600190612089565b60405180910390a15b5050505050565b6001600160a01b03163b151590565b6001600160a01b038116610cfe5760405162461bcd60e51b81526004016104ed906120d9565b609880546001600160a01b0319166001600160a01b0383169081179091556040517f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e3091610d4a91611946565b60405180910390a150565b610dad846323b872dd60e01b858585604051602401610d76939291906120e9565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261121e565b50505050565b801580610e3b5750604051636eb1769f60e11b81526001600160a01b0384169063dd62ed3e90610de990309086906004016120f7565b60206040518083038186803b158015610e0157600080fd5b505afa158015610e15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e399190611b4e565b155b610e575760405162461bcd60e51b81526004016104ed90612165565b610e768363095ea7b360e01b8484604051602401610d76929190612175565b505050565b60655460ff16610e9d5760405162461bcd60e51b81526004016104ed906121ae565b6065805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051610ed79190611899565b60405180910390a1565b610eea8161077d565b610f065760405162461bcd60e51b81526004016104ed906121f2565b6001600160a01b03811660009081526097602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90610d4a908390611899565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610fb18161077d565b15610fce5760405162461bcd60e51b81526004016104ed90612240565b6001600160a01b03811660009081526097602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890610d4a908390611899565b60655460ff16156110445760405162461bcd60e51b81526004016104ed90611a39565b6065805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610eca3390565b610e768363a9059cbb60e01b8484604051602401610d76929190612175565b60006110a48284612250565b90505b92915050565b60cb80546001600160a01b0319166001600160a01b0383161790556040517fd3a626089875a97be3c9702fd526ab6e28bd30904def789b36b301f03afadcaf90610d4a908390611946565b60006110a48284612268565b60006110a48284612295565b60006110a482846122a9565b60008054610100900460ff1615611163578160ff16600114801561113f5750303b155b61115b5760405162461bcd60e51b81526004016104ed90612313565b506000919050565b60005460ff80841691161061118a5760405162461bcd60e51b81526004016104ed90612313565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166109165760405162461bcd60e51b81526004016104ed9061236b565b600054610100900460ff16610b495760405162461bcd60e51b81526004016104ed9061236b565b600054610100900460ff166104f65760405162461bcd60e51b81526004016104ed9061236b565b6000611273826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112ad9092919063ffffffff16565b805190915015610e765780806020019051810190611291919061238e565b610e765760405162461bcd60e51b81526004016104ed906123f6565b60606112bc84846000856112c6565b90505b9392505050565b6060824710156112e85760405162461bcd60e51b81526004016104ed90612449565b6001600160a01b0385163b61130f5760405162461bcd60e51b81526004016104ed9061248d565b600080866001600160a01b0316858760405161132b91906124bf565b60006040518083038185875af1925050503d8060008114611368576040519150601f19603f3d011682016040523d82523d6000602084013e61136d565b606091505b509150915061137d828286611388565b979650505050505050565b606083156113975750816112bf565b8251156113a75782518084602001fd5b8160405162461bcd60e51b81526004016104ed9190611842565b60006001600160a01b0382166110a7565b60006110a7826113c1565b6113e6816113d2565b81146104ff57600080fd5b80356110a7816113dd565b60006020828403121561141157611411600080fd5b60006107c684846113f1565b6113e6816113c1565b80356110a78161141d565b67ffffffffffffffff81166113e6565b80356110a781611431565b806113e6565b80356110a78161144c565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff821117156114995761149961145d565b6040525050565b60006114ab60405190565b90506111a48282611473565b600067ffffffffffffffff8211156114d1576114d161145d565b5060209081020190565b600581106104ff57600080fd5b80356110a7816114db565b6000611506611501846114b7565b6114a0565b8381529050602080820190840283018581111561152557611525600080fd5b835b81811015611549578061153a8882611452565b84525060209283019201611527565b5050509392505050565b600082601f83011261156757611567600080fd5b81356107c68482602086016114f3565b60006040828403121561158c5761158c600080fd5b61159660406114a0565b905060006115a484846114e8565b825250602082013567ffffffffffffffff8111156115c4576115c4600080fd5b6115d084828501611553565b60208301525092915050565b60006115ea611501846114b7565b8381529050602080820190840283018581111561160957611609600080fd5b835b8181101561154957803567ffffffffffffffff81111561162d5761162d600080fd5b80860161163a8982611577565b855250506020928301920161160b565b600082601f83011261165e5761165e600080fd5b81356107c68482602086016115dc565b63ffffffff81166113e6565b80356110a78161166e565b600080600080600060a086880312156116a0576116a0600080fd5b60006116ac8888611426565b95505060206116bd88828901611441565b94505060406116ce88828901611452565b935050606086013567ffffffffffffffff8111156116ee576116ee600080fd5b6116fa8882890161164a565b925050608061170b8882890161167a565b9150509295509295909350565b805b82525050565b602081016110a78284611718565b60006020828403121561174357611743600080fd5b60006107c68484611426565b80151561171a565b602081016110a7828461174f565b6000806000806080858703121561177e5761177e600080fd5b600061178a8787611426565b945050602061179b87828801611441565b93505060406117ac87828801611452565b925050606085013567ffffffffffffffff8111156117cc576117cc600080fd5b6117d88782880161164a565b91505092959194509250565b60005b838110156117ff5781810151838201526020016117e7565b83811115610dad5750506000910152565b600061181a825190565b8084526020840193506118318185602086016117e4565b601f01601f19169290920192915050565b602080825281016110a48184611810565b6000806040838503121561186957611869600080fd5b60006118758585611426565b925050602061188685828601611452565b9150509250929050565b61171a816113c1565b602081016110a78284611890565b6000806000606084860312156118bf576118bf600080fd5b60006118cb86866113f1565b93505060206118dc86828701611426565b92505060406118ed86828701611452565b9150509250925092565b60006020828403121561190c5761190c600080fd5b813567ffffffffffffffff81111561192657611926600080fd5b6107c68482850161164a565b60006110a7826113d2565b61171a81611932565b602081016110a7828461193d565b60006020828403121561196957611969600080fd5b60006107c68484611452565b6000806000806080858703121561198e5761198e600080fd5b600061199a8787611426565b94505060206119ab87828801611426565b93505060406119bc878288016113f1565b92505060606117d8878288016113f1565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b602080825281016110a7816119cd565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b815291506119fb565b602080825281016110a781611a12565b601f81526000602082017f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815291506119fb565b602080825281016110a781611a49565b67ffffffffffffffff811661171a565b63ffffffff811661171a565b634e487b7160e01b600052602160045260246000fd5b600781106104ff576104ff611aa9565b806111a481611abf565b60006110a782611acf565b61171a81611ad9565b60c08101611afb8289611890565b611b086020830188611718565b611b156040830187611a8d565b611b226060830186611a9d565b8181036080830152611b348185611810565b905061137d60a0830184611ae4565b80516110a78161144c565b600060208284031215611b6357611b63600080fd5b60006107c68484611b43565b600581106104ff576104ff611aa9565b806111a481611b6f565b60006110a782611b7f565b61171a81611b89565b6000611ba98383611718565b505060200190565b6000611bbb825190565b80845260209384019383018060005b83811015611bef578151611bde8882611b9d565b975060208301925050600101611bca565b509495945050505050565b80516000906040840190611c0e8582611b94565b50602083015184820360208601526109d88282611bb1565b60006110a48383611bfa565b6000611c3c825190565b80845260208401935083602082028501611c568560200190565b8060005b85811015611c8b5784840389528151611c738582611c26565b94506020830160209a909a0199925050600101611c5a565b5091979650505050505050565b60a08101611ca68288611890565b611cb36020830187611a8d565b611cc06040830186611718565b8181036060830152611cd28185611c32565b9050611ce16080830184611a9d565b9695505050505050565b63313ce56760e01b81526000600482016110a7565b602681526000602082017f5265736f75726365506179546f6b656e577261707065723a20696e76616c6964815265103a37b5b2b760d11b602082015291505b5060400190565b602080825281016110a781611d00565b60208082527f5061757365723a2063616c6c6572206973206e6f742074686520706175736572910190815260006119fb565b602080825281016110a781611d56565b60808101611da68287611890565b611db36020830186611a8d565b611dc06040830185611718565b8181036060830152611ce18184611c32565b602581526000602082017f5061796d656e743a207769746864726177206e617469766520746f6b656e2066815264185a5b195960da1b60208201529150611d3f565b602080825281016110a781611dd2565b60408101611e32828561193d565b6112bf6020830184611718565b60608101611e4d828661193d565b611e5a6020830185611890565b6107c66040830184611718565b602a81526000602082017f5265736f75725061796c6f6164546f6f6c3a20696e76616c6964207061796c6f8152690c2c8e640d8cadccee8d60b31b60208201529150611d3f565b602080825281016110a781611e67565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611efe57611efe611ed4565b5060010190565b80825b6001851115611f4457808604811115611f2357611f23611ed4565b6001851615611f3157908102905b8002611f3d8560011c90565b9450611f08565b94509492505050565b600082611f5c575060016112bf565b81611f69575060006112bf565b8160018114611f7f5760028114611f8957611fb6565b60019150506112bf565b60ff841115611f9a57611f9a611ed4565b8360020a915084821115611fb057611fb0611ed4565b506112bf565b5060208310610133831016604e8410600b8410161715611fe9575081810a83811115611fe457611fe4611ed4565b6112bf565b611ff68484846001611f05565b9250905081840481111561200c5761200c611ed4565b0292915050565b60006110a46000198484611f4d565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150611d3f565b602080825281016110a781612022565b600060ff82166110a7565b61171a81612075565b602081016110a78284612080565b602581526000602082017f5265736f75726365506179546f6b656e577261707065723a207a65726f206164815264647265737360d81b60208201529150611d3f565b602080825281016110a781612097565b60608101611e4d8286611890565b604081016121058285611890565b6112bf6020830184611890565b603681526000602082017f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f81527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60208201529150611d3f565b602080825281016110a781612112565b60408101611e328285611890565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b815291506119fb565b602080825281016110a781612183565b601d81526000602082017f5061757365723a206163636f756e74206973206e6f7420706175736572000000815291506119fb565b602080825281016110a7816121be565b602181526000602082017f5061757365723a206163636f756e7420697320616c72656164792070617573658152603960f91b60208201529150611d3f565b602080825281016110a781612202565b6000821982111561226357612263611ed4565b500190565b60008282101561227a5761227a611ed4565b500390565b634e487b7160e01b600052601260045260246000fd5b6000826122a4576122a461227f565b500490565b60008160001904831182151516156122c3576122c3611ed4565b500290565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b60208201529150611d3f565b602080825281016110a7816122c8565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150611d3f565b602080825281016110a781612323565b8015156113e6565b80516110a78161237b565b6000602082840312156123a3576123a3600080fd5b60006107c68484612383565b602a81526000602082017f5361666545524332303a204552433230206f7065726174696f6e20646964206e8152691bdd081cdd58d8d9595960b21b60208201529150611d3f565b602080825281016110a7816123af565b602681526000602082017f416464726573733a20696e73756666696369656e742062616c616e636520666f8152651c8818d85b1b60d21b60208201529150611d3f565b602080825281016110a781612406565b601d81526000602082017f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000815291506119fb565b602080825281016110a781612459565b60006124a7825190565b6124b58185602086016117e4565b9290920192915050565b60006112bf828461249d56fea2646970667358221220ba4a4deea86e536875d1d11930a8de0c2870b99c2395913554166f99cecac7a864736f6c63430008090033";
var SrcChainPayment__factory = /** @class */ (function (_super) {
    __extends(SrcChainPayment__factory, _super);
    function SrcChainPayment__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (args.length === 1) {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        else {
            _this = _super.apply(this, args) || this;
        }
        return _this;
    }
    SrcChainPayment__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    SrcChainPayment__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    SrcChainPayment__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    SrcChainPayment__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    SrcChainPayment__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    SrcChainPayment__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    SrcChainPayment__factory.bytecode = _bytecode;
    SrcChainPayment__factory.abi = _abi;
    return SrcChainPayment__factory;
}(ethers_1.ContractFactory));
exports.SrcChainPayment__factory = SrcChainPayment__factory;
