/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Providers, ProvidersInterface } from "../Providers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_providers",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_wallets",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "ProviderUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "RemoveProvider",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "addProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_providers",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "_wallets",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "isProvider",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
    ],
    name: "removeProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "setWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wallets",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200177138038062001771833981016040819052620000349162000438565b600054610100900460ff16620000515760005460ff16156200005b565b6200005b620000da565b620000835760405162461bcd60e51b81526004016200007a9062000516565b60405180910390fd5b600054610100900460ff16158015620000a6576000805461ffff19166101011790555b620000b184620000f8565b620000bd83836200014a565b8015620000d0576000805461ff00191690555b5050505062000694565b6000620000f2306200020960201b620003a61760201c565b15905090565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16620001745760405162461bcd60e51b81526004016200007a9062000571565b8051825114620001985760405162461bcd60e51b81526004016200007a90620005ba565b60005b82518110156200020457620001ef838281518110620001be57620001be620005cc565b6020026020010151838381518110620001db57620001db620005cc565b60200260200101516200021860201b60201c565b80620001fb81620005f8565b9150506200019b565b505050565b6001600160a01b03163b151590565b6001600160a01b03821660009081526065602052604090205460ff1615620002545760405162461bcd60e51b81526004016200007a906200064b565b6001600160a01b038083166000908152606560209081526040808320805460ff1916600117905560669091529081902080549284166001600160a01b031990931692909217909155517fa4652513510d8a8ef70d7c10761c2fd3d3f582d2e903ac7f7a74c3075331f53f90620002ce90849084906200066e565b60405180910390a15050565b60006001600160a01b0382165b92915050565b620002f881620002da565b81146200030457600080fd5b50565b8051620002e781620002ed565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b038211171562000352576200035262000314565b6040525050565b60006200036560405190565b90506200037382826200032a565b919050565b60006001600160401b0382111562000394576200039462000314565b5060209081020190565b6000620003b5620003af8462000378565b62000359565b83815290506020808201908402830185811115620003d657620003d6600080fd5b835b81811015620003fe5780620003ee888262000307565b84525060209283019201620003d8565b5050509392505050565b600082601f8301126200041e576200041e600080fd5b8151620004308482602086016200039e565b949350505050565b600080600060608486031215620004525762000452600080fd5b600062000460868662000307565b93505060208401516001600160401b03811115620004815762000481600080fd5b6200048f8682870162000408565b92505060408401516001600160401b03811115620004b057620004b0600080fd5b620004be8682870162000408565b9150509250925092565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291505b5060400190565b60208082528101620002e781620004c8565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b602082015291506200050f565b60208082528101620002e78162000528565b601e81526000602082017f50726f7669646572733a20696e636f6e73697374656e74206c656e6774680000815291505b5060200190565b60208082528101620002e78162000583565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156200060f576200060f620005e2565b5060010190565b601b81526000602082017f50726f7669646572733a2070726f76696465722065786973746564000000000081529150620005b3565b60208082528101620002e78162000616565b6200066881620002da565b82525050565b604081016200067e82856200065d565b6200068d60208301846200065d565b9392505050565b6110cd80620006a46000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638a355a57116100665780638a355a57146101325780638da5cb5b146101455780639755f5be14610156578063deaa59df14610169578063f2fde38b1461017c57600080fd5b8063238a4d1e146100a35780634a200fa5146100cc5780636b074a07146100e1578063715018a6146100f457806389b08f11146100fc575b600080fd5b6100b66100b1366004610a51565b61018f565b6040516100c39190610ac6565b60405180910390f35b6100df6100da366004610b77565b6101d4565b005b6100b66100ef366004610bf3565b61025c565b6100df61027a565b61012561010a366004610bf3565b6066602052600090815260409020546001600160a01b031681565b6040516100c39190610c1d565b6100df610140366004610bf3565b6102b0565b6033546001600160a01b0316610125565b6100df610164366004610c2b565b6102e6565b6100df610177366004610bf3565b61031e565b6100df61018a366004610bf3565b61034d565b600061019a8461025c565b6101bf5760405162461bcd60e51b81526004016101b690610c9f565b60405180910390fd5b6101ca8484846103b5565b90505b9392505050565b600054610100900460ff166101ef5760005460ff16156101f3565b303b155b61020f5760405162461bcd60e51b81526004016101b690610cfd565b600054610100900460ff16158015610231576000805461ffff19166101011790555b61023a84610501565b6102448383610553565b8015610256576000805461ff00191690555b50505050565b6001600160a01b031660009081526065602052604090205460ff1690565b6033546001600160a01b031633146102a45760405162461bcd60e51b81526004016101b690610d3f565b6102ae6000610501565b565b6033546001600160a01b031633146102da5760405162461bcd60e51b81526004016101b690610d3f565b6102e3816105fa565b50565b6033546001600160a01b031633146103105760405162461bcd60e51b81526004016101b690610d3f565b61031a8282610677565b5050565b6103273361025c565b6103435760405162461bcd60e51b81526004016101b690610d8f565b6102e33382610721565b6033546001600160a01b031633146103775760405162461bcd60e51b81526004016101b690610d3f565b6001600160a01b03811661039d5760405162461bcd60e51b81526004016101b690610de2565b6102e381610501565b6001600160a01b03163b151590565b60008060006103c48585610782565b909250905060008160048111156103dd576103dd610df2565b1480156103fb5750856001600160a01b0316826001600160a01b0316145b1561040b576001925050506101cd565b600080876001600160a01b0316631626ba7e60e01b8888604051602401610433929190610e6c565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516104719190610eae565b600060405180830381855afa9150503d80600081146104ac576040519150601f19603f3d011682016040523d82523d6000602084013e6104b1565b606091505b50915091508180156104c4575080516020145b80156104f557508051630b135d3f60e11b906104e99083016020908101908401610ed5565b6001600160e01b031916145b98975050505050505050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff1661057a5760405162461bcd60e51b81526004016101b690610f3e565b805182511461059b5760405162461bcd60e51b81526004016101b690610f82565b60005b82518110156105f5576105e38382815181106105bc576105bc610f92565b60200260200101518383815181106105d6576105d6610f92565b6020026020010151610677565b806105ed81610fbe565b91505061059e565b505050565b6106038161025c565b61061f5760405162461bcd60e51b81526004016101b690610c9f565b7f8ab468b9f8f57e82f33d9a1742c03768ff84410a4911e8647bfa6418268769048160405161064e9190610c1d565b60405180910390a16001600160a01b03166000908152606560205260409020805460ff19169055565b6106808261025c565b1561069d5760405162461bcd60e51b81526004016101b69061100d565b6001600160a01b038083166000908152606560209081526040808320805460ff1916600117905560669091529081902080549284166001600160a01b031990931692909217909155517fa4652513510d8a8ef70d7c10761c2fd3d3f582d2e903ac7f7a74c3075331f53f90610715908490849061101d565b60405180910390a15050565b6001600160a01b038281166000908152606660205260409081902080546001600160a01b03191692841692909217909155517fa4652513510d8a8ef70d7c10761c2fd3d3f582d2e903ac7f7a74c3075331f53f90610715908490849061101d565b6000808251604114156107b95760208301516040840151606085015160001a6107ad878285856107f2565b945094505050506107eb565b8251604014156107e357602083015160408401516107d88683836108d2565b9350935050506107eb565b506000905060025b9250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561082957506000905060036108c9565b8460ff16601b1415801561084157508460ff16601c14155b1561085257506000905060046108c9565b6000600187878787604051600081526020016040526040516108779493929190611041565b6020604051602081039080840390855afa158015610899573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166108c2576000600192509250506108c9565b9150600090505b94509492505050565b6000806001600160ff1b038316816108ef60ff86901c601b61107f565b90506108fd878288856107f2565b935093505050935093915050565b60006001600160a01b0382165b92915050565b6109278161090b565b81146102e357600080fd5b80356109188161091e565b80610927565b80356109188161093d565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561098a5761098a61094e565b6040525050565b600061099c60405190565b90506109a88282610964565b919050565b600067ffffffffffffffff8211156109c7576109c761094e565b601f19601f83011660200192915050565b82818337506000910152565b60006109f76109f2846109ad565b610991565b905082815260208101848484011115610a1257610a12600080fd5b610a1d8482856109d8565b509392505050565b600082601f830112610a3957610a39600080fd5b8135610a498482602086016109e4565b949350505050565b600080600060608486031215610a6957610a69600080fd5b6000610a758686610932565b9350506020610a8686828701610943565b925050604084013567ffffffffffffffff811115610aa657610aa6600080fd5b610ab286828701610a25565b9150509250925092565b8015155b82525050565b602081016109188284610abc565b600067ffffffffffffffff821115610aee57610aee61094e565b5060209081020190565b6000610b066109f284610ad4565b83815290506020808201908402830185811115610b2557610b25600080fd5b835b81811015610b495780610b3a8882610932565b84525060209283019201610b27565b5050509392505050565b600082601f830112610b6757610b67600080fd5b8135610a49848260208601610af8565b600080600060608486031215610b8f57610b8f600080fd5b6000610b9b8686610932565b935050602084013567ffffffffffffffff811115610bbb57610bbb600080fd5b610bc786828701610b53565b925050604084013567ffffffffffffffff811115610be757610be7600080fd5b610ab286828701610b53565b600060208284031215610c0857610c08600080fd5b6000610a498484610932565b610ac08161090b565b602081016109188284610c14565b60008060408385031215610c4157610c41600080fd5b6000610c4d8585610932565b9250506020610c5e85828601610932565b9150509250929050565b601f81526000602082017f50726f7669646572733a206e6f6e6578697374656e742070726f766964657200815291505b5060200190565b6020808252810161091881610c68565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291505b5060400190565b6020808252810161091881610caf565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526000610c98565b6020808252810161091881610d0d565b602381526000602082017f50726f7669646572733a2063616c6c6572206973206e6f7420612070726f76698152623232b960e91b60208201529150610cf6565b6020808252810161091881610d4f565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150610cf6565b6020808252810161091881610d9f565b634e487b7160e01b600052602160045260246000fd5b80610ac0565b60005b83811015610e29578181015183820152602001610e11565b838111156102565750506000910152565b6000610e44825190565b808452602084019350610e5b818560208601610e0e565b601f01601f19169290920192915050565b60408101610e7a8285610e08565b81810360208301526101ca8184610e3a565b6000610e96825190565b610ea4818560208601610e0e565b9290920192915050565b60006101cd8284610e8c565b6001600160e01b03198116610927565b805161091881610eba565b600060208284031215610eea57610eea600080fd5b6000610a498484610eca565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150610cf6565b6020808252810161091881610ef6565b601e81526000602082017f50726f7669646572733a20696e636f6e73697374656e74206c656e677468000081529150610c98565b6020808252810161091881610f4e565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610fd257610fd2610fa8565b5060010190565b601b81526000602082017f50726f7669646572733a2070726f76696465722065786973746564000000000081529150610c98565b6020808252810161091881610fd9565b6040810161102b8285610c14565b6101cd6020830184610c14565b60ff8116610ac0565b6080810161104f8287610e08565b61105c6020830186611038565b6110696040830185610e08565b6110766060830184610e08565b95945050505050565b6000821982111561109257611092610fa8565b50019056fea264697066735822122035e10e25e2fb4dab878ad2fb27c14eca635c9969bbfa5e3b63d0f3d0da98ab4e64736f6c63430008090033";

export class Providers__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    owner: string,
    _providers: string[],
    _wallets: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Providers> {
    return super.deploy(
      owner,
      _providers,
      _wallets,
      overrides || {}
    ) as Promise<Providers>;
  }
  getDeployTransaction(
    owner: string,
    _providers: string[],
    _wallets: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      owner,
      _providers,
      _wallets,
      overrides || {}
    );
  }
  attach(address: string): Providers {
    return super.attach(address) as Providers;
  }
  connect(signer: Signer): Providers__factory {
    return super.connect(signer) as Providers__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ProvidersInterface {
    return new utils.Interface(_abi) as ProvidersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Providers {
    return new Contract(address, _abi, signerOrProvider) as Providers;
  }
}
