"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProviderController__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "AccountRegistered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Paused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "PauserAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "PauserRemoved",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "ProviderDripped",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IRouter",
                name: "router",
                type: "address",
            },
        ],
        name: "RouterUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Unpaused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "WalletTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "hash",
                type: "bytes32",
            },
        ],
        name: "WalletTypesHashUpdated",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "accountExists",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "addPauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "amounts",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.AmountPayload[]",
                name: "payloads",
                type: "tuple[]",
            },
            {
                internalType: "uint256",
                name: "timeout",
                type: "uint256",
            },
        ],
        name: "drip",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "accounts",
                type: "bytes32[]",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "amounts",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.AmountPayload[][]",
                name: "payloads",
                type: "tuple[][]",
            },
            {
                internalType: "uint256",
                name: "timeout",
                type: "uint256",
            },
        ],
        name: "dripMult",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "wallet",
                type: "address",
            },
        ],
        name: "hashTypedDataV4ForWallet",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "wallet",
                type: "address",
            },
        ],
        name: "hashWalletTypes",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "wallet",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "initWallet",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "pauser",
                type: "address",
            },
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                internalType: "string",
                name: "version",
                type: "string",
            },
            {
                internalType: "string",
                name: "walletTypes",
                type: "string",
            },
            {
                internalType: "contract IRouter",
                name: "router",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "isPauser",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "paused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "pausers",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "timeout",
                type: "uint256",
            },
        ],
        name: "registerAccount",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "accounts",
                type: "bytes32[]",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "amounts",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.AmountPayload[][]",
                name: "payloads",
                type: "tuple[][]",
            },
            {
                internalType: "uint256",
                name: "timeout",
                type: "uint256",
            },
        ],
        name: "registerAndDripMult",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "accounts",
                type: "bytes32[]",
            },
            {
                internalType: "uint256",
                name: "timeout",
                type: "uint256",
            },
        ],
        name: "registerMult",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "removePauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renouncePauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "router",
        outputs: [
            {
                internalType: "contract IRouter",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "newWallet",
                type: "address",
            },
        ],
        name: "transferWallet",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "unpause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "walletExists",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "walletOf",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "walletTypesHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x60806040523480156200001157600080fd5b5060006200002060016200008e565b9050801562000039576000805461ff0019166101001790555b801562000087576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906200007e9060019062000168565b60405180910390a15b50620001cb565b60008054610100900460ff1615620000f7578160ff166001148015620000c75750620000c5306200013b60201b620011b21760201c565b155b620000ef5760405162461bcd60e51b8152600401620000e69062000178565b60405180910390fd5b506000919050565b60005460ff808416911610620001215760405162461bcd60e51b8152600401620000e69062000178565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b600060ff82165b92915050565b62000162816200014a565b82525050565b6020810162000151828462000157565b602080825281016200015181602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b61328880620001db6000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c8063718bb2f3116100de5780638da5cb5b11610097578063d6f0362e11610071578063d6f0362e14610336578063dcccb5dc14610349578063f2fde38b1461035c578063f887ea401461036f57600080fd5b80638da5cb5b146102fc5780639ba72cb81461030d578063a00641081461032057600080fd5b8063718bb2f31461027857806372d9e80e1461028b57806380f51c12146102ab57806382dc1ec4146102ce5780638456cb59146102e15780638ab22b97146102e957600080fd5b806346fbf68e1161014b5780635c975abb116101255780635c975abb1461024a5780636b2c0f55146102555780636ef8d66d14610268578063715018a61461027057600080fd5b806346fbf68e1461021157806349493d93146102245780635b2ffc691461023757600080fd5b8062c1b50a14610192578063040cfc52146101a75780632d529764146101ba5780633c9542a8146101e35780633f4ba83a146101f657806345237f1c146101fe575b600080fd5b6101a56101a0366004611ea2565b61038f565b005b6101a56101b5366004612107565b6103e0565b6101cd6101c8366004612167565b61052a565b6040516101da91906121ae565b60405180910390f35b6101a56101f1366004612231565b61066d565b6101a56107e6565b6101a561020c366004612321565b610815565b6101cd61021f3660046123f9565b6108bb565b6101a561023236600461241a565b6108d9565b6101a56102453660046124cd565b610a1b565b60995460ff166101cd565b6101a56102633660046123f9565b610c19565b6101a5610c4f565b6101a5610c58565b6101a5610286366004612535565b610c8c565b61029e610299366004612167565b610e40565b6040516101da91906125bc565b6101cd6102b93660046123f9565b60cb6020526000908152604090205460ff1681565b6101a56102dc3660046123f9565b610e91565b6101a5610ec4565b6101a56102f73660046124cd565b610ef1565b6067546001600160a01b031661029e565b6101cd61031b366004612167565b6110d6565b61032960cf5481565b6040516101da91906125d0565b610329610344366004611ea2565b611100565b610329610357366004611ea2565b61111f565b6101a561036a3660046123f9565b611159565b60cc54610382906001600160a01b031681565b6040516101da91906125f2565b600061039b8484610e40565b9050336001600160a01b038216146103ce5760405162461bcd60e51b81526004016103c590612654565b60405180910390fd5b6103da848483856111c1565b50505050565b804281116104005760405162461bcd60e51b81526004016103c59061269b565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b15801561044557600080fd5b505afa158015610459573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047d91906126b6565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a07906104ac9033906004016125bc565b60206040518083038186803b1580156104c457600080fd5b505afa1580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc91906126ea565b6105185760405162461bcd60e51b81526004016103c590612751565b61052333868661123f565b5050505050565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b15801561056f57600080fd5b505afa158015610583573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a791906126b6565b6001600160a01b0316636b074a07846040518263ffffffff1660e01b81526004016105d291906125bc565b60206040518083038186803b1580156105ea57600080fd5b505afa1580156105fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062291906126ea565b61063e5760405162461bcd60e51b81526004016103c5906127a6565b506001600160a01b038216600090815260cd6020908152604080832084845290915290205460ff165b92915050565b8042811161068d5760405162461bcd60e51b81526004016103c59061269b565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b1580156106d257600080fd5b505afa1580156106e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070a91906126b6565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a07906107399033906004016125bc565b60206040518083038186803b15801561075157600080fd5b505afa158015610765573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078991906126ea565b6107a55760405162461bcd60e51b81526004016103c590612751565b60005b8451811015610523576107d4338683815181106107c7576107c76127b6565b60200260200101516117d4565b806107de816127e2565b9150506107a8565b6107ef336108bb565b61080b5760405162461bcd60e51b81526004016103c59061282f565b610813611984565b565b600061082160016119ea565b90508015610839576000805461ff0019166101001790555b61084287611a77565b61084b86611ac9565b6108558585611af0565b61085e83611b25565b61086782611b5c565b80156108b2576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906108a990600190612853565b60405180910390a15b50505050505050565b6001600160a01b0316600090815260cb602052604090205460ff1690565b804281116108f95760405162461bcd60e51b81526004016103c59061269b565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b15801561093e57600080fd5b505afa158015610952573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097691906126b6565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a07906109a59033906004016125bc565b60206040518083038186803b1580156109bd57600080fd5b505afa1580156109d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f591906126ea565b610a115760405162461bcd60e51b81526004016103c590612751565b6103da33856117d4565b80428111610a3b5760405162461bcd60e51b81526004016103c59061269b565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b158015610a8057600080fd5b505afa158015610a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab891906126b6565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a0790610ae79033906004016125bc565b60206040518083038186803b158015610aff57600080fd5b505afa158015610b13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3791906126ea565b610b535760405162461bcd60e51b81526004016103c590612751565b6000855111610b745760405162461bcd60e51b81526004016103c5906128a9565b6000845111610b955760405162461bcd60e51b81526004016103c590612901565b8351855114610bb65760405162461bcd60e51b81526004016103c59061295e565b60005b8551811015610c1157610bff33878381518110610bd857610bd86127b6565b6020026020010151878481518110610bf257610bf26127b6565b602002602001015161123f565b80610c09816127e2565b915050610bb9565b505050505050565b6067546001600160a01b03163314610c435760405162461bcd60e51b81526004016103c5906129a0565b610c4c81611b8c565b50565b61081333611b8c565b6067546001600160a01b03163314610c825760405162461bcd60e51b81526004016103c5906129a0565b6108136000611a77565b336001600160a01b03831614610cb45760405162461bcd60e51b81526004016103c5906129f9565b610cbe848461052a565b610cda5760405162461bcd60e51b81526004016103c590612a4d565b610ce484846110d6565b15610d015760405162461bcd60e51b81526004016103c590612a9b565b6000610d0e858585611100565b905060cc60009054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b158015610d5e57600080fd5b505afa158015610d72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9691906126b6565b6001600160a01b031663238a4d1e8683856040518463ffffffff1660e01b8152600401610dc593929190612b09565b602060405180830381600087803b158015610ddf57600080fd5b505af1158015610df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1791906126ea565b610e335760405162461bcd60e51b81526004016103c590612b81565b61052385856000866111c1565b6000610e4c83836110d6565b610e685760405162461bcd60e51b81526004016103c590612bd4565b506001600160a01b03918216600090815260ce6020908152604080832093835292905220541690565b6067546001600160a01b03163314610ebb5760405162461bcd60e51b81526004016103c5906129a0565b610c4c81611c0c565b610ecd336108bb565b610ee95760405162461bcd60e51b81526004016103c59061282f565b610813611c85565b80428111610f115760405162461bcd60e51b81526004016103c59061269b565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b158015610f5657600080fd5b505afa158015610f6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8e91906126b6565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a0790610fbd9033906004016125bc565b60206040518083038186803b158015610fd557600080fd5b505afa158015610fe9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100d91906126ea565b6110295760405162461bcd60e51b81526004016103c590612751565b600085511161104a5760405162461bcd60e51b81526004016103c5906128a9565b600084511161106b5760405162461bcd60e51b81526004016103c590612901565b835185511461108c5760405162461bcd60e51b81526004016103c59061295e565b60005b8551811015610c11576110ae338783815181106107c7576107c76127b6565b6110c433878381518110610bd857610bd86127b6565b806110ce816127e2565b91505061108f565b6001600160a01b03918216600090815260ce60209081526040808320938352929052205416151590565b600061111561111085858561111f565b611cdd565b90505b9392505050565b600060cf5484848460405160200161113a9493929190612be4565b6040516020818303038152906040528051906020012090509392505050565b6067546001600160a01b031633146111835760405162461bcd60e51b81526004016103c5906129a0565b6001600160a01b0381166111a95760405162461bcd60e51b81526004016103c590612c5c565b610c4c81611a77565b6001600160a01b03163b151590565b6001600160a01b03848116600090815260ce602090815260408083208784529091529081902080546001600160a01b03191692841692909217909155517f3848c851d32f9ec4e5737cee35fe6816770cfbcfd0096097933c80ffa0bc7c2890611231908690869086908690612c6c565b60405180910390a150505050565b611249838361052a565b6112655760405162461bcd60e51b81526004016103c590612cc8565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b1580156112b357600080fd5b505afa1580156112c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112eb91906126b6565b6001600160a01b0316636b074a07846040518263ffffffff1660e01b815260040161131691906125bc565b60206040518083038186803b15801561132e57600080fd5b505afa158015611342573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061136691906126ea565b6113825760405162461bcd60e51b81526004016103c5906127a6565b60008151116113a35760405162461bcd60e51b81526004016103c590612d17565b60005b81518110156117955760008282815181106113c3576113c36127b6565b6020908102919091010151805190915060018160048111156113e7576113e7612d27565b141561151c578160200151516001146114125760405162461bcd60e51b81526004016103c590612d85565b60cc60009054906101000a90046001600160a01b03166001600160a01b03166322b31aba6040518163ffffffff1660e01b815260040160206040518083038186803b15801561146057600080fd5b505afa158015611474573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061149891906126b6565b6001600160a01b031663da5001a5878785602001516000815181106114bf576114bf6127b6565b60200260200101516040518463ffffffff1660e01b81526004016114e593929190612d95565b600060405180830381600087803b1580156114ff57600080fd5b505af1158015611513573d6000803e3d6000fd5b50505050611780565b600281600481111561153057611530612d27565b14156115a95781602001515160011461155b5760405162461bcd60e51b81526004016103c590612e05565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663f931ca566040518163ffffffff1660e01b815260040160206040518083038186803b15801561146057600080fd5b60038160048111156115bd576115bd612d27565b1415611636578160200151516001146115e85760405162461bcd60e51b81526004016103c590612e5d565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663a2d2f2db6040518163ffffffff1660e01b815260040160206040518083038186803b15801561146057600080fd5b600481600481111561164a5761164a612d27565b1415611768578160200151516002146116755760405162461bcd60e51b81526004016103c590612eb5565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663740e80616040518163ffffffff1660e01b815260040160206040518083038186803b1580156116c357600080fd5b505afa1580156116d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116fb91906126b6565b6001600160a01b031663ed38118887878560200151600081518110611722576117226127b6565b60200260200101518660200151600181518110611741576117416127b6565b60200260200101516040518563ffffffff1660e01b81526004016114e59493929190612ec5565b60405162461bcd60e51b81526004016103c590612f40565b5050808061178d906127e2565b9150506113a6565b507f0cc4f008775f50ff94480b827bff217f10b555c53b83873f4cd0918a9c241ae483836040516117c7929190612f50565b60405180910390a1505050565b6117de828261052a565b156117fb5760405162461bcd60e51b81526004016103c590612faa565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561184957600080fd5b505afa15801561185d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061188191906126b6565b6001600160a01b0316636b074a07336040518263ffffffff1660e01b81526004016118ac91906125bc565b60206040518083038186803b1580156118c457600080fd5b505afa1580156118d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fc91906126ea565b6119185760405162461bcd60e51b81526004016103c5906127a6565b6001600160a01b038216600090815260cd6020908152604080832084845290915290819020805460ff19166001179055517f672144042732f7b1cdbf0772464ae545aedd7f41d38b8487dafd9085496a5d51906119789084908490612f50565b60405180910390a15050565b60995460ff166119a65760405162461bcd60e51b81526004016103c590612fe5565b6099805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516119e091906125bc565b60405180910390a1565b60008054610100900460ff1615611a31578160ff166001148015611a0d5750303b155b611a295760405162461bcd60e51b81526004016103c590613040565b506000919050565b60005460ff808416911610611a585760405162461bcd60e51b81526004016103c590613040565b506000805460ff191660ff92909216919091179055600190565b919050565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610ebb5760405162461bcd60e51b81526004016103c590613098565b600054610100900460ff16611b175760405162461bcd60e51b81526004016103c590613098565b611b218282611cf0565b5050565b600054610100900460ff16611b4c5760405162461bcd60e51b81526004016103c590613098565b610c4c8180519060200120611d31565b600054610100900460ff16611b835760405162461bcd60e51b81526004016103c590613098565b610c4c81611d66565b611b95816108bb565b611bb15760405162461bcd60e51b81526004016103c5906130dc565b6001600160a01b038116600090815260cb602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90611c019083906125bc565b60405180910390a150565b611c15816108bb565b15611c325760405162461bcd60e51b81526004016103c59061312a565b6001600160a01b038116600090815260cb602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890611c019083906125bc565b60995460ff1615611ca85760405162461bcd60e51b81526004016103c590613161565b6099805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586119d33390565b6000610667611cea611dd7565b83611e13565b600054610100900460ff16611d175760405162461bcd60e51b81526004016103c590613098565b815160209283012081519190920120600191909155600255565b60cf8190556040517fd5b7aa922fbc99b384e2da1530298f9f1f39cbaafe5584138c9a7031f594a34f90611c019083906125d0565b6001600160a01b038116611d8c5760405162461bcd60e51b81526004016103c5906131a5565b60cc80546001600160a01b0319166001600160a01b0383161790556040517f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc8090611c019083906125f2565b6000611e0e7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611e0660015490565b600254611e46565b905090565b60008282604051602001611e289291906131b5565b60405160208183030381529060405280519060200120905092915050565b6000838383463060405160200161113a9594939291906131e6565b60006001600160a01b038216610667565b611e7b81611e61565b8114610c4c57600080fd5b803561066781611e72565b80611e7b565b803561066781611e91565b600080600060608486031215611eba57611eba600080fd5b6000611ec68686611e86565b9350506020611ed786828701611e97565b9250506040611ee886828701611e86565b9150509250925092565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b0382111715611f2d57611f2d611ef2565b6040525050565b6000611f3f60405190565b9050611a728282611f08565b60006001600160401b03821115611f6457611f64611ef2565b5060209081020190565b60058110610c4c57600080fd5b803561066781611f6e565b6000611f99611f9484611f4b565b611f34565b83815290506020808201908402830185811115611fb857611fb8600080fd5b835b81811015611fdc5780611fcd8882611e97565b84525060209283019201611fba565b5050509392505050565b600082601f830112611ffa57611ffa600080fd5b813561200a848260208601611f86565b949350505050565b60006040828403121561202757612027600080fd5b6120316040611f34565b9050600061203f8484611f7b565b82525060208201356001600160401b0381111561205e5761205e600080fd5b61206a84828501611fe6565b60208301525092915050565b6000612084611f9484611f4b565b838152905060208082019084028301858111156120a3576120a3600080fd5b835b81811015611fdc5780356001600160401b038111156120c6576120c6600080fd5b8086016120d38982612012565b85525050602092830192016120a5565b600082601f8301126120f7576120f7600080fd5b813561200a848260208601612076565b60008060006060848603121561211f5761211f600080fd5b600061212b8686611e97565b93505060208401356001600160401b0381111561214a5761214a600080fd5b612156868287016120e3565b9250506040611ee886828701611e97565b6000806040838503121561217d5761217d600080fd5b60006121898585611e86565b925050602061219a85828601611e97565b9150509250929050565b8015155b82525050565b6020810161066782846121a4565b60006121ca611f9484611f4b565b838152905060208082019084028301858111156121e9576121e9600080fd5b835b81811015611fdc57806121fe8882611e97565b845250602092830192016121eb565b600082601f83011261222157612221600080fd5b813561200a8482602086016121bc565b6000806040838503121561224757612247600080fd5b82356001600160401b0381111561226057612260600080fd5b6121898582860161220d565b60006001600160401b0382111561228557612285611ef2565b601f19601f83011660200192915050565b82818337506000910152565b60006122b0611f948461226c565b9050828152602081018484840111156122cb576122cb600080fd5b6122d6848285612296565b509392505050565b600082601f8301126122f2576122f2600080fd5b813561200a8482602086016122a2565b600061066782611e61565b611e7b81612302565b80356106678161230d565b60008060008060008060c0878903121561233d5761233d600080fd5b60006123498989611e86565b965050602061235a89828a01611e86565b95505060408701356001600160401b0381111561237957612379600080fd5b61238589828a016122de565b94505060608701356001600160401b038111156123a4576123a4600080fd5b6123b089828a016122de565b93505060808701356001600160401b038111156123cf576123cf600080fd5b6123db89828a016122de565b92505060a06123ec89828a01612316565b9150509295509295509295565b60006020828403121561240e5761240e600080fd5b600061200a8484611e86565b6000806040838503121561243057612430600080fd5b60006121898585611e97565b600061244a611f9484611f4b565b8381529050602080820190840283018581111561246957612469600080fd5b835b81811015611fdc5780356001600160401b0381111561248c5761248c600080fd5b80860161249989826120e3565b855250506020928301920161246b565b600082601f8301126124bd576124bd600080fd5b813561200a84826020860161243c565b6000806000606084860312156124e5576124e5600080fd5b83356001600160401b038111156124fe576124fe600080fd5b61250a8682870161220d565b93505060208401356001600160401b0381111561252957612529600080fd5b612156868287016124a9565b6000806000806080858703121561254e5761254e600080fd5b600061255a8787611e86565b945050602061256b87828801611e97565b935050604061257c87828801611e86565b92505060608501356001600160401b0381111561259b5761259b600080fd5b6125a7878288016122de565b91505092959194509250565b6121a881611e61565b6020810161066782846125b3565b806121a8565b6020810161066782846125ca565b600061066782612302565b6121a8816125de565b6020810161066782846125e9565b603481526000602082017f50726f7669646572436f6e74726f6c6c65723a2063616c6c6572206973206e6f8152731d081d1a194818dd5c9c995b9d081dd85b1b195d60621b602082015291505b5060400190565b6020808252810161066781612600565b601e81526000602082017f50726f7669646572436f6e74726f6c6c65723a20747820657870697265730000815291505b5060200190565b6020808252810161066781612664565b80516106678161230d565b6000602082840312156126cb576126cb600080fd5b600061200a84846126ab565b801515611e7b565b8051610667816126d7565b6000602082840312156126ff576126ff600080fd5b600061200a84846126df565b602981526000602082017f526f75746572577261707065723a2063616c6c6572206973206e6f742074686581526810383937bb34b232b960b91b6020820152915061264d565b602080825281016106678161270b565b602881526000602082017f50726f7669646572436f6e74726f6c6c65723a206e6f6e6578697374656e7420815267383937bb34b232b960c11b6020820152915061264d565b6020808252810161066781612761565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156127f6576127f66127cc565b5060010190565b60208082527f5061757365723a2063616c6c6572206973206e6f74207468652070617573657291019081526000612694565b60208082528101610667816127fd565b600060ff8216610667565b6121a88161283f565b60208101610667828461284a565b602b81526000602082017f50726f7669646572436f6e74726f6c6c65723a20696e76616c6964206163636f81526a0eadce8e640d8cadccee8d60ab1b6020820152915061264d565b6020808252810161066781612861565b602b81526000602082017f50726f7669646572436f6e74726f6c6c65723a20696e76616c6964207061796c81526a0dec2c8e640d8cadccee8d60ab1b6020820152915061264d565b60208082528101610667816128b9565b603081526000602082017f50726f7669646572436f6e74726f6c6c65723a20696e636f6e736974656e742081526f0e0c2e4c2dacae8cae440d8cadccee8d60831b6020820152915061264d565b6020808252810161066781612911565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526000612694565b602080825281016106678161296e565b602c81526000602082017f50726f7669646572436f6e74726f6c6c65723a2063616c6c657220696e206e6f81526b1d081d1a19481dd85b1b195d60a21b6020820152915061264d565b60208082528101610667816129b0565b602781526000602082017f50726f7669646572436f6e74726f6c6c65723a206e6f6e6578697374656e74208152661858d8dbdd5b9d60ca1b6020820152915061264d565b6020808252810161066781612a09565b602181526000602082017f50726f7669646572436f6e74726f6c6c65723a2077616c6c65742065786973748152607360f81b6020820152915061264d565b6020808252810161066781612a5d565b60005b83811015612ac6578181015183820152602001612aae565b838111156103da5750506000910152565b6000612ae1825190565b808452602084019350612af8818560208601612aab565b601f01601f19169290920192915050565b60608101612b1782866125b3565b612b2460208301856125ca565b8181036040830152612b368184612ad7565b95945050505050565b602581526000602082017f50726f7669646572436f6e74726f6c6c65723a20696e76616c6964207369676e815264617475726560d81b6020820152915061264d565b6020808252810161066781612b3f565b602681526000602082017f50726f7669646572436f6e74726f6c6c65723a206e6f6e6578697374656e74208152651dd85b1b195d60d21b6020820152915061264d565b6020808252810161066781612b91565b60808101612bf282876125ca565b612bff60208301866125b3565b612c0c60408301856125ca565b612b3660608301846125b3565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b6020820152915061264d565b6020808252810161066781612c19565b60808101612c7a82876125b3565b612c8760208301866125ca565b612c0c60408301856125b3565b601f81526000602082017f4163636f756e7452656769737472793a206163636f756e74206578697374730081529150612694565b6020808252810161066781612c94565b602281526000602082017f50726f7669646572436f6e74726f6c6c65723a20656d707479207061796c6f61815261647360f01b6020820152915061264d565b6020808252810161066781612cd8565b634e487b7160e01b600052602160045260246000fd5b603c815260006020820160008051602061323383398151915281527f6e7473206c656e67746820666f72206275696c64696e672074696d65000000006020820152915061264d565b6020808252810161066781612d3d565b60608101612da382866125b3565b612db060208301856125ca565b61200a60408301846125ca565b6038815260006020820160008051602061323383398151915281527f6e7473206c656e67746820666f722062616e64776964746800000000000000006020820152915061264d565b6020808252810161066781612dbd565b6039815260006020820160008051602061323383398151915281527f6e7473206c656e67746820666f722061722073746f72616765000000000000006020820152915061264d565b6020808252810161066781612e15565b603b815260006020820160008051602061323383398151915281527f6e7473206c656e67746820666f7220697066732073746f7261676500000000006020820152915061264d565b6020808252810161066781612e6d565b60808101612ed382876125b3565b612ee060208301866125ca565b612eed60408301856125ca565b612b3660608301846125ca565b602981526000602082017f50726f7669646572436f6e74726f6c6c65723a20756e6b6e6f776e207265736f81526875726365207479706560b81b6020820152915061264d565b6020808252810161066781612efa565b60408101612f5e82856125b3565b61111860208301846125ca565b602281526000602082017f50726f7669646572436f6e74726f6c6c65723a206163636f756e742065786973815261747360f01b6020820152915061264d565b6020808252810161066781612f6b565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b81529150612694565b6020808252810161066781612fba565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b6020820152915061264d565b6020808252810161066781612ff5565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b6020820152915061264d565b6020808252810161066781613050565b601d81526000602082017f5061757365723a206163636f756e74206973206e6f742070617573657200000081529150612694565b60208082528101610667816130a8565b602181526000602082017f5061757365723a206163636f756e7420697320616c72656164792070617573658152603960f91b6020820152915061264d565b60208082528101610667816130ec565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b81529150612694565b602080825281016106678161313a565b601b81526000602082017f526f75746572577261707065723a207a65726f2061646472657373000000000081529150612694565b6020808252810161066781613171565b61190160f01b815260020160006131cc82856125ca565b6020820191506131dc82846125ca565b5060200192915050565b60a081016131f482886125ca565b61320160208301876125ca565b61320e60408301866125ca565b61321b60608301856125ca565b61322860808301846125b3565b969550505050505056fe50726f7669646572436f6e74726f6c6c65723a20696e76616c696420616d6f75a264697066735822122080b5c5f8972bf96b25f4c2ef1a4af166b740ba64716c79a9802d9144665ee68f64736f6c63430008090033";
var ProviderController__factory = /** @class */ (function (_super) {
    __extends(ProviderController__factory, _super);
    function ProviderController__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (args.length === 1) {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        else {
            _this = _super.apply(this, args) || this;
        }
        return _this;
    }
    ProviderController__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    ProviderController__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    ProviderController__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ProviderController__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ProviderController__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ProviderController__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ProviderController__factory.bytecode = _bytecode;
    ProviderController__factory.abi = _abi;
    return ProviderController__factory;
}(ethers_1.ContractFactory));
exports.ProviderController__factory = ProviderController__factory;
