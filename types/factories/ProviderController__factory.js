"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProviderController__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "AccountRegistered",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Paused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "PauserAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "PauserRemoved",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "ProviderDripped",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "contract IRouter",
                name: "router",
                type: "address",
            },
        ],
        name: "RouterUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "Unpaused",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "to",
                type: "address",
            },
        ],
        name: "WalletTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bytes32",
                name: "hash",
                type: "bytes32",
            },
        ],
        name: "WalletTypesHashUpdated",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "accountExists",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "addPauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "amounts",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.AmountPayload[]",
                name: "payloads",
                type: "tuple[]",
            },
            {
                internalType: "uint256",
                name: "timeout",
                type: "uint256",
            },
        ],
        name: "drip",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "accounts",
                type: "bytes32[]",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "amounts",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.AmountPayload[][]",
                name: "payloads",
                type: "tuple[][]",
            },
            {
                internalType: "uint256",
                name: "timeout",
                type: "uint256",
            },
        ],
        name: "dripMult",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "wallet",
                type: "address",
            },
        ],
        name: "hashTypedDataV4ForWallet",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "wallet",
                type: "address",
            },
        ],
        name: "hashWalletTypes",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "wallet",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "initWallet",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "pauser",
                type: "address",
            },
            {
                internalType: "string",
                name: "walletTypes",
                type: "string",
            },
            {
                internalType: "contract IRouter",
                name: "router",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "isPauser",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "pause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "paused",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "pausers",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "timeout",
                type: "uint256",
            },
        ],
        name: "registerAccount",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "accounts",
                type: "bytes32[]",
            },
            {
                components: [
                    {
                        internalType: "enum ResourceData.ResourceType",
                        name: "resourceType",
                        type: "uint8",
                    },
                    {
                        internalType: "uint256[]",
                        name: "amounts",
                        type: "uint256[]",
                    },
                ],
                internalType: "struct ResourceData.AmountPayload[][]",
                name: "payloads",
                type: "tuple[][]",
            },
            {
                internalType: "uint256",
                name: "timeout",
                type: "uint256",
            },
        ],
        name: "registerAndDripMult",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32[]",
                name: "accounts",
                type: "bytes32[]",
            },
            {
                internalType: "uint256",
                name: "timeout",
                type: "uint256",
            },
        ],
        name: "registerMult",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "removePauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "renouncePauser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "router",
        outputs: [
            {
                internalType: "contract IRouter",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
            {
                internalType: "address",
                name: "newWallet",
                type: "address",
            },
        ],
        name: "transferWallet",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "unpause",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "walletExists",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "account",
                type: "bytes32",
            },
        ],
        name: "walletOf",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "walletTypesHash",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x60806040523480156200001157600080fd5b5060006200002060016200008e565b9050801562000039576000805461ff0019166101001790555b801562000087576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906200007e9060019062000168565b60405180910390a15b50620001cb565b60008054610100900460ff1615620000f7578160ff166001148015620000c75750620000c5306200013b60201b620011571760201c565b155b620000ef5760405162461bcd60e51b8152600401620000e69062000178565b60405180910390fd5b506000919050565b60005460ff808416911610620001215760405162461bcd60e51b8152600401620000e69062000178565b506000805460ff191660ff92909216919091179055600190565b6001600160a01b03163b151590565b600060ff82165b92915050565b62000162816200014a565b82525050565b6020810162000151828462000157565b602080825281016200015181602e81527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160208201526d191e481a5b9a5d1a585b1a5e995960921b604082015260600190565b6130b080620001db6000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c8063718bb2f3116100de5780638da5cb5b11610097578063d6f0362e11610071578063d6f0362e14610336578063dcccb5dc14610349578063f2fde38b1461035c578063f887ea401461036f57600080fd5b80638da5cb5b146102fc5780639ba72cb81461030d578063a00641081461032057600080fd5b8063718bb2f31461027857806372d9e80e1461028b57806380f51c12146102ab57806382dc1ec4146102ce5780638456cb59146102e15780638ab22b97146102e957600080fd5b806346fbf68e1161014b5780635c975abb116101255780635c975abb1461024a5780636b2c0f55146102555780636ef8d66d14610268578063715018a61461027057600080fd5b806346fbf68e1461021157806349493d93146102245780635b2ffc691461023757600080fd5b8062c1b50a14610192578063040cfc52146101a757806309c26fb1146101ba5780632d529764146101cd5780633c9542a8146101f65780633f4ba83a14610209575b600080fd5b6101a56101a0366004611dd1565b61038f565b005b6101a56101b536600461203a565b6103e0565b6101a56101c8366004612151565b61052a565b6101e06101db3660046121d0565b6105c3565b6040516101ed9190612217565b60405180910390f35b6101a561020436600461229a565b610706565b6101a561087f565b6101e061021f3660046122d6565b6108ae565b6101a56102323660046122f7565b6108cc565b6101a56102453660046123ab565b610a0e565b60995460ff166101e0565b6101a56102633660046122d6565b610c0c565b6101a5610c42565b6101a5610c4b565b6101a5610286366004612415565b610c7f565b61029e6102993660046121d0565b610de5565b6040516101ed9190612491565b6101e06102b93660046122d6565b60cb6020526000908152604090205460ff1681565b6101a56102dc3660046122d6565b610e36565b6101a5610e69565b6101a56102f73660046123ab565b610e96565b6067546001600160a01b031661029e565b6101e061031b3660046121d0565b61107b565b61032960cf5481565b6040516101ed91906124a5565b610329610344366004611dd1565b6110a5565b610329610357366004611dd1565b6110c4565b6101a561036a3660046122d6565b6110fe565b60cc54610382906001600160a01b031681565b6040516101ed91906124c7565b600061039b8484610de5565b9050336001600160a01b038216146103ce5760405162461bcd60e51b81526004016103c590612529565b60405180910390fd5b6103da84848385611166565b50505050565b804281116104005760405162461bcd60e51b81526004016103c590612570565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b15801561044557600080fd5b505afa158015610459573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047d919061258b565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a07906104ac903390600401612491565b60206040518083038186803b1580156104c457600080fd5b505afa1580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc91906125bf565b6105185760405162461bcd60e51b81526004016103c590612626565b6105233386866111e4565b5050505050565b60006105366001611779565b9050801561054e576000805461ff0019166101001790555b61055785611806565b61056084611858565b6105698361187f565b610572826118b6565b8015610523576000805461ff00191690556040517f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906105b49060019061264a565b60405180910390a15050505050565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b15801561060857600080fd5b505afa15801561061c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610640919061258b565b6001600160a01b0316636b074a07846040518263ffffffff1660e01b815260040161066b9190612491565b60206040518083038186803b15801561068357600080fd5b505afa158015610697573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bb91906125bf565b6106d75760405162461bcd60e51b81526004016103c59061269d565b506001600160a01b038216600090815260cd6020908152604080832084845290915290205460ff165b92915050565b804281116107265760405162461bcd60e51b81526004016103c590612570565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b15801561076b57600080fd5b505afa15801561077f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a3919061258b565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a07906107d2903390600401612491565b60206040518083038186803b1580156107ea57600080fd5b505afa1580156107fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082291906125bf565b61083e5760405162461bcd60e51b81526004016103c590612626565b60005b84518110156105235761086d33868381518110610860576108606126ad565b60200260200101516118e6565b80610877816126d9565b915050610841565b610888336108ae565b6108a45760405162461bcd60e51b81526004016103c590612726565b6108ac611a96565b565b6001600160a01b0316600090815260cb602052604090205460ff1690565b804281116108ec5760405162461bcd60e51b81526004016103c590612570565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b15801561093157600080fd5b505afa158015610945573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610969919061258b565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a0790610998903390600401612491565b60206040518083038186803b1580156109b057600080fd5b505afa1580156109c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e891906125bf565b610a045760405162461bcd60e51b81526004016103c590612626565b6103da33856118e6565b80428111610a2e5760405162461bcd60e51b81526004016103c590612570565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b158015610a7357600080fd5b505afa158015610a87573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aab919061258b565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a0790610ada903390600401612491565b60206040518083038186803b158015610af257600080fd5b505afa158015610b06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2a91906125bf565b610b465760405162461bcd60e51b81526004016103c590612626565b6000855111610b675760405162461bcd60e51b81526004016103c59061277e565b6000845111610b885760405162461bcd60e51b81526004016103c5906127d6565b8351855114610ba95760405162461bcd60e51b81526004016103c590612833565b60005b8551811015610c0457610bf233878381518110610bcb57610bcb6126ad565b6020026020010151878481518110610be557610be56126ad565b60200260200101516111e4565b80610bfc816126d9565b915050610bac565b505050505050565b6067546001600160a01b03163314610c365760405162461bcd60e51b81526004016103c590612875565b610c3f81611afc565b50565b6108ac33611afc565b6067546001600160a01b03163314610c755760405162461bcd60e51b81526004016103c590612875565b6108ac6000611806565b610c89848461107b565b15610ca65760405162461bcd60e51b81526004016103c5906128c3565b6000610cb38585856110a5565b905060cc60009054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b158015610d0357600080fd5b505afa158015610d17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3b919061258b565b6001600160a01b031663238a4d1e8683856040518463ffffffff1660e01b8152600401610d6a93929190612931565b602060405180830381600087803b158015610d8457600080fd5b505af1158015610d98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbc91906125bf565b610dd85760405162461bcd60e51b81526004016103c5906129a9565b6105238585600086611166565b6000610df1838361107b565b610e0d5760405162461bcd60e51b81526004016103c5906129fc565b506001600160a01b03918216600090815260ce6020908152604080832093835292905220541690565b6067546001600160a01b03163314610e605760405162461bcd60e51b81526004016103c590612875565b610c3f81611b7c565b610e72336108ae565b610e8e5760405162461bcd60e51b81526004016103c590612726565b6108ac611bf5565b80428111610eb65760405162461bcd60e51b81526004016103c590612570565b60cc54604080516314b47ed960e31b815290516000926001600160a01b03169163a5a3f6c8916004808301926020929190829003018186803b158015610efb57600080fd5b505afa158015610f0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f33919061258b565b604051636b074a0760e01b81529091506001600160a01b03821690636b074a0790610f62903390600401612491565b60206040518083038186803b158015610f7a57600080fd5b505afa158015610f8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb291906125bf565b610fce5760405162461bcd60e51b81526004016103c590612626565b6000855111610fef5760405162461bcd60e51b81526004016103c59061277e565b60008451116110105760405162461bcd60e51b81526004016103c5906127d6565b83518551146110315760405162461bcd60e51b81526004016103c590612833565b60005b8551811015610c045761105333878381518110610860576108606126ad565b61106933878381518110610bcb57610bcb6126ad565b80611073816126d9565b915050611034565b6001600160a01b03918216600090815260ce60209081526040808320938352929052205416151590565b60006110ba6110b58585856110c4565b611c4d565b90505b9392505050565b600060cf548484846040516020016110df9493929190612a0c565b6040516020818303038152906040528051906020012090509392505050565b6067546001600160a01b031633146111285760405162461bcd60e51b81526004016103c590612875565b6001600160a01b03811661114e5760405162461bcd60e51b81526004016103c590612a84565b610c3f81611806565b6001600160a01b03163b151590565b6001600160a01b03848116600090815260ce602090815260408083208784529091529081902080546001600160a01b03191692841692909217909155517f3848c851d32f9ec4e5737cee35fe6816770cfbcfd0096097933c80ffa0bc7c28906111d6908690869086908690612a94565b60405180910390a150505050565b6111ee83836105c3565b61120a5760405162461bcd60e51b81526004016103c590612af0565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561125857600080fd5b505afa15801561126c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611290919061258b565b6001600160a01b0316636b074a07846040518263ffffffff1660e01b81526004016112bb9190612491565b60206040518083038186803b1580156112d357600080fd5b505afa1580156112e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061130b91906125bf565b6113275760405162461bcd60e51b81526004016103c59061269d565b60008151116113485760405162461bcd60e51b81526004016103c590612b3f565b60005b815181101561173a576000828281518110611368576113686126ad565b60209081029190910101518051909150600181600481111561138c5761138c612b4f565b14156114c1578160200151516001146113b75760405162461bcd60e51b81526004016103c590612bad565b60cc60009054906101000a90046001600160a01b03166001600160a01b03166322b31aba6040518163ffffffff1660e01b815260040160206040518083038186803b15801561140557600080fd5b505afa158015611419573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143d919061258b565b6001600160a01b031663da5001a587878560200151600081518110611464576114646126ad565b60200260200101516040518463ffffffff1660e01b815260040161148a93929190612bbd565b600060405180830381600087803b1580156114a457600080fd5b505af11580156114b8573d6000803e3d6000fd5b50505050611725565b60028160048111156114d5576114d5612b4f565b141561154e578160200151516001146115005760405162461bcd60e51b81526004016103c590612c2d565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663f931ca566040518163ffffffff1660e01b815260040160206040518083038186803b15801561140557600080fd5b600381600481111561156257611562612b4f565b14156115db5781602001515160011461158d5760405162461bcd60e51b81526004016103c590612c85565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663a2d2f2db6040518163ffffffff1660e01b815260040160206040518083038186803b15801561140557600080fd5b60048160048111156115ef576115ef612b4f565b141561170d5781602001515160021461161a5760405162461bcd60e51b81526004016103c590612cdd565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663740e80616040518163ffffffff1660e01b815260040160206040518083038186803b15801561166857600080fd5b505afa15801561167c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a0919061258b565b6001600160a01b031663ed381188878785602001516000815181106116c7576116c76126ad565b602002602001015186602001516001815181106116e6576116e66126ad565b60200260200101516040518563ffffffff1660e01b815260040161148a9493929190612ced565b60405162461bcd60e51b81526004016103c590612d68565b50508080611732906126d9565b91505061134b565b507f0cc4f008775f50ff94480b827bff217f10b555c53b83873f4cd0918a9c241ae4838360405161176c929190612d78565b60405180910390a1505050565b60008054610100900460ff16156117c0578160ff16600114801561179c5750303b155b6117b85760405162461bcd60e51b81526004016103c590612dde565b506000919050565b60005460ff8084169116106117e75760405162461bcd60e51b81526004016103c590612dde565b506000805460ff191660ff92909216919091179055600190565b919050565b606780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610e605760405162461bcd60e51b81526004016103c590612e36565b600054610100900460ff166118a65760405162461bcd60e51b81526004016103c590612e36565b610c3f8180519060200120611c60565b600054610100900460ff166118dd5760405162461bcd60e51b81526004016103c590612e36565b610c3f81611c95565b6118f082826105c3565b1561190d5760405162461bcd60e51b81526004016103c590612e85565b60cc60009054906101000a90046001600160a01b03166001600160a01b031663a5a3f6c86040518163ffffffff1660e01b815260040160206040518083038186803b15801561195b57600080fd5b505afa15801561196f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611993919061258b565b6001600160a01b0316636b074a07336040518263ffffffff1660e01b81526004016119be9190612491565b60206040518083038186803b1580156119d657600080fd5b505afa1580156119ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0e91906125bf565b611a2a5760405162461bcd60e51b81526004016103c59061269d565b6001600160a01b038216600090815260cd6020908152604080832084845290915290819020805460ff19166001179055517f672144042732f7b1cdbf0772464ae545aedd7f41d38b8487dafd9085496a5d5190611a8a9084908490612d78565b60405180910390a15050565b60995460ff16611ab85760405162461bcd60e51b81526004016103c590612ec0565b6099805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b604051611af29190612491565b60405180910390a1565b611b05816108ae565b611b215760405162461bcd60e51b81526004016103c590612f04565b6001600160a01b038116600090815260cb602052604090819020805460ff19169055517fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90611b71908390612491565b60405180910390a150565b611b85816108ae565b15611ba25760405162461bcd60e51b81526004016103c590612f52565b6001600160a01b038116600090815260cb602052604090819020805460ff19166001179055517f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890611b71908390612491565b60995460ff1615611c185760405162461bcd60e51b81526004016103c590612f89565b6099805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611ae53390565b6000610700611c5a611d06565b83611d42565b60cf8190556040517fd5b7aa922fbc99b384e2da1530298f9f1f39cbaafe5584138c9a7031f594a34f90611b719083906124a5565b6001600160a01b038116611cbb5760405162461bcd60e51b81526004016103c590612fcd565b60cc80546001600160a01b0319166001600160a01b0383161790556040517f7aed1d3e8155a07ccf395e44ea3109a0e2d6c9b29bbbe9f142d9790596f4dc8090611b719083906124c7565b6000611d3d7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f611d3560015490565b600254611d75565b905090565b60008282604051602001611d57929190612fdd565b60405160208183030381529060405280519060200120905092915050565b600083838346306040516020016110df95949392919061300e565b60006001600160a01b038216610700565b611daa81611d90565b8114610c3f57600080fd5b803561070081611da1565b80611daa565b803561070081611dc0565b600080600060608486031215611de957611de9600080fd5b6000611df58686611db5565b9350506020611e0686828701611dc6565b9250506040611e1786828701611db5565b9150509250925092565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715611e5d57611e5d611e21565b6040525050565b6000611e6f60405190565b90506118018282611e37565b600067ffffffffffffffff821115611e9557611e95611e21565b5060209081020190565b60058110610c3f57600080fd5b803561070081611e9f565b6000611eca611ec584611e7b565b611e64565b83815290506020808201908402830185811115611ee957611ee9600080fd5b835b81811015611f0d5780611efe8882611dc6565b84525060209283019201611eeb565b5050509392505050565b600082601f830112611f2b57611f2b600080fd5b8135611f3b848260208601611eb7565b949350505050565b600060408284031215611f5857611f58600080fd5b611f626040611e64565b90506000611f708484611eac565b825250602082013567ffffffffffffffff811115611f9057611f90600080fd5b611f9c84828501611f17565b60208301525092915050565b6000611fb6611ec584611e7b565b83815290506020808201908402830185811115611fd557611fd5600080fd5b835b81811015611f0d57803567ffffffffffffffff811115611ff957611ff9600080fd5b8086016120068982611f43565b8552505060209283019201611fd7565b600082601f83011261202a5761202a600080fd5b8135611f3b848260208601611fa8565b60008060006060848603121561205257612052600080fd5b600061205e8686611dc6565b935050602084013567ffffffffffffffff81111561207e5761207e600080fd5b61208a86828701612016565b9250506040611e1786828701611dc6565b600067ffffffffffffffff8211156120b5576120b5611e21565b601f19601f83011660200192915050565b82818337506000910152565b60006120e0611ec58461209b565b9050828152602081018484840111156120fb576120fb600080fd5b6121068482856120c6565b509392505050565b600082601f83011261212257612122600080fd5b8135611f3b8482602086016120d2565b600061070082611d90565b611daa81612132565b80356107008161213d565b6000806000806080858703121561216a5761216a600080fd5b60006121768787611db5565b945050602061218787828801611db5565b935050604085013567ffffffffffffffff8111156121a7576121a7600080fd5b6121b38782880161210e565b92505060606121c487828801612146565b91505092959194509250565b600080604083850312156121e6576121e6600080fd5b60006121f28585611db5565b925050602061220385828601611dc6565b9150509250929050565b8015155b82525050565b60208101610700828461220d565b6000612233611ec584611e7b565b8381529050602080820190840283018581111561225257612252600080fd5b835b81811015611f0d57806122678882611dc6565b84525060209283019201612254565b600082601f83011261228a5761228a600080fd5b8135611f3b848260208601612225565b600080604083850312156122b0576122b0600080fd5b823567ffffffffffffffff8111156122ca576122ca600080fd5b6121f285828601612276565b6000602082840312156122eb576122eb600080fd5b6000611f3b8484611db5565b6000806040838503121561230d5761230d600080fd5b60006121f28585611dc6565b6000612327611ec584611e7b565b8381529050602080820190840283018581111561234657612346600080fd5b835b81811015611f0d57803567ffffffffffffffff81111561236a5761236a600080fd5b8086016123778982612016565b8552505060209283019201612348565b600082601f83011261239b5761239b600080fd5b8135611f3b848260208601612319565b6000806000606084860312156123c3576123c3600080fd5b833567ffffffffffffffff8111156123dd576123dd600080fd5b6123e986828701612276565b935050602084013567ffffffffffffffff81111561240957612409600080fd5b61208a86828701612387565b6000806000806080858703121561242e5761242e600080fd5b600061243a8787611db5565b945050602061244b87828801611dc6565b935050604061245c87828801611db5565b925050606085013567ffffffffffffffff81111561247c5761247c600080fd5b6121c48782880161210e565b61221181611d90565b602081016107008284612488565b80612211565b60208101610700828461249f565b600061070082612132565b612211816124b3565b6020810161070082846124be565b603481526000602082017f50726f7669646572436f6e74726f6c6c65723a2063616c6c6572206973206e6f8152731d081d1a194818dd5c9c995b9d081dd85b1b195d60621b602082015291505b5060400190565b60208082528101610700816124d5565b601e81526000602082017f50726f7669646572436f6e74726f6c6c65723a20747820657870697265640000815291505b5060200190565b6020808252810161070081612539565b80516107008161213d565b6000602082840312156125a0576125a0600080fd5b6000611f3b8484612580565b801515611daa565b8051610700816125ac565b6000602082840312156125d4576125d4600080fd5b6000611f3b84846125b4565b602981526000602082017f526f75746572577261707065723a2063616c6c6572206973206e6f742074686581526810383937bb34b232b960b91b60208201529150612522565b60208082528101610700816125e0565b600060ff8216610700565b61221181612636565b602081016107008284612641565b602881526000602082017f50726f7669646572436f6e74726f6c6c65723a206e6f6e6578697374656e7420815267383937bb34b232b960c11b60208201529150612522565b6020808252810161070081612658565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156126ed576126ed6126c3565b5060010190565b60208082527f5061757365723a2063616c6c6572206973206e6f74207468652070617573657291019081526000612569565b60208082528101610700816126f4565b602b81526000602082017f50726f7669646572436f6e74726f6c6c65723a20696e76616c6964206163636f81526a0eadce8e640d8cadccee8d60ab1b60208201529150612522565b6020808252810161070081612736565b602b81526000602082017f50726f7669646572436f6e74726f6c6c65723a20696e76616c6964207061796c81526a0dec2c8e640d8cadccee8d60ab1b60208201529150612522565b602080825281016107008161278e565b603081526000602082017f50726f7669646572436f6e74726f6c6c65723a20696e636f6e736974656e742081526f0e0c2e4c2dacae8cae440d8cadccee8d60831b60208201529150612522565b60208082528101610700816127e6565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526000612569565b6020808252810161070081612843565b602181526000602082017f50726f7669646572436f6e74726f6c6c65723a2077616c6c65742065786973748152607360f81b60208201529150612522565b6020808252810161070081612885565b60005b838110156128ee5781810151838201526020016128d6565b838111156103da5750506000910152565b6000612909825190565b8084526020840193506129208185602086016128d3565b601f01601f19169290920192915050565b6060810161293f8286612488565b61294c602083018561249f565b818103604083015261295e81846128ff565b95945050505050565b602581526000602082017f50726f7669646572436f6e74726f6c6c65723a20696e76616c6964207369676e815264617475726560d81b60208201529150612522565b6020808252810161070081612967565b602681526000602082017f50726f7669646572436f6e74726f6c6c65723a206e6f6e6578697374656e74208152651dd85b1b195d60d21b60208201529150612522565b60208082528101610700816129b9565b60808101612a1a828761249f565b612a276020830186612488565b612a34604083018561249f565b61295e6060830184612488565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150612522565b6020808252810161070081612a41565b60808101612aa28287612488565b612aaf602083018661249f565b612a346040830185612488565b601f81526000602082017f4163636f756e7452656769737472793a206163636f756e74206578697374730081529150612569565b6020808252810161070081612abc565b602281526000602082017f50726f7669646572436f6e74726f6c6c65723a20656d707479207061796c6f61815261647360f01b60208201529150612522565b6020808252810161070081612b00565b634e487b7160e01b600052602160045260246000fd5b603c815260006020820160008051602061305b83398151915281527f6e7473206c656e67746820666f72206275696c64696e672074696d650000000060208201529150612522565b6020808252810161070081612b65565b60608101612bcb8286612488565b612bd8602083018561249f565b611f3b604083018461249f565b6038815260006020820160008051602061305b83398151915281527f6e7473206c656e67746820666f722062616e647769647468000000000000000060208201529150612522565b6020808252810161070081612be5565b6039815260006020820160008051602061305b83398151915281527f6e7473206c656e67746820666f722061722073746f726167650000000000000060208201529150612522565b6020808252810161070081612c3d565b603b815260006020820160008051602061305b83398151915281527f6e7473206c656e67746820666f7220697066732073746f72616765000000000060208201529150612522565b6020808252810161070081612c95565b60808101612cfb8287612488565b612d08602083018661249f565b612d15604083018561249f565b61295e606083018461249f565b602981526000602082017f50726f7669646572436f6e74726f6c6c65723a20756e6b6e6f776e207265736f81526875726365207479706560b81b60208201529150612522565b6020808252810161070081612d22565b60408101612d868285612488565b6110bd602083018461249f565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b60208201529150612522565b6020808252810161070081612d93565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b60208201529150612522565b6020808252810161070081612dee565b602281526000602082017f50726f7669646572436f6e74726f6c6c65723a206163636f756e742065786973815261747360f01b60208201529150612522565b6020808252810161070081612e46565b601481526000602082017314185d5cd8589b194e881b9bdd081c185d5cd95960621b81529150612569565b6020808252810161070081612e95565b601d81526000602082017f5061757365723a206163636f756e74206973206e6f742070617573657200000081529150612569565b6020808252810161070081612ed0565b602181526000602082017f5061757365723a206163636f756e7420697320616c72656164792070617573658152603960f91b60208201529150612522565b6020808252810161070081612f14565b601081526000602082016f14185d5cd8589b194e881c185d5cd95960821b81529150612569565b6020808252810161070081612f62565b601b81526000602082017f526f75746572577261707065723a207a65726f2061646472657373000000000081529150612569565b6020808252810161070081612f99565b61190160f01b81526002016000612ff4828561249f565b602082019150613004828461249f565b5060200192915050565b60a0810161301c828861249f565b613029602083018761249f565b613036604083018661249f565b613043606083018561249f565b6130506080830184612488565b969550505050505056fe50726f7669646572436f6e74726f6c6c65723a20696e76616c696420616d6f75a264697066735822122064100ae601c9268c0a94fe7903fbcef017dfe1735e10fd544bb052d59086d82264736f6c63430008090033";
var ProviderController__factory = /** @class */ (function (_super) {
    __extends(ProviderController__factory, _super);
    function ProviderController__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (args.length === 1) {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        else {
            _this = _super.apply(this, args) || this;
        }
        return _this;
    }
    ProviderController__factory.prototype.deploy = function (overrides) {
        return _super.prototype.deploy.call(this, overrides || {});
    };
    ProviderController__factory.prototype.getDeployTransaction = function (overrides) {
        return _super.prototype.getDeployTransaction.call(this, overrides || {});
    };
    ProviderController__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    ProviderController__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    ProviderController__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    ProviderController__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    ProviderController__factory.bytecode = _bytecode;
    ProviderController__factory.abi = _abi;
    return ProviderController__factory;
}(ethers_1.ContractFactory));
exports.ProviderController__factory = ProviderController__factory;
