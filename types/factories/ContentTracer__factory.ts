/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ContentTracer, ContentTracerInterface } from "../ContentTracer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IIPFSStorageController",
        name: "controller",
        type: "address",
      },
    ],
    name: "ControllerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "content",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiration",
        type: "uint256",
      },
    ],
    name: "Insert",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IProviders",
        name: "providers",
        type: "address",
      },
    ],
    name: "ProvidersUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "content",
        type: "string",
      },
    ],
    name: "Remove",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "contentSizes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract IIPFSStorageController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "content",
        type: "string",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "contract IProviders",
        name: "providers",
        type: "address",
      },
      {
        internalType: "contract IIPFSStorageController",
        name: "controller",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "content",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "insert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "accounts",
        type: "bytes32[]",
      },
      {
        internalType: "string[]",
        name: "contents",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "sizes",
        type: "uint256[]",
      },
    ],
    name: "insertMult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "providers",
    outputs: [
      {
        internalType: "contract IProviders",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "content",
        type: "string",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "accounts",
        type: "bytes32[]",
      },
      {
        internalType: "string[]",
        name: "contents",
        type: "string[]",
      },
    ],
    name: "removeMult",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IIPFSStorageController",
        name: "_controller",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "content",
        type: "string",
      },
    ],
    name: "size",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061185d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063c0c53b8b1161008c578063e65da1e711610066578063e65da1e714610200578063f2fde38b14610213578063f77c479114610226578063f8401fe61461024657600080fd5b8063c0c53b8b146101c7578063db170125146101da578063de47238c146101ed57600080fd5b806392eefe9b116100c857806392eefe9b1461012e578063b3ecfa3a14610141578063b7ab288314610194578063bed17065146101b457600080fd5b8063715018a6146100ef57806375667dbe146100f95780638da5cb5b1461010c575b600080fd5b6100f761025f565b005b6100f7610107366004610fa9565b61029e565b6033546001600160a01b03166040516101259190611069565b60405180910390f35b6100f761013c366004611096565b6103fc565b61018761014f3660046110cb565b606660209081526000938452604080852082529284529190922082518084018301805192815290830193909201929092209190525481565b6040516101259190611132565b6101a76101a23660046110cb565b610432565b6040516101259190611148565b6100f76101c2366004611156565b61047d565b6100f76101d53660046111b7565b61054b565b6100f76101e83660046111fd565b6105da565b6100f76101fb366004611255565b61068a565b61018761020e3660046110cb565b6107ac565b6100f76102213660046112bd565b6108bf565b606554610239906001600160a01b031681565b60405161012591906112f2565b600054610239906201000090046001600160a01b031681565b6033546001600160a01b031633146102925760405162461bcd60e51b815260040161028990611335565b60405180910390fd5b61029c6000610914565b565b600054604051636b074a0760e01b8152620100009091046001600160a01b031690636b074a07906102d3903390600401611069565b60206040518083038186803b1580156102eb57600080fd5b505afa1580156102ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103239190611358565b61033f5760405162461bcd60e51b8152600401610289906113c2565b81518351146103605760405162461bcd60e51b815260040161028990611417565b80518351146103815760405162461bcd60e51b815260040161028990611417565b60005b83518110156103f6576103e4338583815181106103a3576103a3611427565b60200260200101518584815181106103bd576103bd611427565b60200260200101518585815181106103d7576103d7611427565b6020026020010151610966565b806103ee81611453565b915050610384565b50505050565b6033546001600160a01b031633146104265760405162461bcd60e51b815260040161028990611335565b61042f81610b5b565b50565b6001600160a01b038316600090815260666020908152604080832085845290915280822090516104639084906114bc565b908152604051908190036020019020541515949350505050565b806000811161049e5760405162461bcd60e51b815260040161028990611503565b600054604051636b074a0760e01b8152620100009091046001600160a01b031690636b074a07906104d3903390600401611069565b60206040518083038186803b1580156104eb57600080fd5b505afa1580156104ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105239190611358565b61053f5760405162461bcd60e51b8152600401610289906113c2565b6103f633858585610966565b600054610100900460ff166105665760005460ff161561056a565b303b155b6105865760405162461bcd60e51b81526004016102899061155e565b600054610100900460ff161580156105a8576000805461ffff19166101011790555b6105b184610914565b6105ba83610bb1565b6105c382610b5b565b80156103f6576000805461ff001916905550505050565b600054604051636b074a0760e01b8152620100009091046001600160a01b031690636b074a079061060f903390600401611069565b60206040518083038186803b15801561062757600080fd5b505afa15801561063b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065f9190611358565b61067b5760405162461bcd60e51b8152600401610289906113c2565b610686338383610be1565b5050565b600054604051636b074a0760e01b8152620100009091046001600160a01b031690636b074a07906106bf903390600401611069565b60206040518083038186803b1580156106d757600080fd5b505afa1580156106eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070f9190611358565b61072b5760405162461bcd60e51b8152600401610289906113c2565b805182511461074c5760405162461bcd60e51b815260040161028990611417565b60005b82518110156107a7576107953384838151811061076e5761076e611427565b602002602001015184848151811061078857610788611427565b6020026020010151610be1565b8061079f81611453565b91505061074f565b505050565b60008054604051636b074a0760e01b8152620100009091046001600160a01b031690636b074a07906107e2908790600401611069565b60206040518083038186803b1580156107fa57600080fd5b505afa15801561080e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108329190611358565b61084e5760405162461bcd60e51b8152600401610289906115ae565b610859848484610432565b6108755760405162461bcd60e51b8152600401610289906115fd565b6001600160a01b03841660009081526066602090815260408083208684529091529081902090516108a79084906114bc565b90815260200160405180910390205490509392505050565b6033546001600160a01b031633146108e95760405162461bcd60e51b815260040161028990611335565b6001600160a01b03811661090f5760405162461bcd60e51b815260040161028990611650565b61042f815b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80600081116109875760405162461bcd60e51b815260040161028990611503565b610992858585610432565b156109af5760405162461bcd60e51b815260040161028990611694565b6065546040516336d97f5960e11b81526001600160a01b0390911690636db2feb2906109df908790600401611132565b60206040518083038186803b1580156109f757600080fd5b505afa158015610a0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2f9190611358565b15610a4c5760405162461bcd60e51b8152600401610289906116d8565b6001600160a01b0385166000908152606660209081526040808320878452909152908190209051839190610a819086906114bc565b9081526040519081900360200181209190915560655463f74d561f60e01b82527fbf3b73929b09508ab734523ae2e03136d123d7011074b0ea845fd26e8749ed2c9187918791879187916001600160a01b039091169063f74d561f90610aeb908690600401611132565b60206040518083038186803b158015610b0357600080fd5b505afa158015610b17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3b91906116f3565b604051610b4c959493929190611746565b60405180910390a15050505050565b606580546001600160a01b0319166001600160a01b0383161790556040517f1304018cfe79741dcf02ba6b61d39cc4757d59395d03224d9925c7aa8300214690610ba69083906112f2565b60405180910390a150565b600054610100900460ff16610bd85760405162461bcd60e51b8152600401610289906117e1565b61042f81610c8c565b610bec838383610432565b610c085760405162461bcd60e51b8152600401610289906115fd565b6001600160a01b0383166000908152606660209081526040808320858452909152908190209051610c3a9083906114bc565b9081526020016040518091039020600090557f20b2a0e9bd2cadc08b645e5d8c204c6d86d3c23817b100e0346846e77a88d7c9838383604051610c7f939291906117f1565b60405180910390a1505050565b6000805462010000600160b01b031916620100006001600160a01b038416021790556040517fe63288198842f0dacdcbdc3f22dcd4e473d1f3cee7e10603ae6ddc3e667c528490610ba69083906112f2565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610d1a57610d1a610cde565b6040525050565b6000610d2c60405190565b9050610d388282610cf4565b919050565b600067ffffffffffffffff821115610d5757610d57610cde565b5060209081020190565b805b811461042f57600080fd5b8035610d7981610d61565b92915050565b6000610d92610d8d84610d3d565b610d21565b83815290506020808201908402830185811115610db157610db1600080fd5b835b81811015610dd55780610dc68882610d6e565b84525060209283019201610db3565b5050509392505050565b600082601f830112610df357610df3600080fd5b8135610e03848260208601610d7f565b949350505050565b600067ffffffffffffffff821115610e2557610e25610cde565b601f19601f83011660200192915050565b82818337506000910152565b6000610e50610d8d84610e0b565b905082815260208101848484011115610e6b57610e6b600080fd5b610e76848285610e36565b509392505050565b600082601f830112610e9257610e92600080fd5b8135610e03848260208601610e42565b6000610eb0610d8d84610d3d565b83815290506020808201908402830185811115610ecf57610ecf600080fd5b835b81811015610dd557803567ffffffffffffffff811115610ef357610ef3600080fd5b808601610f008982610e7e565b8552505060209283019201610ed1565b600082601f830112610f2457610f24600080fd5b8135610e03848260208601610ea2565b6000610f42610d8d84610d3d565b83815290506020808201908402830185811115610f6157610f61600080fd5b835b81811015610dd55780610f768882610d6e565b84525060209283019201610f63565b600082601f830112610f9957610f99600080fd5b8135610e03848260208601610f34565b600080600060608486031215610fc157610fc1600080fd5b833567ffffffffffffffff811115610fdb57610fdb600080fd5b610fe786828701610ddf565b935050602084013567ffffffffffffffff81111561100757611007600080fd5b61101386828701610f10565b925050604084013567ffffffffffffffff81111561103357611033600080fd5b61103f86828701610f85565b9150509250925092565b60006001600160a01b038216610d79565b61106381611049565b82525050565b60208101610d79828461105a565b6000610d7982611049565b610d6381611077565b8035610d7981611082565b6000602082840312156110ab576110ab600080fd5b6000610e03848461108b565b610d6381611049565b8035610d79816110b7565b6000806000606084860312156110e3576110e3600080fd5b60006110ef86866110c0565b935050602061110086828701610d6e565b925050604084013567ffffffffffffffff81111561112057611120600080fd5b61103f86828701610e7e565b80611063565b60208101610d79828461112c565b801515611063565b60208101610d798284611140565b60008060006060848603121561116e5761116e600080fd5b600061117a8686610d6e565b935050602084013567ffffffffffffffff81111561119a5761119a600080fd5b6111a686828701610e7e565b925050604061103f86828701610d6e565b6000806000606084860312156111cf576111cf600080fd5b60006111db86866110c0565b93505060206111ec8682870161108b565b925050604061103f8682870161108b565b6000806040838503121561121357611213600080fd5b600061121f8585610d6e565b925050602083013567ffffffffffffffff81111561123f5761123f600080fd5b61124b85828601610e7e565b9150509250929050565b6000806040838503121561126b5761126b600080fd5b823567ffffffffffffffff81111561128557611285600080fd5b61129185828601610ddf565b925050602083013567ffffffffffffffff8111156112b1576112b1600080fd5b61124b85828601610f10565b6000602082840312156112d2576112d2600080fd5b6000610e0384846110c0565b6000610d7982611077565b611063816112de565b60208101610d7982846112e9565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b60208082528101610d7981611300565b801515610d63565b8051610d7981611345565b60006020828403121561136d5761136d600080fd5b6000610e03848461134d565b602981526000602082017f436f6e74656e745472616365723a2063616c6c6572206973206e6f742074686581526810383937bb34b232b960b91b602082015291505b5060400190565b60208082528101610d7981611379565b602881526000602082017f436f6e74656e745472616365723a20496e76616c696420706172616d65746572815267103632b733ba341760c11b602082015291506113bb565b60208082528101610d79816113d2565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156114675761146761143d565b5060010190565b60005b83811015611489578181015183820152602001611471565b838111156103f65750506000910152565b60006114a4825190565b6114b281856020860161146e565b9290920192915050565b60006114c8828461149a565b9392505050565b601981526000602082017f436f6e74656e745472616365723a207a65726f2073697a652e000000000000008152915061132e565b60208082528101610d79816114cf565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291506113bb565b60208082528101610d7981611513565b602381526000602082017f436f6e74656e745472616365723a206e6f6e6578697374656e742070726f76698152623232b960e91b602082015291506113bb565b60208082528101610d798161156e565b602281526000602082017f436f6e74656e745472616365723a206e6f6e6578697374656e7420636f6e74658152611b9d60f21b602082015291506113bb565b60208082528101610d79816115be565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b602082015291506113bb565b60208082528101610d798161160d565b601d81526000602082017f436f6e74656e745472616365723a20636f6e74656e74206578697374730000008152915061132e565b60208082528101610d7981611660565b601e81526000602082017f436f6e74656e745472616365723a206163636f756e74206578706972656400008152915061132e565b60208082528101610d79816116a4565b8051610d7981610d61565b60006020828403121561170857611708600080fd5b6000610e0384846116e8565b600061171e825190565b80845260208401935061173581856020860161146e565b601f01601f19169290920192915050565b60a08101611754828861105a565b611761602083018761112c565b81810360408301526117738186611714565b9050611782606083018561112c565b61178f608083018461112c565b9695505050505050565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b602082015291506113bb565b60208082528101610d7981611799565b606081016117ff828661105a565b61180c602083018561112c565b818103604083015261181e8184611714565b9594505050505056fea26469706673582212208ffeb0f8eb4acc4046511c3328948605c6cbf4b99e6c5817d2b2fd2cbd21d9d064736f6c63430008090033";

export class ContentTracer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContentTracer> {
    return super.deploy(overrides || {}) as Promise<ContentTracer>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ContentTracer {
    return super.attach(address) as ContentTracer;
  }
  connect(signer: Signer): ContentTracer__factory {
    return super.connect(signer) as ContentTracer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContentTracerInterface {
    return new utils.Interface(_abi) as ContentTracerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContentTracer {
    return new Contract(address, _abi, signerOrProvider) as ContentTracer;
  }
}
