/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ResourceAdaptor,
  ResourceAdaptorInterface,
} from "../ResourceAdaptor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct ResourceAdaptor.PriceAdaptor[]",
        name: "adaptors",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct ResourceAdaptor.PriceAdaptor[]",
        name: "adaptors",
        type: "tuple[]",
      },
    ],
    name: "SetPriceAdaptors",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum ResourceData.ResourceType",
        name: "resourceType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_indexBlock",
        type: "uint256",
      },
    ],
    name: "getAmountAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ResourceData.ResourceType",
        name: "resourceType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "getAmountOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ResourceData.ResourceType",
        name: "resourceType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_indexBlock",
        type: "uint256",
      },
    ],
    name: "getValueAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ResourceData.ResourceType",
        name: "resourceType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getValueOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "indexBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct ResourceAdaptor.PriceAdaptor[]",
        name: "adaptors",
        type: "tuple[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ResourceData.ResourceType",
        name: "resourceType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_indexBlock",
        type: "uint256",
      },
    ],
    name: "priceAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ResourceData.ResourceType",
        name: "resourceType",
        type: "uint8",
      },
    ],
    name: "priceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum ResourceData.ResourceType",
            name: "resourceType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct ResourceAdaptor.PriceAdaptor[]",
        name: "adaptors",
        type: "tuple[]",
      },
    ],
    name: "setPriceAdaptors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001487380380620014878339810160408190526200003491620004aa565b600054610100900460ff16620000515760005460ff16156200005b565b6200005b620000d8565b620000835760405162461bcd60e51b81526004016200007a9062000557565b60405180910390fd5b600054610100900460ff16158015620000a6576000805461ffff19166101011790555b620000b183620000f6565b620000bc8262000148565b8015620000cf576000805461ff00191690555b505050620007a2565b6000620000f0306200018060201b6200041d1760201c565b15905090565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16620001725760405162461bcd60e51b81526004016200007a90620005b2565b6200017d816200018f565b50565b6001600160a01b03163b151590565b6000815111620001b35760405162461bcd60e51b81526004016200007a90620005f9565b60005b81518110156200028a576000828281518110620001d757620001d76200060b565b602002602001015160200151905060008111620002085760405162461bcd60e51b81526004016200007a9062000656565b80606660008585815181106200022257620002226200060b565b602002602001015160000151600481111562000242576200024262000668565b600481111562000256576200025662000668565b8152602080820192909252604090810160009081204382529092529020555080620002818162000694565b915050620001b6565b50436065556040517fdaf171519e682ab2dd913c4734ab5c4d25a84eae73f45aa041119c8c4b5c5ef590620002c190839062000788565b60405180910390a150565b60006001600160a01b0382165b92915050565b620002ea81620002cc565b81146200017d57600080fd5b8051620002d981620002df565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b038211171562000341576200034162000303565b6040525050565b60006200035460405190565b905062000362828262000319565b919050565b60006001600160401b0382111562000383576200038362000303565b5060209081020190565b600581106200017d57600080fd5b8051620002d9816200038d565b80620002ea565b8051620002d981620003a8565b600060408284031215620003d357620003d3600080fd5b620003df604062000348565b90506000620003ef84846200039b565b82525060206200040284848301620003af565b60208301525092915050565b6000620004256200041f8462000367565b62000348565b83815290506020810160408402830185811115620004465762000446600080fd5b835b818110156200047057806200045e8882620003bc565b84525060209092019160400162000448565b5050509392505050565b600082601f830112620004905762000490600080fd5b8151620004a28482602086016200040e565b949350505050565b60008060408385031215620004c257620004c2600080fd5b6000620004d08585620002f6565b92505060208301516001600160401b03811115620004f157620004f1600080fd5b620004ff858286016200047a565b9150509250929050565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291505b5060400190565b60208082528101620002d98162000509565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b6020820152915062000550565b60208082528101620002d98162000569565b60208082527f5265736f7572636541646170746f723a20696e76616c69642070726963657273910190815260005b5060200190565b60208082528101620002d981620005c4565b634e487b7160e01b600052603260045260246000fd5b601e81526000602082017f5265736f7572636541646170746f723a20696e76616c6964207072696365000081529150620005f2565b60208082528101620002d98162000621565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415620006ab57620006ab6200067e565b5060010190565b600581106200017d576200017d62000668565b806200036281620006b2565b6000620002d982620006c5565b620006e981620006d1565b82525050565b80620006e9565b80516040830190620007098482620006de565b5060208201516200071e6020850182620006ef565b50505050565b6000620007328383620006f6565b505060400190565b600062000745825190565b80845260209384019383018060005b838110156200077d5781516200076b888262000724565b97506020830192505060010162000754565b509495945050505050565b602080825281016200079b81846200073a565b9392505050565b610cd580620007b26000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639434023a116100715780639434023a1461013e578063a6170b5114610151578063a97f277214610164578063a9fd520f14610177578063c9a72f391461018a578063f2fde38b1461019357600080fd5b806327b54756146100b95780632e4a1a23146100ce57806368fbeb18146100e1578063715018a61461010a5780638da5cb5b14610112578063912397c31461012b575b600080fd5b6100cc6100c7366004610765565b6101a6565b005b6100cc6100dc3660046107c5565b6101e5565b6100f46100ef36600461081d565b61026b565b6040516101019190610858565b60405180910390f35b6100cc610289565b6033546001600160a01b0316604051610101919061086f565b6100f461013936600461087d565b6102bf565b6100f461014c36600461081d565b6102c9565b6100f461015f36600461081d565b610381565b6100f461017236600461089e565b610396565b6100f461018536600461089e565b6103ae565b6100f460655481565b6100cc6101a13660046108ee565b6103c4565b6033546001600160a01b031633146101d95760405162461bcd60e51b81526004016101d090610944565b60405180910390fd5b6101e28161042c565b50565b600054610100900460ff166102005760005460ff1615610204565b303b155b6102205760405162461bcd60e51b81526004016101d0906109a2565b600054610100900460ff16158015610242576000805461ffff19166101011790555b61024b83610551565b610254826105a3565b8015610266576000805461ff00191690555b505050565b60006102808261027a856102bf565b906105ca565b90505b92915050565b6033546001600160a01b031633146102b35760405162461bcd60e51b81526004016101d090610944565b6102bd6000610551565b565b6000610283826065545b6000606660008460048111156102e1576102e16109b2565b60048111156102f2576102f26109b2565b8152602001908152602001600020600083815260200190815260200160002054600014156103325760405162461bcd60e51b81526004016101d090610a08565b60666000846004811115610348576103486109b2565b6004811115610359576103596109b2565b8152602001908152602001600020600083815260200190815260200160002054905092915050565b600061028061038f846102bf565b83906105d6565b60006103a68361027a86856102c9565b949350505050565b60006103a66103bd85846102c9565b84906105d6565b6033546001600160a01b031633146103ee5760405162461bcd60e51b81526004016101d090610944565b6001600160a01b0381166104145760405162461bcd60e51b81526004016101d090610a5b565b6101e281610551565b6001600160a01b03163b151590565b600081511161044d5760405162461bcd60e51b81526004016101d090610a9d565b60005b815181101561051157600082828151811061046d5761046d610aad565b60200260200101516020015190506000811161049b5760405162461bcd60e51b81526004016101d090610af7565b80606660008585815181106104b2576104b2610aad565b60200260200101516000015160048111156104cf576104cf6109b2565b60048111156104e0576104e06109b2565b815260208082019290925260409081016000908120438252909252902055508061050981610b1d565b915050610450565b50436065556040517fdaf171519e682ab2dd913c4734ab5c4d25a84eae73f45aa041119c8c4b5c5ef590610546908390610bed565b60405180910390a150565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166101d95760405162461bcd60e51b81526004016101d090610c46565b60006102808284610c56565b60006102808284610c8b565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff8211171561061e5761061e6105e2565b6040525050565b600061063060405190565b905061063c82826105f8565b919050565b600067ffffffffffffffff82111561065b5761065b6105e2565b5060209081020190565b600581106101e257600080fd5b803561028381610665565b805b81146101e257600080fd5b80356102838161067d565b6000604082840312156106aa576106aa600080fd5b6106b46040610625565b905060006106c28484610672565b82525060206106d38484830161068a565b60208301525092915050565b60006106f26106ed84610641565b610625565b8381529050602081016040840283018581111561071157610711600080fd5b835b8181101561073757806107268882610695565b845250602090920191604001610713565b5050509392505050565b600082601f83011261075557610755600080fd5b81356103a68482602086016106df565b60006020828403121561077a5761077a600080fd5b813567ffffffffffffffff81111561079457610794600080fd5b6103a684828501610741565b60006001600160a01b038216610283565b61067f816107a0565b8035610283816107b1565b600080604083850312156107db576107db600080fd5b60006107e785856107ba565b925050602083013567ffffffffffffffff81111561080757610807600080fd5b61081385828601610741565b9150509250929050565b6000806040838503121561083357610833600080fd5b600061083f8585610672565b92505060206108138582860161068a565b805b82525050565b602081016102838284610850565b610852816107a0565b602081016102838284610866565b60006020828403121561089257610892600080fd5b60006103a68484610672565b6000806000606084860312156108b6576108b6600080fd5b60006108c28686610672565b93505060206108d38682870161068a565b92505060406108e48682870161068a565b9150509250925092565b60006020828403121561090357610903600080fd5b60006103a684846107ba565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572910190815260005b5060200190565b602080825281016102838161090f565b602e81526000602082017f496e697469616c697a61626c653a20636f6e747261637420697320616c72656181526d191e481a5b9a5d1a585b1a5e995960921b602082015291505b5060400190565b6020808252810161028381610954565b634e487b7160e01b600052602160045260246000fd5b602381526000602082017f5265736f7572636541646170746f723a20696e76616c696420696e646578426c8152626f636b60e81b6020820152915061099b565b60208082528101610283816109c8565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b6020820152915061099b565b6020808252810161028381610a18565b60208082527f5265736f7572636541646170746f723a20696e76616c696420707269636572739101908152600061093d565b6020808252810161028381610a6b565b634e487b7160e01b600052603260045260246000fd5b601e81526000602082017f5265736f7572636541646170746f723a20696e76616c696420707269636500008152915061093d565b6020808252810161028381610ac3565b634e487b7160e01b600052601160045260246000fd5b6000600019821415610b3157610b31610b07565b5060010190565b600581106101e2576101e26109b2565b8061063c81610b38565b600061028382610b48565b61085281610b52565b80516040830190610b778482610b5d565b506020820151610b8a6020850182610850565b50505050565b6000610b9c8383610b66565b505060400190565b6000610bae825190565b80845260209384019383018060005b83811015610be2578151610bd18882610b90565b975060208301925050600101610bbd565b509495945050505050565b602080825281016102808184610ba4565b602b81526000602082017f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206981526a6e697469616c697a696e6760a81b6020820152915061099b565b6020808252810161028381610bfe565b6000816000190483118215151615610c7057610c70610b07565b500290565b634e487b7160e01b600052601260045260246000fd5b600082610c9a57610c9a610c75565b50049056fea2646970667358221220748e7d5c2f6123c6112506ae2ef53068c6305ae2ecc97d25dbbcf6ea5aadedb064736f6c63430008090033";

export class ResourceAdaptor__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    owner: string,
    adaptors: { resourceType: BigNumberish; price: BigNumberish }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ResourceAdaptor> {
    return super.deploy(
      owner,
      adaptors,
      overrides || {}
    ) as Promise<ResourceAdaptor>;
  }
  getDeployTransaction(
    owner: string,
    adaptors: { resourceType: BigNumberish; price: BigNumberish }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(owner, adaptors, overrides || {});
  }
  attach(address: string): ResourceAdaptor {
    return super.attach(address) as ResourceAdaptor;
  }
  connect(signer: Signer): ResourceAdaptor__factory {
    return super.connect(signer) as ResourceAdaptor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ResourceAdaptorInterface {
    return new utils.Interface(_abi) as ResourceAdaptorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ResourceAdaptor {
    return new Contract(address, _abi, signerOrProvider) as ResourceAdaptor;
  }
}
