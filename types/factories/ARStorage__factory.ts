/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ARStorage, ARStorageInterface } from "../ARStorage";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "AddToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum ResourceData.ResourceType",
        name: "resourceType",
        type: "uint8",
      },
    ],
    name: "Buy",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "RemoveToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "SetPrice",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "account",
        type: "bytes32",
      },
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getValueOf",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20Upgradeable",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Resource.TokenPayload[]",
        name: "tokenPayloads",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "priceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "removeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "resourceType",
    outputs: [
      {
        internalType: "enum ResourceData.ResourceType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
    ],
    name: "tokenExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20Upgradeable",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600054610100900460ff1661002c5760005460ff1615610034565b6100346100d5565b61009b5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b600054610100900460ff161580156100bd576000805461ffff19166101011790555b80156100cf576000805461ff00191690555b506100ff565b60006100ea306100f060201b6106521760201c565b15905090565b6001600160a01b03163b151590565b61111f8061010e6000396000f3fe6080604052600436106100c15760003560e01c80638da5cb5b1161007f578063b95ed06f11610059578063b95ed06f146101fb578063d9caed121461021b578063f2fde38b1461023b578063f7d221901461025b57600080fd5b80638da5cb5b14610183578063af81c5b9146101ab578063b33f78ca146101cb57600080fd5b8062e4768b146100c657806334fb2078146100e85780635fa7b5841461011b578063715018a61461013b57806378133ffd146101505780638cb0233a14610163575b600080fd5b3480156100d257600080fd5b506100e66100e1366004610c95565b610282565b005b3480156100f457600080fd5b50610108610103366004610c95565b6102c3565b6040519081526020015b60405180910390f35b34801561012757600080fd5b506100e6610136366004610cc1565b610344565b34801561014757600080fd5b506100e661037a565b61010861015e366004610cde565b6103b0565b34801561016f57600080fd5b506100e661017e366004610d96565b610421565b34801561018f57600080fd5b506033546040516001600160a01b039091168152602001610112565b3480156101b757600080fd5b506100e66101c6366004610c95565b6104e8565b3480156101d757600080fd5b506101eb6101e6366004610cc1565b61051c565b6040519015158152602001610112565b34801561020757600080fd5b50610108610216366004610cc1565b610539565b34801561022757600080fd5b506100e6610236366004610e7c565b61057c565b34801561024757600080fd5b506100e6610256366004610cc1565b6105ba565b34801561026757600080fd5b506065546102759060ff1681565b6040516101129190610ee4565b6033546001600160a01b031633146102b55760405162461bcd60e51b81526004016102ac90610ef2565b60405180910390fd5b6102bf8282610661565b5050565b60006102ce8361051c565b61032a5760405162461bcd60e51b815260206004820152602760248201527f4f6e6554696d655265736f757263653a20746f6b656e206973206e6f742073756044820152661c1c1bdc9d195960ca1b60648201526084016102ac565b61033d8261033785610539565b906106df565b9392505050565b6033546001600160a01b0316331461036e5760405162461bcd60e51b81526004016102ac90610ef2565b610377816106f1565b50565b6033546001600160a01b031633146103a45760405162461bcd60e51b81526004016102ac90610ef2565b6103ae6000610781565b565b60006103bc83836102c3565b90506103d36001600160a01b0384163330846107d3565b6065546040517fd44fbe3678c3b8c2fa3f7790fcb569f9334c017cd9203a42d3a899688be8ef0d9161041291339188918891889160ff90911690610f27565b60405180910390a19392505050565b600054610100900460ff1661043c5760005460ff1615610440565b303b155b6104a35760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016102ac565b600054610100900460ff161580156104c5576000805461ffff19166101011790555b6104d183836003610844565b80156104e3576000805461ff00191690555b505050565b6033546001600160a01b031633146105125760405162461bcd60e51b81526004016102ac90610ef2565b6102bf8282610886565b6001600160a01b0316600090815260666020526040902054151590565b60006105448261051c565b6105605760405162461bcd60e51b81526004016102ac90610f64565b506001600160a01b031660009081526066602052604090205490565b6033546001600160a01b031633146105a65760405162461bcd60e51b81526004016102ac90610ef2565b6104e36001600160a01b0384168383610926565b6033546001600160a01b031633146105e45760405162461bcd60e51b81526004016102ac90610ef2565b6001600160a01b0381166106495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ac565b61037781610781565b6001600160a01b03163b151590565b61066a8261051c565b6106865760405162461bcd60e51b81526004016102ac90610f64565b6001600160a01b038216600081815260666020908152604091829020849055815192835282018390527f95dce27040c59c8b1c445b284f81a3aaae6eecd7d08d5c7684faee64cdb514a191015b60405180910390a15050565b600061033d8284610fb1565b92915050565b6106fa8161051c565b6107165760405162461bcd60e51b81526004016102ac90610f64565b6001600160a01b038116600081815260666020908152604091829020548251938452908301527f67f5552e5abc48ba6305130450943fa23b76a0b6eb18c29d3eea39559139fc5a910160405180910390a16001600160a01b0316600090815260666020526040812055565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516001600160a01b038085166024830152831660448201526064810182905261083e9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610956565b50505050565b600054610100900460ff1661086b5760405162461bcd60e51b81526004016102ac90610fd0565b61087483610a28565b61087d81610ab1565b6104e382610781565b61088f8261051c565b156108d55760405162461bcd60e51b81526020600482015260166024820152755265736f757263653a20746f6b656e2065787369747360501b60448201526064016102ac565b6001600160a01b038216600081815260666020908152604091829020849055815192835282018390527fe1bea1af9b1d1aede8b7fa043080de8690470a8ae61449360b3d0c0bf8104b4691016106d3565b6040516001600160a01b0383166024820152604481018290526104e390849063a9059cbb60e01b90606401610807565b60006109ab826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610aff9092919063ffffffff16565b8051909150156104e357808060200190518101906109c9919061101b565b6104e35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102ac565b600054610100900460ff16610a4f5760405162461bcd60e51b81526004016102ac90610fd0565b60005b81518110156102bf57610a9f828281518110610a7057610a7061103d565b602002602001015160000151838381518110610a8e57610a8e61103d565b602002602001015160200151610886565b80610aa981611053565b915050610a52565b600054610100900460ff16610ad85760405162461bcd60e51b81526004016102ac90610fd0565b6065805482919060ff19166001836004811115610af757610af7610eac565b021790555050565b6060610b0e8484600085610b16565b949350505050565b606082471015610b775760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102ac565b6001600160a01b0385163b610bce5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102ac565b600080866001600160a01b03168587604051610bea919061109a565b60006040518083038185875af1925050503d8060008114610c27576040519150601f19603f3d011682016040523d82523d6000602084013e610c2c565b606091505b5091509150610c3c828286610c47565b979650505050505050565b60608315610c5657508161033d565b825115610c665782518084602001fd5b8160405162461bcd60e51b81526004016102ac91906110b6565b6001600160a01b038116811461037757600080fd5b60008060408385031215610ca857600080fd5b8235610cb381610c80565b946020939093013593505050565b600060208284031215610cd357600080fd5b813561033d81610c80565b600080600060608486031215610cf357600080fd5b833592506020840135610d0581610c80565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610d4f57610d4f610d16565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610d7e57610d7e610d16565b604052919050565b8035610d9181610c80565b919050565b6000806040808486031215610daa57600080fd5b833567ffffffffffffffff80821115610dc257600080fd5b818601915086601f830112610dd657600080fd5b8135602082821115610dea57610dea610d16565b610df8818360051b01610d55565b828152818101935060069290921b840181019189831115610e1857600080fd5b938101935b82851015610e615785858b031215610e355760008081fd5b610e3d610d2c565b8535610e4881610c80565b8152858301358382015284529385019392810192610e1d565b9650610e6e888201610d86565b955050505050509250929050565b600080600060608486031215610e9157600080fd5b8335610e9c81610c80565b92506020840135610d0581610c80565b634e487b7160e01b600052602160045260246000fd5b60058110610ee057634e487b7160e01b600052602160045260246000fd5b9052565b602081016106eb8284610ec2565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b03868116825260208201869052841660408201526060810183905260a08101610f5a6080830184610ec2565b9695505050505050565b6020808252601b908201527f5265736f757263653a206e6f6e6578697374656e7420746f6b656e0000000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615610fcb57610fcb610f9b565b500290565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60006020828403121561102d57600080fd5b8151801515811461033d57600080fd5b634e487b7160e01b600052603260045260246000fd5b600060001982141561106757611067610f9b565b5060010190565b60005b83811015611089578181015183820152602001611071565b8381111561083e5750506000910152565b600082516110ac81846020870161106e565b9190910192915050565b60208152600082518060208401526110d581604085016020870161106e565b601f01601f1916919091016040019291505056fea264697066735822122054a3a370ef6f96a56e2c98ee08d70b6772d8056fe70ef9329b8bfb495fbd3f6d64736f6c63430008090033";

export class ARStorage__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ARStorage> {
    return super.deploy(overrides || {}) as Promise<ARStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ARStorage {
    return super.attach(address) as ARStorage;
  }
  connect(signer: Signer): ARStorage__factory {
    return super.connect(signer) as ARStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ARStorageInterface {
    return new utils.Interface(_abi) as ARStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ARStorage {
    return new Contract(address, _abi, signerOrProvider) as ARStorage;
  }
}
