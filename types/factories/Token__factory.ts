/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Token, TokenInterface } from "../Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000c3138038062000c31833981016040819052620000349162000154565b6200004d816c0c9f2c9cd04674edea4000000062000054565b50620001fb565b6001600160a01b038216620000865760405162461bcd60e51b81526004016200007d9062000181565b60405180910390fd5b80603560008282546200009a9190620001d3565b90915550506001600160a01b03821660009081526033602052604081208054839290620000c9908490620001d3565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200010e908590620001ee565b60405180910390a35050565b60006001600160a01b0382165b92915050565b62000138816200011a565b81146200014457600080fd5b50565b805162000127816200012d565b6000602082840312156200016b576200016b600080fd5b600062000179848462000147565b949350505050565b602080825281016200012781601f81527f45524332303a206d696e7420746f20746865207a65726f206164647265737300602082015260400190565b634e487b7160e01b600052601160045260246000fd5b60008219821115620001e957620001e9620001bd565b500190565b8181526020810162000127565b610a26806200020b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461011f57806370a082311461013257806395d89b411461015b578063a457c2d714610163578063a9059cbb14610176578063dd62ed3e1461018957600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ec57806323b872dd146100fd578063313ce56714610110575b600080fd5b6100b66101c2565b6040516100c391906105d2565b60405180910390f35b6100df6100da36600461062e565b610254565b6040516100c39190610675565b6035545b6040516100c39190610689565b6100df61010b366004610697565b61026e565b60126040516100c391906106f0565b6100df61012d36600461062e565b610292565b6100f06101403660046106fe565b6001600160a01b031660009081526033602052604090205490565b6100b66102d1565b6100df61017136600461062e565b6102e0565b6100df61018436600461062e565b61033d565b6100f0610197366004610727565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6060603680546101d190610770565b80601f01602080910402602001604051908101604052809291908181526020018280546101fd90610770565b801561024a5780601f1061021f5761010080835404028352916020019161024a565b820191906000526020600020905b81548152906001019060200180831161022d57829003601f168201915b5050505050905090565b60003361026281858561034b565b60019150505b92915050565b60003361027c8582856103ff565b610287858585610461565b506001949350505050565b3360008181526034602090815260408083206001600160a01b038716845290915281205490919061026290829086906102cc9087906107b3565b61034b565b6060603780546101d190610770565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909190838110156103305760405162461bcd60e51b815260040161032790610810565b60405180910390fd5b610287828686840361034b565b600033610262818585610461565b6001600160a01b0383166103715760405162461bcd60e51b815260040161032790610861565b6001600160a01b0382166103975760405162461bcd60e51b8152600401610327906108b0565b6001600160a01b0380841660008181526034602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103f2908590610689565b60405180910390a3505050565b6001600160a01b03838116600090815260346020908152604080832093861683529290522054600019811461045b578181101561044e5760405162461bcd60e51b8152600401610327906108c0565b61045b848484840361034b565b50505050565b6001600160a01b0383166104875760405162461bcd60e51b81526004016103279061093d565b6001600160a01b0382166104ad5760405162461bcd60e51b81526004016103279061098d565b6001600160a01b038316600090815260336020526040902054818110156104e65760405162461bcd60e51b8152600401610327906109e0565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061051d9084906107b3565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105679190610689565b60405180910390a361045b565b60005b8381101561058f578181015183820152602001610577565b8381111561045b5750506000910152565b60006105aa825190565b8084526020840193506105c1818560208601610574565b601f01601f19169290920192915050565b602080825281016105e381846105a0565b9392505050565b60006001600160a01b038216610268565b610604816105ea565b811461060f57600080fd5b50565b8035610268816105fb565b80610604565b80356102688161061d565b6000806040838503121561064457610644600080fd5b60006106508585610612565b925050602061066185828601610623565b9150509250929050565b8015155b82525050565b60208101610268828461066b565b8061066f565b602081016102688284610683565b6000806000606084860312156106af576106af600080fd5b60006106bb8686610612565b93505060206106cc86828701610612565b92505060406106dd86828701610623565b9150509250925092565b60ff811661066f565b6020810161026882846106e7565b60006020828403121561071357610713600080fd5b600061071f8484610612565b949350505050565b6000806040838503121561073d5761073d600080fd5b60006107498585610612565b925050602061066185828601610612565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061078457607f821691505b602082108114156107975761079761075a565b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156107c6576107c661079d565b500190565b602581526000602082017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77815264207a65726f60d81b602082015291505b5060400190565b60208082528101610268816107cb565b602481526000602082017f45524332303a20617070726f76652066726f6d20746865207a65726f206164648152637265737360e01b60208201529150610809565b6020808252810161026881610820565b602281526000602082017f45524332303a20617070726f766520746f20746865207a65726f206164647265815261737360f01b60208201529150610809565b6020808252810161026881610871565b6020808252810161026881601d81527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000602082015260400190565b602581526000602082017f45524332303a207472616e736665722066726f6d20746865207a65726f206164815264647265737360d81b60208201529150610809565b60208082528101610268816108fb565b602381526000602082017f45524332303a207472616e7366657220746f20746865207a65726f206164647281526265737360e81b60208201529150610809565b602080825281016102688161094d565b602681526000602082017f45524332303a207472616e7366657220616d6f756e7420657863656564732062815265616c616e636560d01b60208201529150610809565b602080825281016102688161099d56fea26469706673582212204acb63fe91b3a355cd4c44d4e17e2022b25bfb5576aee2a54400bd8320931a6e64736f6c63430008090033";

export class Token__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    account: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Token> {
    return super.deploy(account, overrides || {}) as Promise<Token>;
  }
  getDeployTransaction(
    account: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(account, overrides || {});
  }
  attach(address: string): Token {
    return super.attach(address) as Token;
  }
  connect(signer: Signer): Token__factory {
    return super.connect(signer) as Token__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TokenInterface {
    return new utils.Interface(_abi) as TokenInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Token {
    return new Contract(address, _abi, signerOrProvider) as Token;
  }
}
